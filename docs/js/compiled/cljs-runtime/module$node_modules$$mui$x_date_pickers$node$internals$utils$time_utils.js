shadow$provide.module$node_modules$$mui$x_date_pickers$node$internals$utils$time_utils = function(global, require, module, exports) {
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.resolveTimeFormat = exports.isTimeView = exports.isInternalTimeView = exports.getSecondsInDay = exports.getMeridiem = exports.createIsAfterIgnoreDatePart = exports.convertValueToMeridiem = exports.convertToMeridiem = void 0;
  var _views = require("module$node_modules$$mui$x_date_pickers$node$internals$utils$views");
  const timeViews = ["hours", "minutes", "seconds"];
  exports.isTimeView = view => timeViews.includes(view);
  exports.isInternalTimeView = view => timeViews.includes(view) || "meridiem" === view;
  exports.getMeridiem = (date, utils) => date ? 12 <= utils.getHours(date) ? "pm" : "am" : null;
  const convertValueToMeridiem = (value, meridiem, ampm) => ampm && (12 <= value ? "pm" : "am") !== meridiem ? "am" === meridiem ? value - 12 : value + 12 : value;
  exports.convertValueToMeridiem = convertValueToMeridiem;
  exports.convertToMeridiem = (time, meridiem, ampm, utils) => {
    meridiem = convertValueToMeridiem(utils.getHours(time), meridiem, ampm);
    return utils.setHours(time, meridiem);
  };
  const getSecondsInDay = (date, utils) => 3600 * utils.getHours(date) + 60 * utils.getMinutes(date) + utils.getSeconds(date);
  exports.getSecondsInDay = getSecondsInDay;
  exports.createIsAfterIgnoreDatePart = (disableIgnoringDatePartForTimeValidation, utils) => (dateLeft, dateRight) => disableIgnoringDatePartForTimeValidation ? utils.isAfter(dateLeft, dateRight) : getSecondsInDay(dateLeft, utils) > getSecondsInDay(dateRight, utils);
  exports.resolveTimeFormat = (utils, {format, views, ampm}) => {
    if (null != format) {
      return format;
    }
    utils = utils.formats;
    return (0,_views.areViewsEqual)(views, ["hours"]) ? ampm ? `${utils.hours12h} ${utils.meridiem}` : utils.hours24h : (0,_views.areViewsEqual)(views, ["minutes"]) ? utils.minutes : (0,_views.areViewsEqual)(views, ["seconds"]) ? utils.seconds : (0,_views.areViewsEqual)(views, ["minutes", "seconds"]) ? `${utils.minutes}:${utils.seconds}` : (0,_views.areViewsEqual)(views, ["hours", "minutes", "seconds"]) ? ampm ? `${utils.hours12h}:${utils.minutes}:${utils.seconds} ${utils.meridiem}` : `${utils.hours24h}:${utils.minutes}:${utils.seconds}` : 
    ampm ? `${utils.hours12h}:${utils.minutes} ${utils.meridiem}` : `${utils.hours24h}:${utils.minutes}`;
  };
};

//# sourceMappingURL=module$node_modules$$mui$x_date_pickers$node$internals$utils$time_utils.js.map
