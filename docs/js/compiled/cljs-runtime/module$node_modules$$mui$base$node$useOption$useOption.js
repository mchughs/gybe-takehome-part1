shadow$provide.module$node_modules$$mui$base$node$useOption$useOption = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  "use client";
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.useOption = function(params) {
    const {value, label, disabled, rootRef:optionRefParam, id:idParam} = params, {getRootProps:getListItemProps, highlighted, selected} = (0,_useList.useListItem)({item:value}), {getRootProps:getButtonProps, rootRef:buttonRefHandler} = (0,_useButton.useButton)({disabled, focusableWhenDisabled:!0}), id = (0,_utils.unstable_useId)(idParam), optionRef = React.useRef(null);
    params = React.useMemo(() => ({disabled, label, value, ref:optionRef, id}), [disabled, label, value, id]);
    ({index:params} = (0,_useCompound.useCompoundItem)(value, params));
    const handleRef = (0,_utils.unstable_useForkRef)(optionRefParam, optionRef, buttonRefHandler), createHandleKeyDown = otherHandlers => event => {
      var _otherHandlers$onKeyD;
      null == (_otherHandlers$onKeyD = otherHandlers.onKeyDown) || _otherHandlers$onKeyD.call(otherHandlers, event);
      !event.defaultMuiPrevented && [" ", "Enter"].includes(event.key) && (event.defaultMuiPrevented = !0);
    }, getOwnHandlers = (otherHandlers = {}) => ({onKeyDown:createHandleKeyDown(otherHandlers)});
    return {getRootProps:(externalProps = {}) => {
      const externalEventHandlers = (0,_extractEventHandlers.extractEventHandlers)(externalProps), getCombinedRootProps = (0,_combineHooksSlotProps.combineHooksSlotProps)(getListItemProps, (0,_combineHooksSlotProps.combineHooksSlotProps)(getButtonProps, getOwnHandlers));
      return (0,_extends2.default)({}, externalProps, externalEventHandlers, getCombinedRootProps(externalEventHandlers), {id, ref:handleRef, role:"option", "aria-selected":selected});
    }, highlighted, index:params, selected, rootRef:handleRef};
  };
  var _extends2 = global(require("module$node_modules$$babel$runtime$helpers$extends")), React = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index")), _utils = require("module$node_modules$$mui$utils$node$index"), _extractEventHandlers = require("module$node_modules$$mui$base$node$utils$extractEventHandlers"), _useList = require("module$node_modules$$mui$base$node$useList$index"), _useCompound = require("module$node_modules$$mui$base$node$useCompound$index"), _useButton = require("module$node_modules$$mui$base$node$useButton$index"), _combineHooksSlotProps = require("module$node_modules$$mui$base$node$utils$combineHooksSlotProps");
};

//# sourceMappingURL=module$node_modules$$mui$base$node$useOption$useOption.js.map
