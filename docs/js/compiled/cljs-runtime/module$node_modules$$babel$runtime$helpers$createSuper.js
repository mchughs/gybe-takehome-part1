shadow$provide.module$node_modules$$babel$runtime$helpers$createSuper = function(global, require, module, exports) {
  var getPrototypeOf = require("module$node_modules$$babel$runtime$helpers$getPrototypeOf"), isNativeReflectConstruct = require("module$node_modules$$babel$runtime$helpers$isNativeReflectConstruct"), possibleConstructorReturn = require("module$node_modules$$babel$runtime$helpers$possibleConstructorReturn");
  module.exports = function(Derived) {
    var hasNativeReflectConstruct = isNativeReflectConstruct();
    return function() {
      var Super = getPrototypeOf(Derived);
      if (hasNativeReflectConstruct) {
        var NewTarget = getPrototypeOf(this).constructor;
        Super = Reflect.construct(Super, arguments, NewTarget);
      } else {
        Super = Super.apply(this, arguments);
      }
      return possibleConstructorReturn(this, Super);
    };
  };
  module.exports.__esModule = !0;
  module.exports["default"] = module.exports;
};

//# sourceMappingURL=module$node_modules$$babel$runtime$helpers$createSuper.js.map
