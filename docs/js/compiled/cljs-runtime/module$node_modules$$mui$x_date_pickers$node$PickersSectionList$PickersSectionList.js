shadow$provide.module$node_modules$$mui$x_date_pickers$node$PickersSectionList$PickersSectionList = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  function PickersSection(props) {
    const {slots, slotProps, element, classes} = props;
    props = slots?.section ?? PickersSectionListSection;
    const sectionProps = (0,_utils.useSlotProps)({elementType:props, externalSlotProps:slotProps?.section, externalForwardedProps:element.container, className:classes.section, ownerState:{}}), SectionContent = slots?.sectionContent ?? PickersSectionListSectionContent, sectionContentProps = (0,_utils.useSlotProps)({elementType:SectionContent, externalSlotProps:slotProps?.sectionContent, externalForwardedProps:element.content, additionalProps:{suppressContentEditableWarning:!0}, className:classes.sectionContent, 
    ownerState:{}}), SectionSeparator = slots?.sectionSeparator ?? PickersSectionListSectionSeparator, sectionSeparatorBeforeProps = (0,_utils.useSlotProps)({elementType:SectionSeparator, externalSlotProps:slotProps?.sectionSeparator, externalForwardedProps:element.before, ownerState:{position:"before"}}), sectionSeparatorAfterProps = (0,_utils.useSlotProps)({elementType:SectionSeparator, externalSlotProps:slotProps?.sectionSeparator, externalForwardedProps:element.after, ownerState:{position:"after"}});
    return (0,_jsxRuntime.jsxs)(props, (0,_extends2.default)({}, sectionProps, {children:[(0,_jsxRuntime.jsx)(SectionSeparator, (0,_extends2.default)({}, sectionSeparatorBeforeProps)), (0,_jsxRuntime.jsx)(SectionContent, (0,_extends2.default)({}, sectionContentProps)), (0,_jsxRuntime.jsx)(SectionSeparator, (0,_extends2.default)({}, sectionSeparatorAfterProps))]}));
  }
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.PickersSectionListSectionSeparator = exports.PickersSectionListSectionContent = exports.PickersSectionListSection = exports.PickersSectionListRoot = exports.PickersSectionList = void 0;
  var _objectWithoutPropertiesLoose2 = global(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")), _extends2 = global(require("module$node_modules$$babel$runtime$helpers$extends")), React = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index"));
  module = global(require("module$node_modules$prop_types$index"));
  var _utils = require("module$node_modules$$mui$base$node$utils$index"), _composeClasses = global(require("module$node_modules$$mui$utils$node$composeClasses$index")), _useForkRef = global(require("module$node_modules$$mui$utils$node$useForkRef$index")), _styles = require("module$node_modules$$mui$material$node$styles$index"), _pickersSectionListClasses = require("module$node_modules$$mui$x_date_pickers$node$PickersSectionList$pickersSectionListClasses"), _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  const _excluded = ["slots", "slotProps", "elements", "sectionListRef"], PickersSectionListRoot = exports.PickersSectionListRoot = (0,_styles.styled)("div", {name:"MuiPickersSectionList", slot:"Root", overridesResolver:(props, styles) => styles.root})({direction:"ltr /*! @noflip */", outline:"none"}), PickersSectionListSection = exports.PickersSectionListSection = (0,_styles.styled)("span", {name:"MuiPickersSectionList", slot:"Section", overridesResolver:(props, styles) => styles.section})({}), 
  PickersSectionListSectionSeparator = exports.PickersSectionListSectionSeparator = (0,_styles.styled)("span", {name:"MuiPickersSectionList", slot:"SectionSeparator", overridesResolver:(props, styles) => styles.sectionSeparator})({whiteSpace:"pre"}), PickersSectionListSectionContent = exports.PickersSectionListSectionContent = (0,_styles.styled)("span", {name:"MuiPickersSectionList", slot:"SectionContent", overridesResolver:(props, styles) => styles.sectionContent})({outline:"none"}), useUtilityClasses = 
  ownerState => {
    ({classes:ownerState} = ownerState);
    return (0,_composeClasses.default)({root:["root"], section:["section"], sectionContent:["sectionContent"]}, _pickersSectionListClasses.getPickersSectionListUtilityClass, ownerState);
  };
  (exports.PickersSectionList = React.forwardRef(function(inProps, ref) {
    var props = (0,_styles.useThemeProps)({props:inProps, name:"MuiPickersSectionList"});
    const {slots, slotProps, elements, sectionListRef} = props;
    inProps = (0,_objectWithoutPropertiesLoose2.default)(props, _excluded);
    const classes = useUtilityClasses(props), rootRef = React.useRef(null);
    props = (0,_useForkRef.default)(ref, rootRef);
    const getRoot = methodName => {
      if (!rootRef.current) {
        throw Error(`MUI X: Cannot call sectionListRef.${methodName} before the mount of the component.`);
      }
      return rootRef.current;
    };
    React.useImperativeHandle(sectionListRef, () => ({getRoot() {
      return getRoot("getRoot");
    }, getSectionContainer(index) {
      return getRoot("getSectionContainer").querySelector(`.${_pickersSectionListClasses.pickersSectionListClasses.section}[data-sectionindex="${index}"]`);
    }, getSectionContent(index) {
      return getRoot("getSectionContent").querySelector(`.${_pickersSectionListClasses.pickersSectionListClasses.section}[data-sectionindex="${index}"] .${_pickersSectionListClasses.pickersSectionListClasses.sectionContent}`);
    }, getSectionIndexFromDOMElement(element) {
      var root = getRoot("getSectionIndexFromDOMElement");
      if (null == element || !root.contains(element)) {
        return null;
      }
      root = null;
      element.classList.contains(_pickersSectionListClasses.pickersSectionListClasses.section) ? root = element : element.classList.contains(_pickersSectionListClasses.pickersSectionListClasses.sectionContent) && (root = element.parentElement);
      return null == root ? null : Number(root.dataset.sectionindex);
    }}));
    ref = slots?.root ?? PickersSectionListRoot;
    inProps = (0,_utils.useSlotProps)({elementType:ref, externalSlotProps:slotProps?.root, externalForwardedProps:inProps, additionalProps:{ref:props, suppressContentEditableWarning:!0}, className:classes.root, ownerState:{}});
    return (0,_jsxRuntime.jsx)(ref, (0,_extends2.default)({}, inProps, {children:inProps.contentEditable ? elements.map(({content, before, after}) => `${before.children}${content.children}${after.children}`).join("") : (0,_jsxRuntime.jsx)(React.Fragment, {children:elements.map((element, elementIndex) => (0,_jsxRuntime.jsx)(PickersSection, {slots, slotProps, element, classes}, elementIndex))})}));
  })).propTypes = {classes:module.default.object, contentEditable:module.default.bool.isRequired, elements:module.default.arrayOf(module.default.shape({after:module.default.object.isRequired, before:module.default.object.isRequired, container:module.default.object.isRequired, content:module.default.object.isRequired})).isRequired, sectionListRef:module.default.oneOfType([module.default.func, module.default.shape({current:module.default.shape({getRoot:module.default.func.isRequired, getSectionContainer:module.default.func.isRequired, 
  getSectionContent:module.default.func.isRequired, getSectionIndexFromDOMElement:module.default.func.isRequired})})]), slotProps:module.default.object, slots:module.default.object};
};

//# sourceMappingURL=module$node_modules$$mui$x_date_pickers$node$PickersSectionList$PickersSectionList.js.map
