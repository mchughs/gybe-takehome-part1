{
"version":3,
"file":"module$node_modules$$mui$base$node$useBadge$useBadge.js",
"lineCount":13,
"mappings":"AAAAA,cAAA,CAAA,oDAAA,GAAyE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAEjH,cAAA;AAEAC,QAAOC,CAAAA,cAAP,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAH,SAAQI,CAAAA,QAAR,GAYAA,QAAiB,CAACC,UAAD,CAAa;AAC5B,UAAM,CACJ,aAAcC,gBADV,EAEJ,UAAWC,aAAA,GAAgB,CAAA,CAFvB,EAGJ,IAAKC,OAAA,GAAU,EAHX,EAIJC,QAAA,GAAW,CAAA,CAJP,CAAA,GAKFJ,UALJ,EAMMK,YAAY,GAAIC,MAAOC,CAAAA,gBAAX,EAA6B,CAC7CC,aAAcP,gBAD+B,EAE7CQ,IAAKN,OAFwC,CAA7B,CANlB;AAUA,QAAIO,YAAYR,aAAhB;AACsB,KAAA,CAAtB,KAAIA,aAAJ,IAAoD,CAApD,KAA+BD,gBAA/B,IAA0DG,QAA1D,KACEM,SADF,GACc,CAAA,CADd;AAGA,UAAM,CACJF,YADI,EAEJC,GAAA,GAAMN,OAFF,CAAA,GAGFO,SAAA,GAAYL,SAAZ,GAAwBL,UAH5B;AAKA,WAAO,CACLQ,YADK,EAELE,SAFK,EAGLD,GAHK,EAILE,aALmBH,YAAAG,IAAgBC,MAAA,CAAOJ,YAAP,CAAhBG,GAAuCF,GAAvCE,GAA8C,GAAEF,GAAF,GAA9CE,GAAyDH,YACvE,CAAP;AApB4B,GAZ9B;AACA,MAAIF,SAASb,OAAA,CAAQ,2CAAR,CAAb;AARiH,CAAjH;;",
"sources":["node_modules/@mui/base/node/useBadge/useBadge.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$base$node$useBadge$useBadge\"] = function(global,require,module,exports) {\n\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useBadge = useBadge;\nvar _utils = require(\"@mui/utils\");\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/base-ui/react-badge/#hook)\n *\n * API:\n *\n * - [useBadge API](https://mui.com/base-ui/react-badge/hooks-api/#use-badge)\n */\nfunction useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = (0, _utils.usePreviousProps)({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","useBadge","parameters","badgeContentProp","invisibleProp","maxProp","showZero","prevProps","_utils","usePreviousProps","badgeContent","max","invisible","displayValue","Number"]
}
