{"version":3,"sources":["core.cljs"],"mappings":";;;;AAUA,AAACA,2CAAaC;AACd,AAACD,2CAAaE;AAEd,iBAAA,jBAAMC;AAAN,AACE,IAAAC,gBAAA,AAAAC,8BAAA;AAAA,AAAA,IAAAC,2BAAAC;AAAA,AAAA,GAAA,CAAAD,4BAAA;AAAA;AAAA,IAAAE,yBAAAF;AAAA,AAAA,GAAA,CAAA,AAAAF,6BAAA,AAAAI;AAAA,AAAA,GAAAC;AAAA,AAAA,AAAA,EAAAC,wBAAAC,4BAAAC,eAAA,CAAA,iDAAA;;AAAA;;AAAA;;AAAA,CAAA,AAAAR,2BAAA,AAAAI;;;AAAA,IAAAK,YAAA,CAAA,AAAAT,yBAAA;WAAA,EAAA,EAAAS,eAAA,AAAAC,cAAA,AAAAV,6BAAA,SAAA,CAAAA,cAAA,mIAAA,CAAAA,cAAA,/OAAaY,oGAAK,AAACC,gDAAW,AAACC,AAAO,0CAAA,OAAA,jDAAiB,2DAAA,SAAA;iBAAvD,EAAA,EAAAL,eAAA,AAAAC,cAAA,AAAAV,6BAAA,SAAA,CAAAA,cAAA,0GAAA,CAAAA,cAAA,5NAEae,0GAAW,AAACF,gDAAO,AAAY,AAAkB,AAACG;kBAF/D,EAAA,EAAAP,eAAA,AAAAC,cAAA,AAAAV,6BAAA,SAAA,CAAAA,cAAA,mEAAA,CAAAA,cAAA,tLAGaiB,2GAAY,gDAAA,hDAACJ;IAH1BF,WAAA,AAAA,mFAAA,8DAAA,mFAAA,kDAAA,6BAAA,sHAAA,gIAAA,iIAAA,mFAAA,vXAMIO,sBAAsBN,gGACtBO,0BAA0BJ,sGAC1BI,0BAA0BF,0JACrB,CAAA,2DAAA,AAAAG,8BAAA,dAAqBH,mFAEXL,hBACD,AAAA,AAAAQ,yBAAA,AAAAA,4BAAA,ZAAML,zCACN,8DAAA,AAAAK,gBAAMH,9EACN,mGAAA;AAdlB,AAAAN;;AAgBF,mBAAA,nBAAMU;AAAN,AACE,YAAA,ZAACC;;AACD,wDAAA,jDAACC,oIAAaxB,uBACD,wBAAA,xBAACyB;;AAEhB,YAAA,ZAAMC;AAAN,AACE,YAAA,ZAACH;;AACD,OAACD;;AAEH","names":["js/module$node_modules$dayjs$dayjs_min.extend","js/module$node_modules$dayjs$plugin$utc","js/module$node_modules$dayjs$plugin$timezone","core/component","with-let28985","reagent.ratom/with-let-values","temp__5808__auto__","reagent.ratom/*ratom-context*","c__28329__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init28986","cljs.core/not","res28987","time","reagent.core.atom","js/module$node_modules$dayjs$dayjs_min","input-zone","js/Intl.DateTimeFormat","output-zone","time-picker/component","timezone-picker/component","cljs.core/deref","core/mount!","js/console.log","reagent.dom.render","js/document.getElementById","core/init"],"sourcesContent":["(ns core\n  (:require\n   [reagent.core :as r]\n   [reagent.dom :as rdom]\n   [time-picker :as time-picker]\n   [timezone-picker :as timezone-picker]\n   [\"dayjs\" :as dayjs]\n   [\"dayjs/plugin/utc\" :as utc]\n   [\"dayjs/plugin/timezone\" :as timezone]))\n\n(dayjs/extend utc)\n(dayjs/extend timezone)\n\n(defn component []\n  (r/with-let [time (r/atom (-> (dayjs) (.set \"hour\" 12) (.set \"minute\" 34)))\n               ;; Grab the user's timezone as a default\n               input-zone (r/atom (.-timeZone (.resolvedOptions (js/Intl.DateTimeFormat))))\n               output-zone (r/atom \"Etc/GMT\")]\n    [:div#root\n     [:h1 \"Timezone Converter\"]\n     [time-picker/component time]\n     [timezone-picker/component input-zone]\n     [timezone-picker/component output-zone]\n     [:div (str \"The time in \" @output-zone \" is...\" \n                ;; See https://day.js.org/docs/en/timezone/converting-to-zone\n                (-> @time\n                    (.tz @input-zone true)\n                    (.tz @output-zone)\n                    (.format \"LT\")))]]))\n\n(defn mount! []\n  (js/console.log \"Mounting...\")\n  (rdom/render [component]\n               (js/document.getElementById \"app\")))\n\n(defn init []\n  (js/console.log \"Starting...\")\n  (mount!))\n\n(comment\n  (init))\n"]}