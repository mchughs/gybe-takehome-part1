shadow$provide.module$node_modules$$mui$base$node$Select$Select = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  function defaultRenderValue(selectedOptions) {
    var _selectedOptions$labe;
    return Array.isArray(selectedOptions) ? (0,_jsxRuntime.jsx)(React.Fragment, {children:selectedOptions.map(o => o.label).join(", ")}) : null != (_selectedOptions$labe = null == selectedOptions ? void 0 : selectedOptions.label) ? _selectedOptions$labe : null;
  }
  function useUtilityClasses(ownerState) {
    const {active, disabled, open, focusVisible} = ownerState;
    return (0,_composeClasses.unstable_composeClasses)({root:["root", disabled && "disabled", focusVisible && "focusVisible", active && "active", open && "expanded"], listbox:["listbox", disabled && "disabled"], popup:["popup"]}, (0,_ClassNameConfigurator.useClassNamesOverride)(_selectClasses.getSelectUtilityClass));
  }
  "use client";
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.Select = void 0;
  var _extends2 = global(require("module$node_modules$$babel$runtime$helpers$extends")), _objectWithoutPropertiesLoose2 = global(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")), React = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index"));
  global = global(require("module$node_modules$prop_types$index"));
  var _utils = require("module$node_modules$$mui$utils$node$index"), _useSelect = require("module$node_modules$$mui$base$node$useSelect$index"), _utils2 = require("module$node_modules$$mui$base$node$utils$index"), _Popup = require("module$node_modules$$mui$base$node$Unstable_Popup$Popup"), _composeClasses = require("module$node_modules$$mui$base$node$composeClasses$index"), _selectClasses = require("module$node_modules$$mui$base$node$Select$selectClasses"), _defaultOptionStringifier = require("module$node_modules$$mui$base$node$useSelect$defaultOptionStringifier"), 
  _ClassNameConfigurator = require("module$node_modules$$mui$base$node$utils$ClassNameConfigurator"), _SelectProvider = require("module$node_modules$$mui$base$node$useSelect$SelectProvider"), _jsxRuntime = require("module$node_modules$react$jsx_runtime"), _span;
  const _excluded = "areOptionsEqual autoComplete autoFocus children defaultValue defaultListboxOpen disabled getSerializedValue listboxId listboxOpen multiple name required onChange onListboxOpenChange getOptionAsString renderValue placeholder slotProps slots value".split(" ");
  (exports.Select = React.forwardRef(function(props, forwardedRef) {
    var _slots$root, _slots$listbox, _slots$popup, _ref, _renderValue;
    const {areOptionsEqual, autoComplete, autoFocus, children, defaultValue, defaultListboxOpen = !1, disabled:disabledProp, getSerializedValue, listboxId, listboxOpen:listboxOpenProp, multiple = !1, name, required = !1, onChange, onListboxOpenChange, getOptionAsString = _defaultOptionStringifier.defaultOptionStringifier, renderValue:renderValueProp, placeholder, slotProps = {}, slots = {}, value:valueProp} = props;
    var other = (0,_objectWithoutPropertiesLoose2.default)(props, _excluded);
    const renderValue = null != renderValueProp ? renderValueProp : defaultRenderValue, [buttonDefined, setButtonDefined] = React.useState(!1), buttonRef = React.useRef(null);
    var listboxRef = React.useRef(null);
    const Button = null != (_slots$root = slots.root) ? _slots$root : "button";
    _slots$root = null != (_slots$listbox = slots.listbox) ? _slots$listbox : "ul";
    _slots$listbox = null != (_slots$popup = slots.popup) ? _slots$popup : "div";
    _slots$popup = React.useCallback(element => {
      setButtonDefined(null != element);
    }, []);
    forwardedRef = (0,_utils.unstable_useForkRef)(forwardedRef, buttonRef, _slots$popup);
    React.useEffect(() => {
      autoFocus && buttonRef.current.focus();
    }, [autoFocus]);
    const {buttonActive, buttonFocusVisible, contextValue, disabled, getButtonProps, getListboxProps, getHiddenInputProps, getOptionMetadata, value, open} = (0,_useSelect.useSelect)({name, required, getSerializedValue, areOptionsEqual, buttonRef:forwardedRef, defaultOpen:defaultListboxOpen, defaultValue, disabled:disabledProp, listboxId, multiple, open:listboxOpenProp, onChange, onOpenChange:onListboxOpenChange, getOptionAsString, value:valueProp, componentName:"Select"});
    props = (0,_extends2.default)({}, props, {active:buttonActive, defaultListboxOpen, disabled, focusVisible:buttonFocusVisible, open, multiple, renderValue, value});
    forwardedRef = useUtilityClasses(props);
    other = (0,_utils2.useSlotProps)({elementType:Button, getSlotProps:getButtonProps, externalSlotProps:slotProps.root, externalForwardedProps:other, ownerState:props, className:forwardedRef.root});
    listboxRef = (0,_utils2.useSlotProps)({elementType:_slots$root, getSlotProps:getListboxProps, externalSlotProps:slotProps.listbox, additionalProps:{ref:listboxRef}, ownerState:props, className:forwardedRef.listbox});
    props = (0,_utils2.useSlotProps)({elementType:_slots$listbox, externalSlotProps:slotProps.popup, additionalProps:{anchor:buttonRef.current, keepMounted:!0, open, placement:"bottom-start", role:void 0}, ownerState:props, className:forwardedRef.popup});
    if (multiple) {
      forwardedRef = value.map(v => getOptionMetadata(v)).filter(o => void 0 !== o);
    } else {
      var _getOptionMetadata;
      forwardedRef = null != (_getOptionMetadata = getOptionMetadata(value)) ? _getOptionMetadata : null;
    }
    return (0,_jsxRuntime.jsxs)(React.Fragment, {children:[(0,_jsxRuntime.jsx)(Button, (0,_extends2.default)({}, other, {children:null != (_ref = null != (_renderValue = renderValue(forwardedRef)) ? _renderValue : placeholder) ? _ref : _span || (_span = (0,_jsxRuntime.jsx)("span", {className:"notranslate", children:"â€‹"}))})), buttonDefined && (0,_jsxRuntime.jsx)(_Popup.Popup, (0,_extends2.default)({slots:{root:_slots$listbox}}, props, {children:(0,_jsxRuntime.jsx)(_slots$root, (0,_extends2.default)({}, 
    listboxRef, {children:(0,_jsxRuntime.jsx)(_SelectProvider.SelectProvider, {value:contextValue, children})}))})), (0,_jsxRuntime.jsx)("input", (0,_extends2.default)({}, getHiddenInputProps(), {autoComplete}))]});
  })).propTypes = {areOptionsEqual:global.default.func, autoComplete:global.default.string, autoFocus:global.default.bool, children:global.default.node, className:global.default.string, defaultListboxOpen:global.default.bool, defaultValue:global.default.any, disabled:global.default.bool, getOptionAsString:global.default.func, getSerializedValue:global.default.func, listboxId:global.default.string, listboxOpen:global.default.bool, multiple:global.default.bool, name:global.default.string, onChange:global.default.func, 
  onListboxOpenChange:global.default.func, placeholder:global.default.node, renderValue:global.default.func, required:global.default.bool, slotProps:global.default.shape({listbox:global.default.oneOfType([global.default.func, global.default.object]), popup:global.default.oneOfType([global.default.func, global.default.object]), root:global.default.oneOfType([global.default.func, global.default.object])}), slots:global.default.shape({listbox:global.default.elementType, popup:global.default.elementType, 
  root:global.default.elementType}), value:global.default.any};
};

//# sourceMappingURL=module$node_modules$$mui$base$node$Select$Select.js.map
