shadow$provide.module$node_modules$$mui$material$node$FormLabel$FormLabel = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }
  "use client";
  var _interopRequireDefault = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = exports.FormLabelRoot = void 0;
  var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")), _extends2 = _interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$extends"));
  module = _interopRequireWildcard(require("module$node_modules$react$index"));
  global = _interopRequireDefault(require("module$node_modules$prop_types$index"));
  var _clsx = _interopRequireDefault(require("module$node_modules$clsx$dist$clsx")), _composeClasses = _interopRequireDefault(require("module$node_modules$$mui$utils$node$composeClasses$index")), _formControlState = _interopRequireDefault(require("module$node_modules$$mui$material$node$FormControl$formControlState")), _useFormControl = _interopRequireDefault(require("module$node_modules$$mui$material$node$FormControl$useFormControl")), _capitalize = _interopRequireDefault(require("module$node_modules$$mui$material$node$utils$capitalize")), 
  _useThemeProps = _interopRequireDefault(require("module$node_modules$$mui$material$node$styles$useThemeProps"));
  _interopRequireDefault = _interopRequireDefault(require("module$node_modules$$mui$material$node$styles$styled"));
  var _formLabelClasses = _interopRequireWildcard(require("module$node_modules$$mui$material$node$FormLabel$formLabelClasses")), _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  const _excluded = "children className color component disabled error filled focused required".split(" "), FormLabelRoot = exports.FormLabelRoot = (0,_interopRequireDefault.default)("label", {name:"MuiFormLabel", slot:"Root", overridesResolver:({ownerState}, styles) => (0,_extends2.default)({}, styles.root, "secondary" === ownerState.color && styles.colorSecondary, ownerState.filled && styles.filled)})(({theme, ownerState}) => (0,_extends2.default)({color:(theme.vars || theme).palette.text.secondary}, 
  theme.typography.body1, {lineHeight:"1.4375em", padding:0, position:"relative", [`&.${_formLabelClasses.default.focused}`]:{color:(theme.vars || theme).palette[ownerState.color].main}, [`&.${_formLabelClasses.default.disabled}`]:{color:(theme.vars || theme).palette.text.disabled}, [`&.${_formLabelClasses.default.error}`]:{color:(theme.vars || theme).palette.error.main}})), AsteriskComponent = (0,_interopRequireDefault.default)("span", {name:"MuiFormLabel", slot:"Asterisk", overridesResolver:(props, 
  styles) => styles.asterisk})(({theme}) => ({[`&.${_formLabelClasses.default.error}`]:{color:(theme.vars || theme).palette.error.main}}));
  require = module.forwardRef(function(inProps, ref) {
    var props = (0,_useThemeProps.default)({props:inProps, name:"MuiFormLabel"});
    const {children, className, component = "label"} = props;
    inProps = (0,_objectWithoutPropertiesLoose2.default)(props, _excluded);
    var muiFormControl = (0,_useFormControl.default)();
    muiFormControl = (0,_formControlState.default)({props, muiFormControl, states:"color required focused disabled error filled".split(" ")});
    props = (0,_extends2.default)({}, props, {color:muiFormControl.color || "primary", component, disabled:muiFormControl.disabled, error:muiFormControl.error, filled:muiFormControl.filled, focused:muiFormControl.focused, required:muiFormControl.required});
    const {classes, color, focused, disabled, error, filled, required} = props;
    var JSCompiler_inline_result = {root:["root", `color${(0,_capitalize.default)(color)}`, disabled && "disabled", error && "error", filled && "filled", focused && "focused", required && "required"], asterisk:["asterisk", error && "error"]};
    JSCompiler_inline_result = (0,_composeClasses.default)(JSCompiler_inline_result, _formLabelClasses.getFormLabelUtilityClasses, classes);
    return (0,_jsxRuntime.jsxs)(FormLabelRoot, (0,_extends2.default)({as:component, ownerState:props, className:(0,_clsx.default)(JSCompiler_inline_result.root, className), ref}, inProps, {children:[children, muiFormControl.required && (0,_jsxRuntime.jsxs)(AsteriskComponent, {ownerState:props, "aria-hidden":!0, className:JSCompiler_inline_result.asterisk, children:["â€‰", "*"]})]}));
  });
  require.propTypes = {children:global.default.node, classes:global.default.object, className:global.default.string, color:global.default.oneOfType([global.default.oneOf("error info primary secondary success warning".split(" ")), global.default.string]), component:global.default.elementType, disabled:global.default.bool, error:global.default.bool, filled:global.default.bool, focused:global.default.bool, required:global.default.bool, sx:global.default.oneOfType([global.default.arrayOf(global.default.oneOfType([global.default.func, 
  global.default.object, global.default.bool])), global.default.func, global.default.object])};
  exports.default = require;
};

//# sourceMappingURL=module$node_modules$$mui$material$node$FormLabel$FormLabel.js.map
