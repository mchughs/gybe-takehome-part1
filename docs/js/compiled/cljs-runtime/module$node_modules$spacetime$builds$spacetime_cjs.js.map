{
"version":3,
"file":"module$node_modules$spacetime$builds$spacetime_cjs.js",
"lineCount":1651,
"mappings":"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",
"sources":["node_modules/spacetime/builds/spacetime.cjs"],
"sourcesContent":["shadow$provide[\"module$node_modules$spacetime$builds$spacetime_cjs\"] = function(global,require,module,exports) {\n/* spencermountain/spacetime 7.6.0 Apache 2.0 */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.spacetime = factory());\n})(this, (function () { 'use strict';\n\n  const MSEC_IN_HOUR = 60 * 60 * 1000;\n\n  //convert our local date syntax a javascript UTC date\n  const toUtc = (dstChange, offset, year) => {\n    const [month, rest] = dstChange.split('/');\n    const [day, hour] = rest.split(':');\n    return Date.UTC(year, month - 1, day, hour) - offset * MSEC_IN_HOUR\n  };\n\n  // compare epoch with dst change events (in utc)\n  const inSummerTime = (epoch, start, end, summerOffset, winterOffset) => {\n    const year = new Date(epoch).getUTCFullYear();\n    const startUtc = toUtc(start, winterOffset, year);\n    const endUtc = toUtc(end, summerOffset, year);\n    // simple number comparison now\n    return epoch >= startUtc && epoch < endUtc\n  };\n\n  var inSummerTime$1 = inSummerTime;\n\n  // this method avoids having to do a full dst-calculation on every operation\n  // it reproduces some things in ./index.js, but speeds up spacetime considerably\n  const quickOffset = s => {\n    let zones = s.timezones;\n    let obj = zones[s.tz];\n    if (obj === undefined) {\n      console.warn(\"Warning: couldn't find timezone \" + s.tz);\n      return 0\n    }\n    if (obj.dst === undefined) {\n      return obj.offset\n    }\n\n    //get our two possible offsets\n    let jul = obj.offset;\n    let dec = obj.offset + 1; // assume it's the same for now\n    if (obj.hem === 'n') {\n      dec = jul - 1;\n    }\n    let split = obj.dst.split('->');\n    let inSummer = inSummerTime$1(s.epoch, split[0], split[1], jul, dec);\n    if (inSummer === true) {\n      return jul\n    }\n    return dec\n  };\n  var quickOffset$1 = quickOffset;\n\n  var data = {\n    \"9|s\": \"2/dili,2/jayapura\",\n    \"9|n\": \"2/chita,2/khandyga,2/pyongyang,2/seoul,2/tokyo,2/yakutsk,11/palau,japan,rok\",\n    \"9.5|s|04/07:03->10/06:02\": \"4/adelaide,4/broken_hill,4/south,4/yancowinna\",\n    \"9.5|s\": \"4/darwin,4/north\",\n    \"8|s|03/13:01->10/02:00\": \"12/casey\",\n    \"8|s\": \"2/kuala_lumpur,2/makassar,2/singapore,4/perth,2/ujung_pandang,4/west,singapore\",\n    \"8|n\": \"2/brunei,2/choibalsan,2/hong_kong,2/irkutsk,2/kuching,2/macau,2/manila,2/shanghai,2/taipei,2/ulaanbaatar,2/chongqing,2/chungking,2/harbin,2/macao,2/ulan_bator,hongkong,prc,roc\",\n    \"8.75|s\": \"4/eucla\",\n    \"7|s\": \"12/davis,2/jakarta,9/christmas\",\n    \"7|n\": \"2/bangkok,2/barnaul,2/hovd,2/krasnoyarsk,2/novokuznetsk,2/novosibirsk,2/phnom_penh,2/pontianak,2/ho_chi_minh,2/tomsk,2/vientiane,2/saigon\",\n    \"6|s\": \"12/vostok\",\n    \"6|n\": \"2/almaty,2/bishkek,2/dhaka,2/omsk,2/qyzylorda,2/qostanay,2/thimphu,2/urumqi,9/chagos,2/dacca,2/kashgar,2/thimbu\",\n    \"6.5|n\": \"2/yangon,9/cocos,2/rangoon\",\n    \"5|s\": \"12/mawson,9/kerguelen\",\n    \"5|n\": \"2/aqtau,2/aqtobe,2/ashgabat,2/atyrau,2/dushanbe,2/karachi,2/oral,2/samarkand,2/tashkent,2/yekaterinburg,9/maldives,2/ashkhabad\",\n    \"5.75|n\": \"2/kathmandu,2/katmandu\",\n    \"5.5|n\": \"2/kolkata,2/colombo,2/calcutta\",\n    \"4|s\": \"9/reunion\",\n    \"4|n\": \"2/baku,2/dubai,2/muscat,2/tbilisi,2/yerevan,8/astrakhan,8/samara,8/saratov,8/ulyanovsk,8/volgograd,9/mahe,9/mauritius,2/volgograd\",\n    \"4.5|n\": \"2/kabul\",\n    \"3|s\": \"12/syowa,9/antananarivo\",\n    \"3|n|04/26:00->10/31:24\": \"0/cairo,egypt\",\n    \"3|n|04/20:02->10/26:02\": \"2/gaza,2/hebron\",\n    \"3|n|03/31:03->10/27:04\": \"2/famagusta,2/nicosia,8/athens,8/bucharest,8/helsinki,8/kyiv,8/mariehamn,8/riga,8/sofia,8/tallinn,8/uzhgorod,8/vilnius,8/zaporozhye,8/nicosia,8/kiev,eet\",\n    \"3|n|03/31:02->10/27:03\": \"8/chisinau,8/tiraspol\",\n    \"3|n|03/31:00->10/26:24\": \"2/beirut\",\n    \"3|n|03/29:02->10/27:02\": \"2/jerusalem,2/tel_aviv,israel\",\n    \"3|n\": \"0/addis_ababa,0/asmara,0/asmera,0/dar_es_salaam,0/djibouti,0/juba,0/kampala,0/mogadishu,0/nairobi,2/aden,2/amman,2/baghdad,2/bahrain,2/damascus,2/kuwait,2/qatar,2/riyadh,8/istanbul,8/kirov,8/minsk,8/moscow,8/simferopol,9/comoro,9/mayotte,2/istanbul,turkey,w-su\",\n    \"3.5|n\": \"2/tehran,iran\",\n    \"2|s|03/31:02->10/27:02\": \"12/troll\",\n    \"2|s\": \"0/gaborone,0/harare,0/johannesburg,0/lubumbashi,0/lusaka,0/maputo,0/maseru,0/mbabane\",\n    \"2|n|03/31:02->10/27:03\": \"0/ceuta,arctic/longyearbyen,8/amsterdam,8/andorra,8/belgrade,8/berlin,8/bratislava,8/brussels,8/budapest,8/busingen,8/copenhagen,8/gibraltar,8/ljubljana,8/luxembourg,8/madrid,8/malta,8/monaco,8/oslo,8/paris,8/podgorica,8/prague,8/rome,8/san_marino,8/sarajevo,8/skopje,8/stockholm,8/tirane,8/vaduz,8/vatican,8/vienna,8/warsaw,8/zagreb,8/zurich,3/jan_mayen,poland,cet,met\",\n    \"2|n\": \"0/blantyre,0/bujumbura,0/khartoum,0/kigali,0/tripoli,8/kaliningrad,libya\",\n    \"1|s\": \"0/brazzaville,0/kinshasa,0/luanda,0/windhoek\",\n    \"1|n|03/31:01->10/27:02\": \"3/canary,3/faroe,3/madeira,8/dublin,8/guernsey,8/isle_of_man,8/jersey,8/lisbon,8/london,3/faeroe,eire,8/belfast,gb-eire,gb,portugal,wet\",\n    \"1|n\": \"0/algiers,0/bangui,0/douala,0/lagos,0/libreville,0/malabo,0/ndjamena,0/niamey,0/porto-novo,0/tunis\",\n    \"14|n\": \"11/kiritimati\",\n    \"13|s\": \"11/apia,11/tongatapu\",\n    \"13|n\": \"11/enderbury,11/kanton,11/fakaofo\",\n    \"12|s|04/07:03->09/29:02\": \"12/mcmurdo,11/auckland,12/south_pole,nz\",\n    \"12|s\": \"11/fiji\",\n    \"12|n\": \"2/anadyr,2/kamchatka,2/srednekolymsk,11/funafuti,11/kwajalein,11/majuro,11/nauru,11/tarawa,11/wake,11/wallis,kwajalein\",\n    \"12.75|s|04/07:03->04/07:02\": \"11/chatham,nz-chat\",\n    \"11|s|04/07:03->10/06:02\": \"12/macquarie\",\n    \"11|s\": \"11/bougainville\",\n    \"11|n\": \"2/magadan,2/sakhalin,11/efate,11/guadalcanal,11/kosrae,11/noumea,11/pohnpei,11/ponape\",\n    \"11.5|n|04/07:03->10/06:02\": \"11/norfolk\",\n    \"10|s|04/07:03->10/06:02\": \"4/currie,4/hobart,4/melbourne,4/sydney,4/act,4/canberra,4/nsw,4/tasmania,4/victoria\",\n    \"10|s\": \"12/dumontdurville,4/brisbane,4/lindeman,11/port_moresby,4/queensland\",\n    \"10|n\": \"2/ust-nera,2/vladivostok,11/guam,11/saipan,11/chuuk,11/truk,11/yap\",\n    \"10.5|s|04/07:01->10/06:02\": \"4/lord_howe,4/lhi\",\n    \"0|s|03/10:03->04/14:02\": \"0/casablanca,0/el_aaiun\",\n    \"0|n|03/31:00->10/27:01\": \"1/scoresbysund,3/azores\",\n    \"0|n\": \"0/abidjan,0/accra,0/bamako,0/banjul,0/bissau,0/conakry,0/dakar,0/freetown,0/lome,0/monrovia,0/nouakchott,0/ouagadougou,0/sao_tome,1/danmarkshavn,3/reykjavik,3/st_helena,13/gmt,13/utc,0/timbuktu,13/greenwich,13/uct,13/universal,13/zulu,gmt-0,gmt+0,gmt0,greenwich,iceland,uct,universal,utc,zulu,13/unknown,factory\",\n    \"-9|n|03/10:02->11/03:02\": \"1/adak,1/atka,us/aleutian\",\n    \"-9|n\": \"11/gambier\",\n    \"-9.5|n\": \"11/marquesas\",\n    \"-8|n|03/10:02->11/03:02\": \"1/anchorage,1/juneau,1/metlakatla,1/nome,1/sitka,1/yakutat,us/alaska\",\n    \"-8|n\": \"11/pitcairn\",\n    \"-7|n|03/10:02->11/03:02\": \"1/los_angeles,1/santa_isabel,1/tijuana,1/vancouver,1/ensenada,6/pacific,10/bajanorte,us/pacific-new,us/pacific\",\n    \"-7|n\": \"1/creston,1/dawson,1/dawson_creek,1/fort_nelson,1/hermosillo,1/mazatlan,1/phoenix,1/whitehorse,6/yukon,10/bajasur,us/arizona,mst\",\n    \"-6|s|04/06:22->09/07:22\": \"11/easter,7/easterisland\",\n    \"-6|n|04/07:02->10/27:02\": \"1/merida\",\n    \"-6|n|03/10:02->11/03:02\": \"1/boise,1/cambridge_bay,1/denver,1/edmonton,1/inuvik,1/north_dakota,1/ojinaga,1/ciudad_juarez,1/yellowknife,1/shiprock,6/mountain,navajo,us/mountain\",\n    \"-6|n\": \"1/bahia_banderas,1/belize,1/chihuahua,1/costa_rica,1/el_salvador,1/guatemala,1/managua,1/mexico_city,1/monterrey,1/regina,1/swift_current,1/tegucigalpa,11/galapagos,6/east-saskatchewan,6/saskatchewan,10/general\",\n    \"-5|s\": \"1/lima,1/rio_branco,1/porto_acre,5/acre\",\n    \"-5|n|03/10:02->11/03:02\": \"1/chicago,1/matamoros,1/menominee,1/rainy_river,1/rankin_inlet,1/resolute,1/winnipeg,1/indiana/knox,1/indiana/tell_city,1/north_dakota/beulah,1/north_dakota/center,1/north_dakota/new_salem,1/knox_in,6/central,us/central,us/indiana-starke\",\n    \"-5|n\": \"1/bogota,1/cancun,1/cayman,1/coral_harbour,1/eirunepe,1/guayaquil,1/jamaica,1/panama,1/atikokan,jamaica,est\",\n    \"-4|s|04/06:24->09/08:00\": \"1/santiago,7/continental\",\n    \"-4|s|03/23:24->10/06:00\": \"1/asuncion\",\n    \"-4|s\": \"1/campo_grande,1/cuiaba,1/la_paz,1/manaus,5/west\",\n    \"-4|n|03/10:02->11/03:02\": \"1/detroit,1/grand_turk,1/indiana,1/indianapolis,1/iqaluit,1/kentucky,1/louisville,1/montreal,1/nassau,1/new_york,1/nipigon,1/pangnirtung,1/port-au-prince,1/thunder_bay,1/toronto,1/indiana/marengo,1/indiana/petersburg,1/indiana/vevay,1/indiana/vincennes,1/indiana/winamac,1/kentucky/monticello,1/fort_wayne,1/indiana/indianapolis,1/kentucky/louisville,6/eastern,us/east-indiana,us/eastern,us/michigan\",\n    \"-4|n|03/10:00->11/03:01\": \"1/havana,cuba\",\n    \"-4|n\": \"1/anguilla,1/antigua,1/aruba,1/barbados,1/blanc-sablon,1/boa_vista,1/caracas,1/curacao,1/dominica,1/grenada,1/guadeloupe,1/guyana,1/kralendijk,1/lower_princes,1/marigot,1/martinique,1/montserrat,1/port_of_spain,1/porto_velho,1/puerto_rico,1/santo_domingo,1/st_barthelemy,1/st_kitts,1/st_lucia,1/st_thomas,1/st_vincent,1/tortola,1/virgin\",\n    \"-3|s\": \"1/argentina,1/buenos_aires,1/catamarca,1/cordoba,1/fortaleza,1/jujuy,1/mendoza,1/montevideo,1/punta_arenas,1/sao_paulo,12/palmer,12/rothera,3/stanley,1/argentina/la_rioja,1/argentina/rio_gallegos,1/argentina/salta,1/argentina/san_juan,1/argentina/san_luis,1/argentina/tucuman,1/argentina/ushuaia,1/argentina/comodrivadavia,1/argentina/buenos_aires,1/argentina/catamarca,1/argentina/cordoba,1/argentina/jujuy,1/argentina/mendoza,1/argentina/rosario,1/rosario,5/east\",\n    \"-3|n|03/10:02->11/03:02\": \"1/glace_bay,1/goose_bay,1/halifax,1/moncton,1/thule,3/bermuda,6/atlantic\",\n    \"-3|n\": \"1/araguaina,1/bahia,1/belem,1/cayenne,1/maceio,1/paramaribo,1/recife,1/santarem\",\n    \"-2|n|03/30:22->10/26:23\": \"1/nuuk,1/godthab\",\n    \"-2|n|03/10:02->11/03:02\": \"1/miquelon\",\n    \"-2|n\": \"1/noronha,3/south_georgia,5/denoronha\",\n    \"-2.5|n|03/10:02->11/03:02\": \"1/st_johns,6/newfoundland\",\n    \"-1|n\": \"3/cape_verde\",\n    \"-11|n\": \"11/midway,11/niue,11/pago_pago,11/samoa,us/samoa\",\n    \"-10|n\": \"11/honolulu,11/johnston,11/rarotonga,11/tahiti,us/hawaii,hst\"\n  };\n\n  //prefixes for iana names..\n  var prefixes = [\n    'africa',\n    'america',\n    'asia',\n    'atlantic',\n    'australia',\n    'brazil',\n    'canada',\n    'chile',\n    'europe',\n    'indian',\n    'mexico',\n    'pacific',\n    'antarctica',\n    'etc'\n  ];\n\n  let all = {};\n  Object.keys(data).forEach((k) => {\n    let split = k.split('|');\n    let obj = {\n      offset: Number(split[0]),\n      hem: split[1]\n    };\n    if (split[2]) {\n      obj.dst = split[2];\n    }\n    let names = data[k].split(',');\n    names.forEach((str) => {\n      str = str.replace(/(^[0-9]+)\\//, (before, num) => {\n        num = Number(num);\n        return prefixes[num] + '/'\n      });\n      all[str] = obj;\n    });\n  });\n\n  all.utc = {\n    offset: 0,\n    hem: 'n' //default to northern hemisphere - (sorry!)\n  };\n\n  //add etc/gmt+n\n  for (let i = -14; i <= 14; i += 0.5) {\n    let num = i;\n    if (num > 0) {\n      num = '+' + num;\n    }\n    let name = 'etc/gmt' + num;\n    all[name] = {\n      offset: i * -1, //they're negative!\n      hem: 'n' //(sorry)\n    };\n    name = 'utc/gmt' + num; //this one too, why not.\n    all[name] = {\n      offset: i * -1,\n      hem: 'n'\n    };\n  }\n\n  var zones = all;\n\n  //find the implicit iana code for this machine.\n  //safely query the Intl object\n  //based on - https://bitbucket.org/pellepim/jstimezonedetect/src\n  const fallbackTZ = 'utc'; //\n\n  //this Intl object is not supported often, yet\n  const safeIntl = () => {\n    if (typeof Intl === 'undefined' || typeof Intl.DateTimeFormat === 'undefined') {\n      return null\n    }\n    let format = Intl.DateTimeFormat();\n    if (typeof format === 'undefined' || typeof format.resolvedOptions === 'undefined') {\n      return null\n    }\n    let timezone = format.resolvedOptions().timeZone;\n    if (!timezone) {\n      return null\n    }\n    return timezone.toLowerCase()\n  };\n\n  const guessTz = () => {\n    let timezone = safeIntl();\n    if (timezone === null) {\n      return fallbackTZ\n    }\n    return timezone\n  };\n  //do it once per computer\n  var guessTz$1 = guessTz;\n\n  const isOffset = /(\\-?[0-9]+)h(rs)?/i;\n  const isNumber = /(\\-?[0-9]+)/;\n  const utcOffset = /utc([\\-+]?[0-9]+)/i;\n  const gmtOffset = /gmt([\\-+]?[0-9]+)/i;\n\n  const toIana = function (num) {\n    num = Number(num);\n    if (num >= -13 && num <= 13) {\n      num = num * -1; //it's opposite!\n      num = (num > 0 ? '+' : '') + num; //add plus sign\n      return 'etc/gmt' + num\n    }\n    return null\n  };\n\n  const parseOffset$2 = function (tz) {\n    // '+5hrs'\n    let m = tz.match(isOffset);\n    if (m !== null) {\n      return toIana(m[1])\n    }\n    // 'utc+5'\n    m = tz.match(utcOffset);\n    if (m !== null) {\n      return toIana(m[1])\n    }\n    // 'GMT-5' (not opposite)\n    m = tz.match(gmtOffset);\n    if (m !== null) {\n      let num = Number(m[1]) * -1;\n      return toIana(num)\n    }\n    // '+5'\n    m = tz.match(isNumber);\n    if (m !== null) {\n      return toIana(m[1])\n    }\n    return null\n  };\n  var parseOffset$3 = parseOffset$2;\n\n  let local = guessTz$1();\n\n  //add all the city names by themselves\n  const cities = Object.keys(zones).reduce((h, k) => {\n    let city = k.split('/')[1] || '';\n    city = city.replace(/_/g, ' ');\n    h[city] = k;\n    return h\n  }, {});\n\n  //try to match these against iana form\n  const normalize$3 = (tz) => {\n    tz = tz.replace(/ time/g, '');\n    tz = tz.replace(/ (standard|daylight|summer)/g, '');\n    tz = tz.replace(/\\b(east|west|north|south)ern/g, '$1');\n    tz = tz.replace(/\\b(africa|america|australia)n/g, '$1');\n    tz = tz.replace(/\\beuropean/g, 'europe');\n    tz = tz.replace(/\\islands/g, 'island');\n    return tz\n  };\n\n  // try our best to reconcile the timzone to this given string\n  const lookupTz = (str, zones) => {\n    if (!str) {\n      // guard if Intl response is unsupported (#397)\n      if (!zones.hasOwnProperty(local)) {\n        console.warn(`Unrecognized IANA id '${local}'. Setting fallback tz to UTC.`);\n        local = 'utc';\n      }\n      return local\n    }\n    if (typeof str !== 'string') {\n      console.error(\"Timezone must be a string - recieved: '\", str, \"'\\n\");\n    }\n    let tz = str.trim();\n    // let split = str.split('/')\n    //support long timezones like 'America/Argentina/Rio_Gallegos'\n    // if (split.length > 2 && zones.hasOwnProperty(tz) === false) {\n    //   tz = split[0] + '/' + split[1]\n    // }\n    tz = tz.toLowerCase();\n    if (zones.hasOwnProperty(tz) === true) {\n      return tz\n    }\n    //lookup more loosely..\n    tz = normalize$3(tz);\n    if (zones.hasOwnProperty(tz) === true) {\n      return tz\n    }\n    //try city-names\n    if (cities.hasOwnProperty(tz) === true) {\n      return cities[tz]\n    }\n    // //try to parse '-5h'\n    if (/[0-9]/.test(tz) === true) {\n      let id = parseOffset$3(tz);\n      if (id) {\n        return id\n      }\n    }\n\n    throw new Error(\n      \"Spacetime: Cannot find timezone named: '\" + str + \"'. Please enter an IANA timezone id.\"\n    )\n  };\n  var findTz = lookupTz;\n\n  //git:blame @JuliasCaesar https://www.timeanddate.com/date/leapyear.html\n  function isLeapYear(year) { return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0 }\n  // unsurprisingly-nasty `typeof date` call\n  function isDate(d) { return Object.prototype.toString.call(d) === '[object Date]' && !isNaN(d.valueOf()) }\n  function isArray(input) { return Object.prototype.toString.call(input) === '[object Array]' }\n  function isObject(input) { return Object.prototype.toString.call(input) === '[object Object]' }\n  function isBoolean(input) { return Object.prototype.toString.call(input) === '[object Boolean]' }\n\n  function zeroPad(str, len = 2) {\n    let pad = '0';\n    str = str + '';\n    return str.length >= len ? str : new Array(len - str.length + 1).join(pad) + str\n  }\n\n  function titleCase$1(str) {\n    if (!str) {\n      return ''\n    }\n    return str[0].toUpperCase() + str.substr(1)\n  }\n\n  function ordinal(i) {\n    let j = i % 10;\n    let k = i % 100;\n    if (j === 1 && k !== 11) {\n      return i + 'st'\n    }\n    if (j === 2 && k !== 12) {\n      return i + 'nd'\n    }\n    if (j === 3 && k !== 13) {\n      return i + 'rd'\n    }\n    return i + 'th'\n  }\n\n  //strip 'st' off '1st'..\n  function toCardinal(str) {\n    str = String(str);\n    str = str.replace(/([0-9])(st|nd|rd|th)$/i, '$1');\n    return parseInt(str, 10)\n  }\n\n  //used mostly for cleanup of unit names, like 'months'\n  function normalize$2(str = '') {\n    str = str.toLowerCase().trim();\n    str = str.replace(/ies$/, 'y'); //'centuries'\n    str = str.replace(/s$/, '');\n    str = str.replace(/-/g, '');\n    if (str === 'day' || str === 'days') {\n      return 'date'\n    }\n    if (str === 'min' || str === 'mins') {\n      return 'minute'\n    }\n    return str\n  }\n\n  function getEpoch(tmp) {\n    //support epoch\n    if (typeof tmp === 'number') {\n      return tmp\n    }\n    //suport date objects\n    if (isDate(tmp)) {\n      return tmp.getTime()\n    }\n    if (tmp.epoch) {\n      return tmp.epoch\n    }\n    return null\n  }\n\n  //make sure this input is a spacetime obj\n  function beADate(d, s) {\n    if (isObject(d) === false) {\n      return s.clone().set(d)\n    }\n    return d\n  }\n\n  function formatTimezone(offset, delimiter = '') {\n    const sign = offset > 0 ? '+' : '-';\n    const absOffset = Math.abs(offset);\n    const hours = zeroPad(parseInt('' + absOffset, 10));\n    const minutes = zeroPad((absOffset % 1) * 60);\n    return `${sign}${hours}${delimiter}${minutes}`\n  }\n\n  const defaults$1 = {\n    year: new Date().getFullYear(),\n    month: 0,\n    date: 1\n  };\n\n  //support [2016, 03, 01] format\n  const parseArray$1 = (s, arr, today) => {\n    if (arr.length === 0) {\n      return s\n    }\n    let order = ['year', 'month', 'date', 'hour', 'minute', 'second', 'millisecond'];\n    for (let i = 0; i < order.length; i++) {\n      let num = arr[i] || today[order[i]] || defaults$1[order[i]] || 0;\n      s = s[order[i]](num);\n    }\n    return s\n  };\n\n  //support {year:2016, month:3} format\n  const parseObject$1 = (s, obj, today) => {\n    // if obj is empty, do nothing\n    if (Object.keys(obj).length === 0) {\n      return s\n    }\n    obj = Object.assign({}, defaults$1, today, obj);\n    let keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n      let unit = keys[i];\n      //make sure we have this method\n      if (s[unit] === undefined || typeof s[unit] !== 'function') {\n        continue\n      }\n      //make sure the value is a number\n      if (obj[unit] === null || obj[unit] === undefined || obj[unit] === '') {\n        continue\n      }\n      let num = obj[unit] || today[unit] || defaults$1[unit] || 0;\n      s = s[unit](num);\n    }\n    return s\n  };\n\n  // this may seem like an arbitrary number, but it's 'within jan 1970'\n  // this is only really ambiguous until 2054 or so\n  const parseNumber$1 = function (s, input) {\n    const minimumEpoch = 2500000000;\n    // if the given epoch is really small, they've probably given seconds and not milliseconds\n    // anything below this number is likely (but not necessarily) a mistaken input.\n    if (input > 0 && input < minimumEpoch && s.silent === false) {\n      console.warn('  - Warning: You are setting the date to January 1970.');\n      console.warn('       -   did input seconds instead of milliseconds?');\n    }\n    s.epoch = input;\n    return s\n  };\n\n  var fns = {\n    parseArray: parseArray$1,\n    parseObject: parseObject$1,\n    parseNumber: parseNumber$1\n  };\n\n  // pull in 'today' data for the baseline moment\n  const getNow = function (s) {\n    s.epoch = Date.now();\n    Object.keys(s._today || {}).forEach((k) => {\n      if (typeof s[k] === 'function') {\n        s = s[k](s._today[k]);\n      }\n    });\n    return s\n  };\n\n  const dates = {\n    now: (s) => {\n      return getNow(s)\n    },\n    today: (s) => {\n      return getNow(s)\n    },\n    tonight: (s) => {\n      s = getNow(s);\n      s = s.hour(18); //6pm\n      return s\n    },\n    tomorrow: (s) => {\n      s = getNow(s);\n      s = s.add(1, 'day');\n      s = s.startOf('day');\n      return s\n    },\n    yesterday: (s) => {\n      s = getNow(s);\n      s = s.subtract(1, 'day');\n      s = s.startOf('day');\n      return s\n    },\n    christmas: (s) => {\n      let year = getNow(s).year();\n      s = s.set([year, 11, 25, 18, 0, 0]); // Dec 25\n      return s\n    },\n    'new years': (s) => {\n      let year = getNow(s).year();\n      s = s.set([year, 11, 31, 18, 0, 0]); // Dec 31\n      return s\n    }\n  };\n  dates['new years eve'] = dates['new years'];\n  var namedDates = dates;\n\n  //little cleanup..\n  const normalize = function (str) {\n    // remove all day-names\n    str = str.replace(/\\b(mon|tues?|wed|wednes|thur?s?|fri|sat|satur|sun)(day)?\\b/i, '');\n    //remove ordinal ending\n    str = str.replace(/([0-9])(th|rd|st|nd)/, '$1');\n    str = str.replace(/,/g, '');\n    str = str.replace(/ +/g, ' ').trim();\n    return str\n  };\n\n  var normalize$1 = normalize;\n\n  let o = {\n    millisecond: 1\n  };\n  o.second = 1000;\n  o.minute = 60000;\n  o.hour = 3.6e6; // dst is supported post-hoc\n  o.day = 8.64e7; //\n  o.date = o.day;\n  o.month = 8.64e7 * 29.5; //(average)\n  o.week = 6.048e8;\n  o.year = 3.154e10; // leap-years are supported post-hoc\n  //add plurals\n  Object.keys(o).forEach(k => {\n    o[k + 's'] = o[k];\n  });\n  var ms = o;\n\n  //basically, step-forward/backward until js Date object says we're there.\n  const walk = (s, n, fn, unit, previous) => {\n    let current = s.d[fn]();\n    if (current === n) {\n      return //already there\n    }\n    let startUnit = previous === null ? null : s.d[previous]();\n    let original = s.epoch;\n    //try to get it as close as we can\n    let diff = n - current;\n    s.epoch += ms[unit] * diff;\n    //DST edge-case: if we are going many days, be a little conservative\n    // console.log(unit, diff)\n    if (unit === 'day') {\n      // s.epoch -= ms.minute\n      //but don't push it over a month\n      if (Math.abs(diff) > 28 && n < 28) {\n        s.epoch += ms.hour;\n      }\n    }\n    // 1st time: oops, did we change previous unit? revert it.\n    if (previous !== null && startUnit !== s.d[previous]()) {\n      // console.warn('spacetime warning: missed setting ' + unit)\n      s.epoch = original;\n      // s.epoch += ms[unit] * diff * 0.89 // maybe try and make it close...?\n    }\n    //repair it if we've gone too far or something\n    //(go by half-steps, just in case)\n    const halfStep = ms[unit] / 2;\n    while (s.d[fn]() < n) {\n      s.epoch += halfStep;\n    }\n\n    while (s.d[fn]() > n) {\n      s.epoch -= halfStep;\n    }\n    // 2nd time: did we change previous unit? revert it.\n    if (previous !== null && startUnit !== s.d[previous]()) {\n      // console.warn('spacetime warning: missed setting ' + unit)\n      s.epoch = original;\n    }\n  };\n  //find the desired date by a increment/check while loop\n  const units$4 = {\n    year: {\n      valid: (n) => n > -4000 && n < 4000,\n      walkTo: (s, n) => walk(s, n, 'getFullYear', 'year', null)\n    },\n    month: {\n      valid: (n) => n >= 0 && n <= 11,\n      walkTo: (s, n) => {\n        let d = s.d;\n        let current = d.getMonth();\n        let original = s.epoch;\n        let startUnit = d.getFullYear();\n        if (current === n) {\n          return\n        }\n        //try to get it as close as we can..\n        let diff = n - current;\n        s.epoch += ms.day * (diff * 28); //special case\n        //oops, did we change the year? revert it.\n        if (startUnit !== s.d.getFullYear()) {\n          s.epoch = original;\n        }\n        //increment by day\n        while (s.d.getMonth() < n) {\n          s.epoch += ms.day;\n        }\n        while (s.d.getMonth() > n) {\n          s.epoch -= ms.day;\n        }\n      }\n    },\n    date: {\n      valid: (n) => n > 0 && n <= 31,\n      walkTo: (s, n) => walk(s, n, 'getDate', 'day', 'getMonth')\n    },\n    hour: {\n      valid: (n) => n >= 0 && n < 24,\n      walkTo: (s, n) => walk(s, n, 'getHours', 'hour', 'getDate')\n    },\n    minute: {\n      valid: (n) => n >= 0 && n < 60,\n      walkTo: (s, n) => walk(s, n, 'getMinutes', 'minute', 'getHours')\n    },\n    second: {\n      valid: (n) => n >= 0 && n < 60,\n      walkTo: (s, n) => {\n        //do this one directly\n        s.epoch = s.seconds(n).epoch;\n      }\n    },\n    millisecond: {\n      valid: (n) => n >= 0 && n < 1000,\n      walkTo: (s, n) => {\n        //do this one directly\n        s.epoch = s.milliseconds(n).epoch;\n      }\n    }\n  };\n\n  const walkTo = (s, wants) => {\n    let keys = Object.keys(units$4);\n    let old = s.clone();\n    for (let i = 0; i < keys.length; i++) {\n      let k = keys[i];\n      let n = wants[k];\n      if (n === undefined) {\n        n = old[k]();\n      }\n      if (typeof n === 'string') {\n        n = parseInt(n, 10);\n      }\n      //make-sure it's valid\n      if (!units$4[k].valid(n)) {\n        s.epoch = null;\n        if (s.silent === false) {\n          console.warn('invalid ' + k + ': ' + n);\n        }\n        return\n      }\n      units$4[k].walkTo(s, n);\n    }\n    return\n  };\n\n  var walkTo$1 = walkTo;\n\n  const monthLengths = [\n    31, // January - 31 days\n    28, // February - 28 days in a common year and 29 days in leap years\n    31, // March - 31 days\n    30, // April - 30 days\n    31, // May - 31 days\n    30, // June - 30 days\n    31, // July - 31 days\n    31, // August - 31 days\n    30, // September - 30 days\n    31, // October - 31 days\n    30, // November - 30 days\n    31 // December - 31 days\n  ];\n  var monthLength = monthLengths;\n\n  // 28 - feb\n  // 30 - april, june, sept, nov\n  // 31 - jan, march, may, july, aug, oct, dec\n\n  let shortMonths = [\n    'jan',\n    'feb',\n    'mar',\n    'apr',\n    'may',\n    'jun',\n    'jul',\n    'aug',\n    'sep',\n    'oct',\n    'nov',\n    'dec'\n  ];\n  let longMonths = [\n    'january',\n    'february',\n    'march',\n    'april',\n    'may',\n    'june',\n    'july',\n    'august',\n    'september',\n    'october',\n    'november',\n    'december'\n  ];\n\n  function buildMapping() {\n    const obj = {\n      sep: 8 //support this format\n    };\n    for (let i = 0; i < shortMonths.length; i++) {\n      obj[shortMonths[i]] = i;\n    }\n    for (let i = 0; i < longMonths.length; i++) {\n      obj[longMonths[i]] = i;\n    }\n    return obj\n  }\n\n  function short$1() { return shortMonths }\n  function long$1() { return longMonths }\n  function mapping$1() { return buildMapping() }\n  function set$5(i18n) {\n    shortMonths = i18n.short || shortMonths;\n    longMonths = i18n.long || longMonths;\n  }\n\n  //pull-apart ISO offsets, like \"+0100\"\n  const parseOffset = (s, offset) => {\n    if (!offset) {\n      return s\n    }\n    offset = offset.trim().toLowerCase();\n    // according to ISO8601, tz could be hh:mm, hhmm or hh\n    // so need few more steps before the calculation.\n    let num = 0;\n\n    // for (+-)hh:mm\n    if (/^[\\+-]?[0-9]{2}:[0-9]{2}$/.test(offset)) {\n      //support \"+01:00\"\n      if (/:00/.test(offset) === true) {\n        offset = offset.replace(/:00/, '');\n      }\n      //support \"+01:30\"\n      if (/:30/.test(offset) === true) {\n        offset = offset.replace(/:30/, '.5');\n      }\n    }\n\n    // for (+-)hhmm\n    if (/^[\\+-]?[0-9]{4}$/.test(offset)) {\n      offset = offset.replace(/30$/, '.5');\n    }\n    num = parseFloat(offset);\n\n    //divide by 100 or 10 - , \"+0100\", \"+01\"\n    if (Math.abs(num) > 100) {\n      num = num / 100;\n    }\n    //this is a fancy-move\n    if (num === 0 || offset === 'Z' || offset === 'z') {\n      s.tz = 'etc/gmt';\n      return s\n    }\n    //okay, try to match it to a utc timezone\n    //remember - this is opposite! a -5 offset maps to Etc/GMT+5  \u00af\\_(:/)_/\u00af\n    //https://askubuntu.com/questions/519550/why-is-the-8-timezone-called-gmt-8-in-the-filesystem\n    num *= -1;\n\n    if (num >= 0) {\n      num = '+' + num;\n    }\n    let tz = 'etc/gmt' + num;\n    let zones = s.timezones;\n\n    if (zones[tz]) {\n      // log a warning if we're over-writing a given timezone?\n      // console.log('changing timezone to: ' + tz)\n      s.tz = tz;\n    }\n    return s\n  };\n  var parseOffset$1 = parseOffset;\n\n  // truncate any sub-millisecond values\n  const parseMs = function (str = '') {\n    str = String(str);\n    //js does not support sub-millisecond values\n    // so truncate these - 2021-11-02T19:55:30.087772\n    if (str.length > 3) {\n      str = str.substring(0, 3);\n    } else if (str.length === 1) {\n      // assume ms are zero-padded on the left\n      // but maybe not on the right.\n      // turn '.10' into '.100'\n      str = str + '00';\n    } else if (str.length === 2) {\n      str = str + '0';\n    }\n    return Number(str) || 0\n  };\n\n  const parseTime = (s, str = '') => {\n    // remove all whitespace\n    str = str.replace(/^\\s+/, '').toLowerCase();\n    //formal time format - 04:30.23\n    let arr = str.match(/([0-9]{1,2}):([0-9]{1,2}):?([0-9]{1,2})?[:\\.]?([0-9]{1,4})?/);\n    if (arr !== null) {\n      let [, h, m, sec, ms] = arr;\n      //validate it a little\n      h = Number(h);\n      if (h < 0 || h > 24) {\n        return s.startOf('day')\n      }\n      m = Number(m); //don't accept '5:3pm'\n      if (arr[2].length < 2 || m < 0 || m > 59) {\n        return s.startOf('day')\n      }\n      s = s.hour(h);\n      s = s.minute(m);\n      s = s.seconds(sec || 0);\n      s = s.millisecond(parseMs(ms));\n      //parse-out am/pm\n      let ampm = str.match(/[\\b0-9] ?(am|pm)\\b/);\n      if (ampm !== null && ampm[1]) {\n        s = s.ampm(ampm[1]);\n      }\n      return s\n    }\n\n    //try an informal form - 5pm (no minutes)\n    arr = str.match(/([0-9]+) ?(am|pm)/);\n    if (arr !== null && arr[1]) {\n      let h = Number(arr[1]);\n      //validate it a little..\n      if (h > 12 || h < 1) {\n        return s.startOf('day')\n      }\n      s = s.hour(arr[1] || 0);\n      s = s.ampm(arr[2]);\n      s = s.startOf('hour');\n      return s\n    }\n\n    //no time info found, use start-of-day\n    s = s.startOf('day');\n    return s\n  };\n  var parseTime$1 = parseTime;\n\n  let months$1 = mapping$1();\n\n  //given a month, return whether day number exists in it\n  const validate$1 = (obj) => {\n    //invalid values\n    if (monthLength.hasOwnProperty(obj.month) !== true) {\n      return false\n    }\n    //support leap-year in february\n    if (obj.month === 1) {\n      if (isLeapYear(obj.year) && obj.date <= 29) {\n        return true\n      } else {\n        return obj.date <= 28\n      }\n    }\n    //is this date too-big for this month?\n    let max = monthLength[obj.month] || 0;\n    if (obj.date <= max) {\n      return true\n    }\n    return false\n  };\n\n  const parseYear = (str = '', today) => {\n    str = str.trim();\n    // parse '86 shorthand\n    if (/^'[0-9][0-9]$/.test(str) === true) {\n      let num = Number(str.replace(/'/, ''));\n      if (num > 50) {\n        return 1900 + num\n      }\n      return 2000 + num\n    }\n    let year = parseInt(str, 10);\n    // use a given year from options.today\n    if (!year && today) {\n      year = today.year;\n    }\n    // fallback to this year\n    year = year || new Date().getFullYear();\n    return year\n  };\n\n  const parseMonth = function (str) {\n    str = str.toLowerCase().trim();\n    if (str === 'sept') {\n      return months$1.sep\n    }\n    return months$1[str]\n  };\n\n  var ymd = [\n    // =====\n    //  y-m-d\n    // =====\n    //iso-this 1998-05-30T22:00:00:000Z, iso-that 2017-04-03T08:00:00-0700\n    {\n      reg: /^(\\-?0?0?[0-9]{3,4})-([0-9]{1,2})-([0-9]{1,2})[T| ]([0-9.:]+)(Z|[0-9\\-\\+:]+)?$/i,\n      parse: (s, m) => {\n        let obj = {\n          year: m[1],\n          month: parseInt(m[2], 10) - 1,\n          date: m[3]\n        };\n        if (validate$1(obj) === false) {\n          s.epoch = null;\n          return s\n        }\n        parseOffset$1(s, m[5]);\n        walkTo$1(s, obj);\n        s = parseTime$1(s, m[4]);\n        return s\n      }\n    },\n    //short-iso \"2015-03-25\" or \"2015/03/25\" or \"2015/03/25 12:26:14 PM\"\n    {\n      reg: /^([0-9]{4})[\\-\\/\\. ]([0-9]{1,2})[\\-\\/\\. ]([0-9]{1,2})( [0-9]{1,2}(:[0-9]{0,2})?(:[0-9]{0,3})? ?(am|pm)?)?$/i,\n      parse: (s, m) => {\n        let obj = {\n          year: m[1],\n          month: parseInt(m[2], 10) - 1,\n          date: parseInt(m[3], 10)\n        };\n        if (obj.month >= 12) {\n          //support yyyy/dd/mm (weird, but ok)\n          obj.date = parseInt(m[2], 10);\n          obj.month = parseInt(m[3], 10) - 1;\n        }\n        if (validate$1(obj) === false) {\n          s.epoch = null;\n          return s\n        }\n        walkTo$1(s, obj);\n        s = parseTime$1(s, m[4]);\n        return s\n      }\n    },\n\n    //text-month \"2015-feb-25\"\n    {\n      reg: /^([0-9]{4})[\\-\\/\\. ]([a-z]+)[\\-\\/\\. ]([0-9]{1,2})( [0-9]{1,2}(:[0-9]{0,2})?(:[0-9]{0,3})? ?(am|pm)?)?$/i,\n      parse: (s, m) => {\n        let obj = {\n          year: parseYear(m[1], s._today),\n          month: parseMonth(m[2]),\n          date: toCardinal(m[3] || '')\n        };\n        if (validate$1(obj) === false) {\n          s.epoch = null;\n          return s\n        }\n        walkTo$1(s, obj);\n        s = parseTime$1(s, m[4]);\n        return s\n      }\n    }\n  ];\n\n  var mdy = [\n    // =====\n    //  m-d-y\n    // =====\n    //mm/dd/yyyy - uk/canada \"6/28/2019, 12:26:14 PM\"\n    {\n      reg: /^([0-9]{1,2})[\\-\\/.]([0-9]{1,2})[\\-\\/.]?([0-9]{4})?( [0-9]{1,2}:[0-9]{2}:?[0-9]{0,2}? ?(am|pm|gmt))?$/i,\n      parse: (s, arr) => {\n        let month = parseInt(arr[1], 10) - 1;\n        let date = parseInt(arr[2], 10);\n        //support dd/mm/yyy\n        if (s.british || month >= 12) {\n          date = parseInt(arr[1], 10);\n          month = parseInt(arr[2], 10) - 1;\n        }\n        let obj = {\n          date,\n          month,\n          year: parseYear(arr[3], s._today) || new Date().getFullYear()\n        };\n        if (validate$1(obj) === false) {\n          s.epoch = null;\n          return s\n        }\n        walkTo$1(s, obj);\n        s = parseTime$1(s, arr[4]);\n        return s\n      }\n    },\n    //alt short format - \"feb-25-2015\"\n    {\n      reg: /^([a-z]+)[\\-\\/\\. ]([0-9]{1,2})[\\-\\/\\. ]?([0-9]{4}|'[0-9]{2})?( [0-9]{1,2}(:[0-9]{0,2})?(:[0-9]{0,3})? ?(am|pm)?)?$/i,\n      parse: (s, arr) => {\n        let obj = {\n          year: parseYear(arr[3], s._today),\n          month: parseMonth(arr[1]),\n          date: toCardinal(arr[2] || '')\n        };\n        if (validate$1(obj) === false) {\n          s.epoch = null;\n          return s\n        }\n        walkTo$1(s, obj);\n        s = parseTime$1(s, arr[4]);\n        return s\n      }\n    },\n\n    //Long \"Mar 25 2015\"\n    //February 22, 2017 15:30:00\n    {\n      reg: /^([a-z]+) ([0-9]{1,2})( [0-9]{4})?( ([0-9:]+( ?am| ?pm| ?gmt)?))?$/i,\n      parse: (s, arr) => {\n        let obj = {\n          year: parseYear(arr[3], s._today),\n          month: parseMonth(arr[1]),\n          date: toCardinal(arr[2] || '')\n        };\n        if (validate$1(obj) === false) {\n          s.epoch = null;\n          return s\n        }\n        walkTo$1(s, obj);\n        s = parseTime$1(s, arr[4]);\n        return s\n      }\n    },\n    // 'Sun Mar 14 15:09:48 +0000 2021'\n    {\n      reg: /^([a-z]+) ([0-9]{1,2}) ([0-9]{1,2}:[0-9]{2}:?[0-9]{0,2})( \\+[0-9]{4})?( [0-9]{4})?$/i,\n      parse: (s, arr) => {\n        let [, month, date, time, tz, year] = arr;\n        let obj = {\n          year: parseYear(year, s._today),\n          month: parseMonth(month),\n          date: toCardinal(date || '')\n        };\n        if (validate$1(obj) === false) {\n          s.epoch = null;\n          return s\n        }\n        walkTo$1(s, obj);\n        s = parseOffset$1(s, tz);\n        s = parseTime$1(s, time);\n        return s\n      }\n    }\n  ];\n\n  var dmy = [\n    // =====\n    //  d-m-y\n    // =====\n    //common british format - \"25-feb-2015\"\n    {\n      reg: /^([0-9]{1,2})[\\-\\/]([a-z]+)[\\-\\/]?([0-9]{4})?$/i,\n      parse: (s, m) => {\n        let obj = {\n          year: parseYear(m[3], s._today),\n          month: parseMonth(m[2]),\n          date: toCardinal(m[1] || '')\n        };\n        if (validate$1(obj) === false) {\n          s.epoch = null;\n          return s\n        }\n        walkTo$1(s, obj);\n        s = parseTime$1(s, m[4]);\n        return s\n      }\n    },\n    // \"25 Mar 2015\"\n    {\n      reg: /^([0-9]{1,2})( [a-z]+)( [0-9]{4}| '[0-9]{2})? ?([0-9]{1,2}:[0-9]{2}:?[0-9]{0,2}? ?(am|pm|gmt))?$/i,\n      parse: (s, m) => {\n        let obj = {\n          year: parseYear(m[3], s._today),\n          month: parseMonth(m[2]),\n          date: toCardinal(m[1])\n        };\n        if (!obj.month || validate$1(obj) === false) {\n          s.epoch = null;\n          return s\n        }\n        walkTo$1(s, obj);\n        s = parseTime$1(s, m[4]);\n        return s\n      }\n    },\n    // 01-jan-2020\n    {\n      reg: /^([0-9]{1,2})[\\. -/]([a-z]+)[\\. -/]([0-9]{4})?( [0-9]{1,2}(:[0-9]{0,2})?(:[0-9]{0,3})? ?(am|pm)?)?$/i,\n      parse: (s, m) => {\n        let obj = {\n          date: Number(m[1]),\n          month: parseMonth(m[2]),\n          year: Number(m[3])\n        };\n        if (validate$1(obj) === false) {\n          s.epoch = null;\n          return s\n        }\n        walkTo$1(s, obj);\n        s = s.startOf('day');\n        s = parseTime$1(s, m[4]);\n        return s\n      }\n    }\n  ];\n\n  var misc = [\n    // =====\n    // no dates\n    // =====\n\n    // '2012-06' month-only\n    {\n      reg: /^([0-9]{4})[\\-\\/]([0-9]{2})$/i,\n      parse: (s, m) => {\n        let obj = {\n          year: m[1],\n          month: parseInt(m[2], 10) - 1,\n          date: 1\n        };\n        if (validate$1(obj) === false) {\n          s.epoch = null;\n          return s\n        }\n        walkTo$1(s, obj);\n        s = parseTime$1(s, m[4]);\n        return s\n      }\n    },\n\n    //February 2017 (implied date)\n    {\n      reg: /^([a-z]+) ([0-9]{4})$/i,\n      parse: (s, arr) => {\n        let obj = {\n          year: parseYear(arr[2], s._today),\n          month: parseMonth(arr[1]),\n          date: s._today.date || 1\n        };\n        if (validate$1(obj) === false) {\n          s.epoch = null;\n          return s\n        }\n        walkTo$1(s, obj);\n        s = parseTime$1(s, arr[4]);\n        return s\n      }\n    },\n\n    {\n      // 'q2 2002'\n      reg: /^(q[0-9])( of)?( [0-9]{4})?/i,\n      parse: (s, arr) => {\n        let quarter = arr[1] || '';\n        s = s.quarter(quarter);\n        let year = arr[3] || '';\n        if (year) {\n          year = year.trim();\n          s = s.year(year);\n        }\n        return s\n      }\n    },\n    {\n      // 'summer 2002'\n      reg: /^(spring|summer|winter|fall|autumn)( of)?( [0-9]{4})?/i,\n      parse: (s, arr) => {\n        let season = arr[1] || '';\n        s = s.season(season);\n        let year = arr[3] || '';\n        if (year) {\n          year = year.trim();\n          s = s.year(year);\n        }\n        return s\n      }\n    },\n    {\n      // '200bc'\n      reg: /^[0-9,]+ ?b\\.?c\\.?$/i,\n      parse: (s, arr) => {\n        let str = arr[0] || '';\n        //make year-negative\n        str = str.replace(/^([0-9,]+) ?b\\.?c\\.?$/i, '-$1');\n        let d = new Date();\n        let obj = {\n          year: parseInt(str.trim(), 10),\n          month: d.getMonth(),\n          date: d.getDate()\n        };\n        if (validate$1(obj) === false) {\n          s.epoch = null;\n          return s\n        }\n        walkTo$1(s, obj);\n        s = parseTime$1(s);\n        return s\n      }\n    },\n    {\n      // '200ad'\n      reg: /^[0-9,]+ ?(a\\.?d\\.?|c\\.?e\\.?)$/i,\n      parse: (s, arr) => {\n        let str = arr[0] || '';\n        //remove commas\n        str = str.replace(/,/g, '');\n        let d = new Date();\n        let obj = {\n          year: parseInt(str.trim(), 10),\n          month: d.getMonth(),\n          date: d.getDate()\n        };\n        if (validate$1(obj) === false) {\n          s.epoch = null;\n          return s\n        }\n        walkTo$1(s, obj);\n        s = parseTime$1(s);\n        return s\n      }\n    },\n    {\n      // '1992'\n      reg: /^[0-9]{4}( ?a\\.?d\\.?)?$/i,\n      parse: (s, arr) => {\n        let today = s._today;\n        // using today's date, but a new month is awkward.\n        if (today.month && !today.date) {\n          today.date = 1;\n        }\n        let d = new Date();\n        let obj = {\n          year: parseYear(arr[0], today),\n          month: today.month || d.getMonth(),\n          date: today.date || d.getDate()\n        };\n        if (validate$1(obj) === false) {\n          s.epoch = null;\n          return s\n        }\n        walkTo$1(s, obj);\n        s = parseTime$1(s);\n        return s\n      }\n    }\n  ];\n\n  var parsers = [].concat(ymd, mdy, dmy, misc);\n\n  const parseString = function (s, input, givenTz) {\n    // let parsers = s.parsers || []\n    //try each text-parse template, use the first good result\n    for (let i = 0; i < parsers.length; i++) {\n      let m = input.match(parsers[i].reg);\n      if (m) {\n        let res = parsers[i].parse(s, m, givenTz);\n        if (res !== null && res.isValid()) {\n          return res\n        }\n      }\n    }\n    if (s.silent === false) {\n      console.warn(\"Warning: couldn't parse date-string: '\" + input + \"'\");\n    }\n    s.epoch = null;\n    return s\n  };\n  var parseString$1 = parseString;\n\n  const { parseArray, parseObject, parseNumber } = fns;\n  //we have to actually parse these inputs ourselves\n  //  -  can't use built-in js parser ;(\n  //=========================================\n  // ISO Date\t  \"2015-03-25\"\n  // Short Date\t\"03/25/2015\" or \"2015/03/25\"\n  // Long Date\t\"Mar 25 2015\" or \"25 Mar 2015\"\n  // Full Date\t\"Wednesday March 25 2015\"\n  //=========================================\n\n  const defaults = {\n    year: new Date().getFullYear(),\n    month: 0,\n    date: 1\n  };\n\n  //find the epoch from different input styles\n  const parseInput = (s, input) => {\n    let today = s._today || defaults;\n    //if we've been given a epoch number, it's easy\n    if (typeof input === 'number') {\n      return parseNumber(s, input)\n    }\n    //set tmp time\n    s.epoch = Date.now();\n    // overwrite tmp time with 'today' value, if exists\n    if (s._today && isObject(s._today) && Object.keys(s._today).length > 0) {\n      let res = parseObject(s, today, defaults);\n      if (res.isValid()) {\n        s.epoch = res.epoch;\n      }\n    }\n    // null input means 'now'\n    if (input === null || input === undefined || input === '') {\n      return s //k, we're good.\n    }\n    //support input of Date() object\n    if (isDate(input) === true) {\n      s.epoch = input.getTime();\n      return s\n    }\n    //support [2016, 03, 01] format\n    if (isArray(input) === true) {\n      s = parseArray(s, input, today);\n      return s\n    }\n    //support {year:2016, month:3} format\n    if (isObject(input) === true) {\n      //support spacetime object as input\n      if (input.epoch) {\n        s.epoch = input.epoch;\n        s.tz = input.tz;\n        return s\n      }\n      s = parseObject(s, input, today);\n      return s\n    }\n    //input as a string..\n    if (typeof input !== 'string') {\n      return s\n    }\n    //little cleanup..\n    input = normalize$1(input);\n    //try some known-words, like 'now'\n    if (namedDates.hasOwnProperty(input) === true) {\n      s = namedDates[input](s);\n      return s\n    }\n    //try each text-parse template, use the first good result\n    return parseString$1(s, input)\n  };\n  var handleInput = parseInput;\n\n  let shortDays = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\n  let longDays = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n\n  function short() { return shortDays }\n  function long() { return longDays }\n  function set$4(i18n) {\n    shortDays = i18n.short || shortDays;\n    longDays = i18n.long || longDays;\n  }\n  const aliases$1 = {\n    mo: 1,\n    tu: 2,\n    we: 3,\n    th: 4,\n    fr: 5,\n    sa: 6,\n    su: 7,\n    tues: 2,\n    weds: 3,\n    wedn: 3,\n    thur: 4,\n    thurs: 4\n  };\n\n  let titleCaseEnabled = true;\n\n  function useTitleCase() {\n    return titleCaseEnabled\n  }\n\n  function set$3(val) {\n    titleCaseEnabled = val;\n  }\n\n  // create the timezone offset part of an iso timestamp\n  // it's kind of nuts how involved this is\n  // \"+01:00\", \"+0100\", or simply \"+01\"\n  const isoOffset = s => {\n    let offset = s.timezone().current.offset;\n    return !offset ? 'Z' : formatTimezone(offset, ':')\n  };\n\n  var isoOffset$1 = isoOffset;\n\n  const applyCaseFormat = (str) => {\n    if (useTitleCase()) {\n      return titleCase$1(str)\n    }\n    return str\n  };\n\n  // iso-year padding\n  const padYear = (num) => {\n    if (num >= 0) {\n      return zeroPad(num, 4)\n    } else {\n      num = Math.abs(num);\n      return '-' + zeroPad(num, 4)\n    }\n  };\n\n  const format = {\n    day: (s) => applyCaseFormat(s.dayName()),\n    'day-short': (s) => applyCaseFormat(short()[s.day()]),\n    'day-number': (s) => s.day(),\n    'day-ordinal': (s) => ordinal(s.day()),\n    'day-pad': (s) => zeroPad(s.day()),\n\n    date: (s) => s.date(),\n    'date-ordinal': (s) => ordinal(s.date()),\n    'date-pad': (s) => zeroPad(s.date()),\n\n    month: (s) => applyCaseFormat(s.monthName()),\n    'month-short': (s) => applyCaseFormat(short$1()[s.month()]),\n    'month-number': (s) => s.month(),\n    'month-ordinal': (s) => ordinal(s.month()),\n    'month-pad': (s) => zeroPad(s.month()),\n    'iso-month': (s) => zeroPad(s.month() + 1), //1-based months\n\n    year: (s) => {\n      let year = s.year();\n      if (year > 0) {\n        return year\n      }\n      year = Math.abs(year);\n      return year + ' BC'\n    },\n    'year-short': (s) => {\n      let year = s.year();\n      if (year > 0) {\n        return `'${String(s.year()).substr(2, 4)}`\n      }\n      year = Math.abs(year);\n      return year + ' BC'\n    },\n    'iso-year': (s) => {\n      let year = s.year();\n      let isNegative = year < 0;\n      let str = zeroPad(Math.abs(year), 4); //0-padded\n      if (isNegative) {\n        //negative years are for some reason 6-digits ('-00008')\n        str = zeroPad(str, 6);\n        str = '-' + str;\n      }\n      return str\n    },\n\n    time: (s) => s.time(),\n    'time-24': (s) => `${s.hour24()}:${zeroPad(s.minute())}`,\n\n    hour: (s) => s.hour12(),\n    'hour-pad': (s) => zeroPad(s.hour12()),\n    'hour-24': (s) => s.hour24(),\n    'hour-24-pad': (s) => zeroPad(s.hour24()),\n\n    minute: (s) => s.minute(),\n    'minute-pad': (s) => zeroPad(s.minute()),\n    second: (s) => s.second(),\n    'second-pad': (s) => zeroPad(s.second()),\n    millisecond: (s) => s.millisecond(),\n    'millisecond-pad': (s) => zeroPad(s.millisecond(), 3),\n\n    ampm: (s) => s.ampm(),\n    AMPM: (s) => s.ampm().toUpperCase(),\n    quarter: (s) => 'Q' + s.quarter(),\n    season: (s) => s.season(),\n    era: (s) => s.era(),\n    json: (s) => s.json(),\n    timezone: (s) => s.timezone().name,\n    offset: (s) => isoOffset$1(s),\n\n    numeric: (s) => `${s.year()}/${zeroPad(s.month() + 1)}/${zeroPad(s.date())}`, // yyyy/mm/dd\n    'numeric-us': (s) => `${zeroPad(s.month() + 1)}/${zeroPad(s.date())}/${s.year()}`, // mm/dd/yyyy\n    'numeric-uk': (s) => `${zeroPad(s.date())}/${zeroPad(s.month() + 1)}/${s.year()}`, //dd/mm/yyyy\n    'mm/dd': (s) => `${zeroPad(s.month() + 1)}/${zeroPad(s.date())}`, //mm/dd\n\n    // ... https://en.wikipedia.org/wiki/ISO_8601 ;(((\n    iso: (s) => {\n      let year = s.format('iso-year');\n      let month = zeroPad(s.month() + 1); //1-based months\n      let date = zeroPad(s.date());\n      let hour = zeroPad(s.h24());\n      let minute = zeroPad(s.minute());\n      let second = zeroPad(s.second());\n      let ms = zeroPad(s.millisecond(), 3);\n      let offset = isoOffset$1(s);\n      return `${year}-${month}-${date}T${hour}:${minute}:${second}.${ms}${offset}` //2018-03-09T08:50:00.000-05:00\n    },\n    'iso-short': (s) => {\n      let month = zeroPad(s.month() + 1); //1-based months\n      let date = zeroPad(s.date());\n      let year = padYear(s.year());\n      return `${year}-${month}-${date}` //2017-02-15\n    },\n    'iso-utc': (s) => {\n      return new Date(s.epoch).toISOString() //2017-03-08T19:45:28.367Z\n    },\n\n    //i made these up\n    nice: (s) => `${short$1()[s.month()]} ${ordinal(s.date())}, ${s.time()}`,\n    'nice-24': (s) =>\n      `${short$1()[s.month()]} ${ordinal(s.date())}, ${s.hour24()}:${zeroPad(\n      s.minute()\n    )}`,\n    'nice-year': (s) => `${short$1()[s.month()]} ${ordinal(s.date())}, ${s.year()}`,\n    'nice-day': (s) =>\n      `${short()[s.day()]} ${applyCaseFormat(short$1()[s.month()])} ${ordinal(\n      s.date()\n    )}`,\n    'nice-full': (s) =>\n      `${s.dayName()} ${applyCaseFormat(s.monthName())} ${ordinal(s.date())}, ${s.time()}`,\n    'nice-full-24': (s) =>\n      `${s.dayName()} ${applyCaseFormat(s.monthName())} ${ordinal(\n      s.date()\n    )}, ${s.hour24()}:${zeroPad(s.minute())}`\n  };\n  //aliases\n  const aliases = {\n    'day-name': 'day',\n    'month-name': 'month',\n    'iso 8601': 'iso',\n    'time-h24': 'time-24',\n    'time-12': 'time',\n    'time-h12': 'time',\n    tz: 'timezone',\n    'day-num': 'day-number',\n    'month-num': 'month-number',\n    'month-iso': 'iso-month',\n    'year-iso': 'iso-year',\n    'nice-short': 'nice',\n    'nice-short-24': 'nice-24',\n    mdy: 'numeric-us',\n    dmy: 'numeric-uk',\n    ymd: 'numeric',\n    'yyyy/mm/dd': 'numeric',\n    'mm/dd/yyyy': 'numeric-us',\n    'dd/mm/yyyy': 'numeric-us',\n    'little-endian': 'numeric-uk',\n    'big-endian': 'numeric',\n    'day-nice': 'nice-day'\n  };\n  Object.keys(aliases).forEach((k) => (format[k] = format[aliases[k]]));\n\n  const printFormat = (s, str = '') => {\n    //don't print anything if it's an invalid date\n    if (s.isValid() !== true) {\n      return ''\n    }\n    //support .format('month')\n    if (format.hasOwnProperty(str)) {\n      let out = format[str](s) || '';\n      if (str !== 'json') {\n        out = String(out);\n        if (str.toLowerCase() !== 'ampm') {\n          out = applyCaseFormat(out);\n        }\n      }\n      return out\n    }\n    //support '{hour}:{minute}' notation\n    if (str.indexOf('{') !== -1) {\n      let sections = /\\{(.+?)\\}/g;\n      str = str.replace(sections, (_, fmt) => {\n        fmt = fmt.toLowerCase().trim();\n        if (format.hasOwnProperty(fmt)) {\n          let out = String(format[fmt](s));\n          if (fmt.toLowerCase() !== 'ampm') {\n            return applyCaseFormat(out)\n          }\n          return out\n        }\n        return ''\n      });\n      return str\n    }\n\n    return s.format('iso-short')\n  };\n  var format$1 = printFormat;\n\n  //parse this insane unix-time-templating thing, from the 19th century\n  //http://unicode.org/reports/tr35/tr35-25.html#Date_Format_Patterns\n\n  //time-symbols we support\n  const mapping = {\n    G: (s) => s.era(),\n    GG: (s) => s.era(),\n    GGG: (s) => s.era(),\n    GGGG: (s) => (s.era() === 'AD' ? 'Anno Domini' : 'Before Christ'),\n    //year\n    y: (s) => s.year(),\n    yy: (s) => {\n      //last two chars\n      return zeroPad(Number(String(s.year()).substr(2, 4)))\n    },\n    yyy: (s) => s.year(),\n    yyyy: (s) => s.year(),\n    yyyyy: (s) => '0' + s.year(),\n    // u: (s) => {},//extended non-gregorian years\n\n    //quarter\n    Q: (s) => s.quarter(),\n    QQ: (s) => s.quarter(),\n    QQQ: (s) => s.quarter(),\n    QQQQ: (s) => s.quarter(),\n\n    //month\n    M: (s) => s.month() + 1,\n    MM: (s) => zeroPad(s.month() + 1),\n    MMM: (s) => s.format('month-short'),\n    MMMM: (s) => s.format('month'),\n\n    //week\n    w: (s) => s.week(),\n    ww: (s) => zeroPad(s.week()),\n    //week of month\n    // W: (s) => s.week(),\n\n    //date of month\n    d: (s) => s.date(),\n    dd: (s) => zeroPad(s.date()),\n    //date of year\n    D: (s) => s.dayOfYear(),\n    DD: (s) => zeroPad(s.dayOfYear()),\n    DDD: (s) => zeroPad(s.dayOfYear(), 3),\n\n    // F: (s) => {},//date of week in month\n    // g: (s) => {},//modified julian day\n\n    //day\n    E: (s) => s.format('day-short'),\n    EE: (s) => s.format('day-short'),\n    EEE: (s) => s.format('day-short'),\n    EEEE: (s) => s.format('day'),\n    EEEEE: (s) => s.format('day')[0],\n    e: (s) => s.day(),\n    ee: (s) => s.day(),\n    eee: (s) => s.format('day-short'),\n    eeee: (s) => s.format('day'),\n    eeeee: (s) => s.format('day')[0],\n\n    //am/pm\n    a: (s) => s.ampm().toUpperCase(),\n    aa: (s) => s.ampm().toUpperCase(),\n    aaa: (s) => s.ampm().toUpperCase(),\n    aaaa: (s) => s.ampm().toUpperCase(),\n\n    //hour\n    h: (s) => s.h12(),\n    hh: (s) => zeroPad(s.h12()),\n    H: (s) => s.hour(),\n    HH: (s) => zeroPad(s.hour()),\n    // j: (s) => {},//weird hour format\n\n    m: (s) => s.minute(),\n    mm: (s) => zeroPad(s.minute()),\n    s: (s) => s.second(),\n    ss: (s) => zeroPad(s.second()),\n\n    //milliseconds\n    SSS: (s) => zeroPad(s.millisecond(), 3),\n    //milliseconds in the day\n    A: (s) => s.epoch - s.startOf('day').epoch,\n    //timezone\n    z: (s) => s.timezone().name,\n    zz: (s) => s.timezone().name,\n    zzz: (s) => s.timezone().name,\n    zzzz: (s) => s.timezone().name,\n    Z: (s) => formatTimezone(s.timezone().current.offset),\n    ZZ: (s) => formatTimezone(s.timezone().current.offset),\n    ZZZ: (s) => formatTimezone(s.timezone().current.offset),\n    ZZZZ: (s) => formatTimezone(s.timezone().current.offset, ':')\n  };\n\n  const addAlias = (char, to, n) => {\n    let name = char;\n    let toName = to;\n    for (let i = 0; i < n; i += 1) {\n      mapping[name] = mapping[toName];\n      name += char;\n      toName += to;\n    }\n  };\n  addAlias('q', 'Q', 4);\n  addAlias('L', 'M', 4);\n  addAlias('Y', 'y', 4);\n  addAlias('c', 'e', 4);\n  addAlias('k', 'H', 2);\n  addAlias('K', 'h', 2);\n  addAlias('S', 's', 2);\n  addAlias('v', 'z', 4);\n  addAlias('V', 'Z', 4);\n\n  // support unix-style escaping with ' character\n  const escapeChars = function (arr) {\n    for (let i = 0; i < arr.length; i += 1) {\n      if (arr[i] === `'`) {\n        // greedy-search for next apostrophe\n        for (let o = i + 1; o < arr.length; o += 1) {\n          if (arr[o]) {\n            arr[i] += arr[o];\n          }\n          if (arr[o] === `'`) {\n            arr[o] = null;\n            break\n          }\n          arr[o] = null;\n        }\n      }\n    }\n    return arr.filter((ch) => ch)\n  };\n\n  //combine consecutive chars, like 'yyyy' as one.\n  const combineRepeated = function (arr) {\n    for (let i = 0; i < arr.length; i += 1) {\n      let c = arr[i];\n      // greedy-forward\n      for (let o = i + 1; o < arr.length; o += 1) {\n        if (arr[o] === c) {\n          arr[i] += arr[o];\n          arr[o] = null;\n        } else {\n          break\n        }\n      }\n    }\n    // '' means one apostrophe\n    arr = arr.filter((ch) => ch);\n    arr = arr.map((str) => {\n      if (str === `''`) {\n        str = `'`;\n      }\n      return str\n    });\n    return arr\n  };\n\n  const unixFmt = (s, str) => {\n    let arr = str.split('');\n    // support character escaping\n    arr = escapeChars(arr);\n    //combine 'yyyy' as string.\n    arr = combineRepeated(arr);\n    return arr.reduce((txt, c) => {\n      if (mapping[c] !== undefined) {\n        txt += mapping[c](s) || '';\n      } else {\n        // 'unescape'\n        if (/^'.{1,}'$/.test(c)) {\n          c = c.replace(/'/g, '');\n        }\n        txt += c;\n      }\n      return txt\n    }, '')\n  };\n  var unixFmt$1 = unixFmt;\n\n  const units$3 = ['year', 'season', 'quarter', 'month', 'week', 'day', 'quarterHour', 'hour', 'minute'];\n\n  const doUnit = function (s, k) {\n    let start = s.clone().startOf(k);\n    let end = s.clone().endOf(k);\n    let duration = end.epoch - start.epoch;\n    let percent = (s.epoch - start.epoch) / duration;\n    return parseFloat(percent.toFixed(2))\n  };\n\n  //how far it is along, from 0-1\n  const progress = (s, unit) => {\n    if (unit) {\n      unit = normalize$2(unit);\n      return doUnit(s, unit)\n    }\n    let obj = {};\n    units$3.forEach(k => {\n      obj[k] = doUnit(s, k);\n    });\n    return obj\n  };\n\n  var progress$1 = progress;\n\n  //round to either current, or +1 of this unit\n  const nearest = (s, unit) => {\n    //how far have we gone?\n    let prog = s.progress();\n    unit = normalize$2(unit);\n    //fix camel-case for this one\n    if (unit === 'quarterhour') {\n      unit = 'quarterHour';\n    }\n    if (prog[unit] !== undefined) {\n      // go forward one?\n      if (prog[unit] > 0.5) {\n        s = s.add(1, unit);\n      }\n      // go to start\n      s = s.startOf(unit);\n    } else if (s.silent === false) {\n      console.warn(\"no known unit '\" + unit + \"'\");\n    }\n    return s\n  };\n  var nearest$1 = nearest;\n\n  //increment until dates are the same\n  const climb = (a, b, unit) => {\n    let i = 0;\n    a = a.clone();\n    while (a.isBefore(b)) {\n      //do proper, expensive increment to catch all-the-tricks\n      a = a.add(1, unit);\n      i += 1;\n    }\n    //oops, we went too-far..\n    if (a.isAfter(b, unit)) {\n      i -= 1;\n    }\n    return i\n  };\n\n  // do a thurough +=1 on the unit, until they match\n  // for speed-reasons, only used on day, month, week.\n  const diffOne = (a, b, unit) => {\n    if (a.isBefore(b)) {\n      return climb(a, b, unit)\n    } else {\n      return climb(b, a, unit) * -1 //reverse it\n    }\n  };\n\n  var diffOne$1 = diffOne;\n\n  // don't do anything too fancy here.\n  // 2020 - 2019 may be 1 year, or 0 years\n  // - '1 year difference' means 366 days during a leap year\n  const fastYear = (a, b) => {\n    let years = b.year() - a.year();\n    // should we decrement it by 1?\n    a = a.year(b.year());\n    if (a.isAfter(b)) {\n      years -= 1;\n    }\n    return years\n  };\n\n  // use a waterfall-method for computing a diff of any 'pre-knowable' units\n  // compute years, then compute months, etc..\n  // ... then ms-math for any very-small units\n  const diff$1 = function (a, b) {\n    // an hour is always the same # of milliseconds\n    // so these units can be 'pre-calculated'\n    let msDiff = b.epoch - a.epoch;\n    let obj = {\n      milliseconds: msDiff,\n      seconds: parseInt(msDiff / 1000, 10)\n    };\n    obj.minutes = parseInt(obj.seconds / 60, 10);\n    obj.hours = parseInt(obj.minutes / 60, 10);\n\n    //do the year\n    let tmp = a.clone();\n    obj.years = fastYear(tmp, b);\n    tmp = a.add(obj.years, 'year');\n\n    //there's always 12 months in a year...\n    obj.months = obj.years * 12;\n    tmp = a.add(obj.months, 'month');\n    obj.months += diffOne$1(tmp, b, 'month');\n\n    // there's always 4 quarters in a year...\n    obj.quarters = obj.years * 4;\n    obj.quarters += parseInt((obj.months % 12) / 3, 10);\n\n    // there's always atleast 52 weeks in a year..\n    // (month * 4) isn't as close\n    obj.weeks = obj.years * 52;\n    tmp = a.add(obj.weeks, 'week');\n    obj.weeks += diffOne$1(tmp, b, 'week');\n\n    // there's always atleast 7 days in a week\n    obj.days = obj.weeks * 7;\n    tmp = a.add(obj.days, 'day');\n    obj.days += diffOne$1(tmp, b, 'day');\n\n    return obj\n  };\n  var waterfall = diff$1;\n\n  const reverseDiff = function (obj) {\n    Object.keys(obj).forEach((k) => {\n      obj[k] *= -1;\n    });\n    return obj\n  };\n\n  // this method counts a total # of each unit, between a, b.\n  // '1 month' means 28 days in february\n  // '1 year' means 366 days in a leap year\n  const main$1 = function (a, b, unit) {\n    b = beADate(b, a);\n    //reverse values, if necessary\n    let reversed = false;\n    if (a.isAfter(b)) {\n      let tmp = a;\n      a = b;\n      b = tmp;\n      reversed = true;\n    }\n    //compute them all (i know!)\n    let obj = waterfall(a, b);\n    if (reversed) {\n      obj = reverseDiff(obj);\n    }\n    //return just the requested unit\n    if (unit) {\n      //make sure it's plural-form\n      unit = normalize$2(unit);\n      if (/s$/.test(unit) !== true) {\n        unit += 's';\n      }\n      if (unit === 'dates') {\n        unit = 'days';\n      }\n      return obj[unit]\n    }\n    return obj\n  };\n\n  var diff = main$1;\n\n  /*\n  ISO 8601 duration format\n  // https://en.wikipedia.org/wiki/ISO_8601#Durations\n  \"P3Y6M4DT12H30M5S\"\n  P the start of the duration representation.\n  Y the number of years.\n  M the number of months.\n  W the number of weeks.\n  D the number of days.\n  T of the representation.\n  H the number of hours.\n  M the number of minutes.\n  S the number of seconds.\n  */\n\n  const fmt = (n) => Math.abs(n) || 0;\n\n  const toISO = function (diff) {\n    let iso = 'P';\n    iso += fmt(diff.years) + 'Y';\n    iso += fmt(diff.months) + 'M';\n    iso += fmt(diff.days) + 'DT';\n    iso += fmt(diff.hours) + 'H';\n    iso += fmt(diff.minutes) + 'M';\n    iso += fmt(diff.seconds) + 'S';\n    return iso\n  };\n  var toISO$1 = toISO;\n\n  //get number of hours/minutes... between the two dates\n  function getDiff(a, b) {\n    const isBefore = a.isBefore(b);\n    const later = isBefore ? b : a;\n    let earlier = isBefore ? a : b;\n    earlier = earlier.clone();\n    const diff = {\n      years: 0,\n      months: 0,\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n    Object.keys(diff).forEach((unit) => {\n      if (earlier.isSame(later, unit)) {\n        return\n      }\n      let max = earlier.diff(later, unit);\n      earlier = earlier.add(max, unit);\n      diff[unit] = max;\n    });\n    //reverse it, if necessary\n    if (isBefore) {\n      Object.keys(diff).forEach((u) => {\n        if (diff[u] !== 0) {\n          diff[u] *= -1;\n        }\n      });\n    }\n    return diff\n  }\n\n  let units$2 = {\n      second: 'second',\n      seconds: 'seconds',\n      minute: 'minute',\n      minutes: 'minutes',\n      hour: 'hour',\n      hours: 'hours',\n      day: 'day',\n      days: 'days',\n      month: 'month',\n      months: 'months',\n      year: 'year',\n      years: 'years',\n  };\n\n  function unitsString(unit) {\n      return units$2[unit] || '';\n  }\n\n  function set$2(i18n = {}) {\n      units$2 = {\n          second: i18n.second || units$2.second,\n          seconds: i18n.seconds || units$2.seconds,\n          minute: i18n.minute || units$2.minute,\n          minutes: i18n.minutes || units$2.minutes,\n          hour: i18n.hour || units$2.hour,\n          hours: i18n.hours || units$2.hours,\n          day: i18n.day || units$2.day,\n          days: i18n.days || units$2.days,\n          month: i18n.month || units$2.month,\n          months: i18n.months || units$2.months,\n          year: i18n.year || units$2.year,\n          years: i18n.years || units$2.years,\n      };\n  }\n\n  let past = 'past';\n  let future = 'future';\n  let present = 'present';\n  let now = 'now';\n  let almost = 'almost';\n  let over = 'over';\n  let pastDistance = (value) => `${value} ago`;\n  let futureDistance = (value) => `in ${value}`;\n\n  function pastDistanceString(value) { return pastDistance(value) }\n  function futureDistanceString(value) { return futureDistance(value) }\n  function pastString() { return past }\n  function futureString() { return future }\n  function presentString() { return present }\n  function nowString() { return now }\n  function almostString() { return almost }\n  function overString() { return over }\n\n  function set$1(i18n) {\n      pastDistance = i18n.pastDistance || pastDistance;\n      futureDistance = i18n.futureDistance || futureDistance;\n      past = i18n.past || past;\n      future = i18n.future || future;\n      present = i18n.present || present;\n      now = i18n.now || now;\n      almost = i18n.almost || almost;\n      over = i18n.over || over;\n  }\n\n  //our conceptual 'break-points' for each unit\n\n  const qualifiers = {\n    months: {\n      almost: 10,\n      over: 4\n    },\n    days: {\n      almost: 25,\n      over: 10\n    },\n    hours: {\n      almost: 20,\n      over: 8\n    },\n    minutes: {\n      almost: 50,\n      over: 20\n    },\n    seconds: {\n      almost: 50,\n      over: 20\n    }\n  };\n\n  // Expects a plural unit arg\n  function pluralize(value, unit) {\n    if (value === 1) {\n      return value + ' ' + unitsString(unit.slice(0, -1))\n    }\n    return value + ' ' + unitsString(unit)\n  }\n\n  const toSoft = function (diff) {\n    let rounded = null;\n    let qualified = null;\n    let abbreviated = [];\n    let englishValues = [];\n    //go through each value and create its text-representation\n    Object.keys(diff).forEach((unit, i, units) => {\n      const value = Math.abs(diff[unit]);\n      if (value === 0) {\n        return\n      }\n      abbreviated.push(value + unit[0]);\n      const englishValue = pluralize(value, unit);\n      englishValues.push(englishValue);\n      if (!rounded) {\n        rounded = qualified = englishValue;\n        if (i > 4) {\n          return\n        }\n        //is it a 'almost' something, etc?\n        const nextUnit = units[i + 1];\n        const nextValue = Math.abs(diff[nextUnit]);\n        if (nextValue > qualifiers[nextUnit].almost) {\n          rounded = pluralize(value + 1, unit);\n          qualified = almostString() + ' ' + rounded;\n        } else if (nextValue > qualifiers[nextUnit].over) {\n          qualified = overString() + ' ' + englishValue;\n        }\n      }\n    });\n\n    return { qualified, rounded, abbreviated, englishValues }\n  };\n  var soften = toSoft;\n\n  //by spencermountain + Shaun Grady\n\n  //create the human-readable diff between the two dates\n  const since = (start, end) => {\n    end = beADate(end, start);\n    const diff = getDiff(start, end);\n    const isNow = Object.keys(diff).every((u) => !diff[u]);\n    if (isNow === true) {\n      return {\n        diff,\n        rounded: nowString(),\n        qualified: nowString(),\n        precise: nowString(),\n        abbreviated: [],\n        iso: 'P0Y0M0DT0H0M0S',\n        direction: presentString(),\n      }\n    }\n    let precise;\n    let direction = futureString();\n\n    let { rounded, qualified, englishValues, abbreviated } = soften(diff);\n\n    //make them into a string\n    precise = englishValues.splice(0, 2).join(', ');\n    //handle before/after logic\n    if (start.isAfter(end) === true) {\n      rounded = pastDistanceString(rounded);\n      qualified = pastDistanceString(qualified);\n      precise = pastDistanceString(precise);\n      direction = pastString();\n    } else {\n      rounded = futureDistanceString(rounded);\n      qualified = futureDistanceString(qualified);\n      precise = futureDistanceString(precise);\n    }\n    // https://en.wikipedia.org/wiki/ISO_8601#Durations\n    // P[n]Y[n]M[n]DT[n]H[n]M[n]S \n    let iso = toISO$1(diff);\n    return {\n      diff,\n      rounded,\n      qualified,\n      precise,\n      abbreviated,\n      iso,\n      direction,\n    }\n  };\n\n  var since$1 = since;\n\n  //https://www.timeanddate.com/calendar/aboutseasons.html\n  // Spring - from March 1 to May 31;\n  // Summer - from June 1 to August 31;\n  // Fall (autumn) - from September 1 to November 30; and,\n  // Winter - from December 1 to February 28 (February 29 in a leap year).\n  const north = [\n    ['spring', 2, 1],\n    ['summer', 5, 1],\n    ['fall', 8, 1],\n    ['autumn', 8, 1],\n    ['winter', 11, 1] //dec 1\n  ];\n  const south = [\n    ['fall', 2, 1],\n    ['autumn', 2, 1],\n    ['winter', 5, 1],\n    ['spring', 8, 1],\n    ['summer', 11, 1] //dec 1\n  ];\n\n  var seasons = { north, south };\n\n  var quarters = [\n    null,\n    [0, 1], //jan 1\n    [3, 1], //apr 1\n    [6, 1], //july 1\n    [9, 1] //oct 1\n  ];\n\n  const units$1 = {\n    second: (s) => {\n      walkTo$1(s, {\n        millisecond: 0\n      });\n      return s\n    },\n    minute: (s) => {\n      walkTo$1(s, {\n        second: 0,\n        millisecond: 0\n      });\n      return s\n    },\n    quarterhour: (s) => {\n      let minute = s.minutes();\n      if (minute >= 45) {\n        s = s.minutes(45);\n      } else if (minute >= 30) {\n        s = s.minutes(30);\n      } else if (minute >= 15) {\n        s = s.minutes(15);\n      } else {\n        s = s.minutes(0);\n      }\n      walkTo$1(s, {\n        second: 0,\n        millisecond: 0\n      });\n      return s\n    },\n    hour: (s) => {\n      walkTo$1(s, {\n        minute: 0,\n        second: 0,\n        millisecond: 0\n      });\n      return s\n    },\n    day: (s) => {\n      walkTo$1(s, {\n        hour: 0,\n        minute: 0,\n        second: 0,\n        millisecond: 0\n      });\n      return s\n    },\n    week: (s) => {\n      let original = s.clone();\n      s = s.day(s._weekStart); //monday\n      if (s.isAfter(original)) {\n        s = s.subtract(1, 'week');\n      }\n      walkTo$1(s, {\n        hour: 0,\n        minute: 0,\n        second: 0,\n        millisecond: 0\n      });\n      return s\n    },\n    month: (s) => {\n      walkTo$1(s, {\n        date: 1,\n        hour: 0,\n        minute: 0,\n        second: 0,\n        millisecond: 0\n      });\n      return s\n    },\n    quarter: (s) => {\n      let q = s.quarter();\n      if (quarters[q]) {\n        walkTo$1(s, {\n          month: quarters[q][0],\n          date: quarters[q][1],\n          hour: 0,\n          minute: 0,\n          second: 0,\n          millisecond: 0\n        });\n      }\n      return s\n    },\n    season: (s) => {\n      let current = s.season();\n      let hem = 'north';\n      if (s.hemisphere() === 'South') {\n        hem = 'south';\n      }\n      for (let i = 0; i < seasons[hem].length; i++) {\n        if (seasons[hem][i][0] === current) {\n          //winter goes between years\n          let year = s.year();\n          if (current === 'winter' && s.month() < 3) {\n            year -= 1;\n          }\n          walkTo$1(s, {\n            year,\n            month: seasons[hem][i][1],\n            date: seasons[hem][i][2],\n            hour: 0,\n            minute: 0,\n            second: 0,\n            millisecond: 0\n          });\n          return s\n        }\n      }\n      return s\n    },\n    year: (s) => {\n      walkTo$1(s, {\n        month: 0,\n        date: 1,\n        hour: 0,\n        minute: 0,\n        second: 0,\n        millisecond: 0\n      });\n      return s\n    },\n    decade: (s) => {\n      s = s.startOf('year');\n      let year = s.year();\n      let decade = parseInt(year / 10, 10) * 10;\n      s = s.year(decade);\n      return s\n    },\n    century: (s) => {\n      s = s.startOf('year');\n      let year = s.year();\n      // near 0AD goes '-1 | +1'\n      let decade = parseInt(year / 100, 10) * 100;\n      s = s.year(decade);\n      return s\n    }\n  };\n  units$1.date = units$1.day;\n\n  const startOf = (a, unit) => {\n    let s = a.clone();\n    unit = normalize$2(unit);\n    if (units$1[unit]) {\n      return units$1[unit](s)\n    }\n    if (unit === 'summer' || unit === 'winter') {\n      s = s.season(unit);\n      return units$1.season(s)\n    }\n    return s\n  };\n\n  //piggy-backs off startOf\n  const endOf = (a, unit) => {\n    let s = a.clone();\n    unit = normalize$2(unit);\n    if (units$1[unit]) {\n      // go to beginning, go to next one, step back 1ms\n      s = units$1[unit](s); // startof\n      s = s.add(1, unit);\n      s = s.subtract(1, 'millisecond');\n      return s\n    }\n    return s\n  };\n\n  //is it 'wednesday'?\n  const isDay = function (unit) {\n    if (short().find((s) => s === unit)) {\n      return true\n    }\n    if (long().find((s) => s === unit)) {\n      return true\n    }\n    return false\n  };\n\n  // return a list of the weeks/months/days between a -> b\n  // returns spacetime objects in the timezone of the input\n  const every = function (start, unit, end) {\n    if (!unit || !end) {\n      return []\n    }\n    //cleanup unit param\n    unit = normalize$2(unit);\n    //cleanup to param\n    end = start.clone().set(end);\n    //swap them, if they're backwards\n    if (start.isAfter(end)) {\n      let tmp = start;\n      start = end;\n      end = tmp;\n    }\n\n    //support 'every wednesday'\n    let d = start.clone();\n    if (isDay(unit)) {\n      d = d.next(unit);\n      unit = 'week';\n    } else {\n      let first = d.startOf(unit);\n      if (first.isBefore(start)) {\n        d = d.next(unit);\n      }\n    }\n    //okay, actually start doing it\n    let result = [];\n    while (d.isBefore(end)) {\n      result.push(d);\n      d = d.add(1, unit);\n    }\n    return result\n  };\n  var every$1 = every;\n\n  const parseDst = dst => {\n    if (!dst) {\n      return []\n    }\n    return dst.split('->')\n  };\n\n  //iana codes are case-sensitive, technically\n  const titleCase = str => {\n    str = str[0].toUpperCase() + str.substr(1);\n    str = str.replace(/[\\/_-]([a-z])/gi, s => {\n      return s.toUpperCase()\n    });\n    str = str.replace(/_(of|es)_/i, (s) => s.toLowerCase());\n    str = str.replace(/\\/gmt/i, '/GMT');\n    str = str.replace(/\\/Dumontdurville$/i, '/DumontDUrville');\n    str = str.replace(/\\/Mcmurdo$/i, '/McMurdo');\n    str = str.replace(/\\/Port-au-prince$/i, '/Port-au-Prince');\n    return str\n  };\n\n  //get metadata about this timezone\n  const timezone = s => {\n    let zones = s.timezones;\n    let tz = s.tz;\n    if (zones.hasOwnProperty(tz) === false) {\n      tz = findTz(s.tz, zones);\n    }\n    if (tz === null) {\n      if (s.silent === false) {\n        console.warn(\"Warn: could not find given or local timezone - '\" + s.tz + \"'\");\n      }\n      return {\n        current: {\n          epochShift: 0\n        }\n      }\n    }\n    let found = zones[tz];\n    let result = {\n      name: titleCase(tz),\n      hasDst: Boolean(found.dst),\n      default_offset: found.offset,\n      //do north-hemisphere version as default (sorry!)\n      hemisphere: found.hem === 's' ? 'South' : 'North',\n      current: {}\n    };\n\n    if (result.hasDst) {\n      let arr = parseDst(found.dst);\n      result.change = {\n        start: arr[0],\n        back: arr[1]\n      };\n    }\n    //find the offsets for summer/winter times\n    //(these variable names are north-centric)\n    let summer = found.offset; // (july)\n    let winter = summer; // (january) assume it's the same for now\n    if (result.hasDst === true) {\n      if (result.hemisphere === 'North') {\n        winter = summer - 1;\n      } else {\n        //southern hemisphere\n        winter = found.offset + 1;\n      }\n    }\n\n    //find out which offset to use right now\n    //use 'summer' time july-time\n    if (result.hasDst === false) {\n      result.current.offset = summer;\n      result.current.isDST = false;\n    } else if (inSummerTime$1(s.epoch, result.change.start, result.change.back, summer, winter) === true) {\n      result.current.offset = summer;\n      result.current.isDST = result.hemisphere === 'North'; //dst 'on' in winter in north\n    } else {\n      //use 'winter' january-time\n      result.current.offset = winter;\n      result.current.isDST = result.hemisphere === 'South'; //dst 'on' in summer in south\n    }\n    return result\n  };\n  var timezone$1 = timezone;\n\n  const units = [\n    'century',\n    'decade',\n    'year',\n    'month',\n    'date',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'millisecond'\n  ];\n\n  //the spacetime instance methods (also, the API)\n  const methods$4 = {\n    set: function (input, tz) {\n      let s = this.clone();\n      s = handleInput(s, input);\n      if (tz) {\n        this.tz = findTz(tz);\n      }\n      return s\n    },\n    timezone: function () {\n      return timezone$1(this)\n    },\n    isDST: function () {\n      return timezone$1(this).current.isDST\n    },\n    hasDST: function () {\n      return timezone$1(this).hasDst\n    },\n    offset: function () {\n      return timezone$1(this).current.offset * 60\n    },\n    hemisphere: function () {\n      return timezone$1(this).hemisphere\n    },\n    format: function (fmt) {\n      return format$1(this, fmt)\n    },\n    unixFmt: function (fmt) {\n      return unixFmt$1(this, fmt)\n    },\n    startOf: function (unit) {\n      return startOf(this, unit)\n    },\n    endOf: function (unit) {\n      return endOf(this, unit)\n    },\n    leapYear: function () {\n      let year = this.year();\n      return isLeapYear(year)\n    },\n    progress: function (unit) {\n      return progress$1(this, unit)\n    },\n    nearest: function (unit) {\n      return nearest$1(this, unit)\n    },\n    diff: function (d, unit) {\n      return diff(this, d, unit)\n    },\n    since: function (d) {\n      if (!d) {\n        d = this.clone().set();\n      }\n      return since$1(this, d)\n    },\n    next: function (unit) {\n      let s = this.add(1, unit);\n      return s.startOf(unit)\n    },\n    //the start of the previous year/week/century\n    last: function (unit) {\n      let s = this.subtract(1, unit);\n      return s.startOf(unit)\n    },\n    isValid: function () {\n      //null/undefined epochs\n      if (!this.epoch && this.epoch !== 0) {\n        return false\n      }\n      return !isNaN(this.d.getTime())\n    },\n    //travel to this timezone\n    goto: function (tz) {\n      let s = this.clone();\n      s.tz = findTz(tz, s.timezones); //science!\n      return s\n    },\n    //get each week/month/day between a -> b\n    every: function (unit, to) {\n      // allow swapping these params:\n      if (typeof unit === 'object' && typeof to === 'string') {\n        let tmp = to;\n        to = unit;\n        unit = tmp;\n      }\n      return every$1(this, unit, to)\n    },\n    isAwake: function () {\n      let hour = this.hour();\n      //10pm -> 8am\n      if (hour < 8 || hour > 22) {\n        return false\n      }\n      return true\n    },\n    isAsleep: function () {\n      return !this.isAwake()\n    },\n    daysInMonth: function () {\n      switch (this.month()) {\n        case 0:\n          return 31\n        case 1:\n          return this.leapYear() ? 29 : 28\n        case 2:\n          return 31\n        case 3:\n          return 30\n        case 4:\n          return 31\n        case 5:\n          return 30\n        case 6:\n          return 31\n        case 7:\n          return 31\n        case 8:\n          return 30\n        case 9:\n          return 31\n        case 10:\n          return 30\n        case 11:\n          return 31\n        default:\n          throw new Error('Invalid Month state.')\n      }\n    },\n    //pretty-printing\n    log: function () {\n      console.log('');\n      console.log(format$1(this, 'nice-short'));\n      return this\n    },\n    logYear: function () {\n      console.log('');\n      console.log(format$1(this, 'full-short'));\n      return this\n    },\n    json: function () {\n      return units.reduce((h, unit) => {\n        h[unit] = this[unit]();\n        return h\n      }, {})\n    },\n    debug: function () {\n      let tz = this.timezone();\n      let date = this.format('MM') + ' ' + this.format('date-ordinal') + ' ' + this.year();\n      date += '\\n     - ' + this.format('time');\n      console.log('\\n\\n', date + '\\n     - ' + tz.name + ' (' + tz.current.offset + ')');\n      return this\n    },\n    //alias of 'since' but opposite - like moment.js\n    from: function (d) {\n      d = this.clone().set(d);\n      return d.since(this)\n    },\n    fromNow: function () {\n      let d = this.clone().set(Date.now());\n      return d.since(this)\n    },\n    weekStart: function (input) {\n      //accept a number directly\n      if (typeof input === 'number') {\n        this._weekStart = input;\n        return this\n      }\n      if (typeof input === 'string') {\n        // accept 'wednesday'\n        input = input.toLowerCase().trim();\n        let num = short().indexOf(input);\n        if (num === -1) {\n          num = long().indexOf(input);\n        }\n        if (num === -1) {\n          num = 1; //go back to default\n        }\n        this._weekStart = num;\n      } else {\n        console.warn('Spacetime Error: Cannot understand .weekStart() input:', input);\n      }\n      return this\n    }\n  };\n  // aliases\n  methods$4.inDST = methods$4.isDST;\n  methods$4.round = methods$4.nearest;\n  methods$4.each = methods$4.every;\n  var methods$5 = methods$4;\n\n  // javascript setX methods like setDate() can't be used because of the local bias\n  //these methods wrap around them.\n\n  const validate = (n) => {\n    //handle number as a string\n    if (typeof n === 'string') {\n      n = parseInt(n, 10);\n    }\n    return n\n  };\n\n  const order$1 = ['year', 'month', 'date', 'hour', 'minute', 'second', 'millisecond'];\n\n  //reduce hostile micro-changes when moving dates by millisecond\n  const confirm = (s, tmp, unit) => {\n    let n = order$1.indexOf(unit);\n    let arr = order$1.slice(n, order$1.length);\n    for (let i = 0; i < arr.length; i++) {\n      let want = tmp[arr[i]]();\n      s[arr[i]](want);\n    }\n    return s\n  };\n\n  // allow specifying setter direction\n  const fwdBkwd = function (s, old, goFwd, unit) {\n    if (goFwd === true && s.isBefore(old)) {\n      s = s.add(1, unit);\n    } else if (goFwd === false && s.isAfter(old)) {\n      s = s.minus(1, unit);\n    }\n    return s\n  };\n\n  const milliseconds = function (s, n) {\n    n = validate(n);\n    let current = s.millisecond();\n    let diff = current - n; //milliseconds to shift by\n    return s.epoch - diff\n  };\n\n  const seconds = function (s, n, goFwd) {\n    n = validate(n);\n    let old = s.clone();\n    let diff = s.second() - n;\n    let shift = diff * ms.second;\n    s.epoch = s.epoch - shift;\n    s = fwdBkwd(s, old, goFwd, 'minute'); // specify direction\n    return s.epoch\n  };\n\n  const minutes = function (s, n, goFwd) {\n    n = validate(n);\n    let old = s.clone();\n    let diff = s.minute() - n;\n    let shift = diff * ms.minute;\n    s.epoch -= shift;\n    confirm(s, old, 'second');\n    s = fwdBkwd(s, old, goFwd, 'hour'); // specify direction\n    return s.epoch\n  };\n\n  const hours = function (s, n, goFwd) {\n    n = validate(n);\n    if (n >= 24) {\n      n = 24;\n    } else if (n < 0) {\n      n = 0;\n    }\n    let old = s.clone();\n    let diff = s.hour() - n;\n    let shift = diff * ms.hour;\n    s.epoch -= shift;\n    // oops, did we change the day?\n    if (s.date() !== old.date()) {\n      s = old.clone();\n      if (diff > 1) {\n        diff -= 1;\n      }\n      if (diff < 1) {\n        diff += 1;\n      }\n      shift = diff * ms.hour;\n      s.epoch -= shift;\n    }\n    walkTo$1(s, {\n      hour: n\n    });\n    confirm(s, old, 'minute');\n    s = fwdBkwd(s, old, goFwd, 'day'); // specify direction\n    return s.epoch\n  };\n\n  const time = function (s, str, goFwd) {\n    let m = str.match(/([0-9]{1,2})[:h]([0-9]{1,2})(:[0-9]{1,2})? ?(am|pm)?/);\n    if (!m) {\n      //fallback to support just '2am'\n      m = str.match(/([0-9]{1,2}) ?(am|pm)/);\n      if (!m) {\n        return s.epoch\n      }\n      m.splice(2, 0, '0'); //add implicit 0 minutes\n      m.splice(3, 0, ''); //add implicit seconds\n    }\n    let h24 = false;\n    let hour = parseInt(m[1], 10);\n    let minute = parseInt(m[2], 10);\n    if (minute >= 60) {\n      minute = 59;\n    }\n    if (hour > 12) {\n      h24 = true;\n    }\n    //make the hour into proper 24h time\n    if (h24 === false) {\n      if (m[4] === 'am' && hour === 12) {\n        //12am is midnight\n        hour = 0;\n      }\n      if (m[4] === 'pm' && hour < 12) {\n        //12pm is noon\n        hour += 12;\n      }\n    }\n    // handle seconds\n    m[3] = m[3] || '';\n    m[3] = m[3].replace(/:/, '');\n    let sec = parseInt(m[3], 10) || 0;\n    let old = s.clone();\n    s = s.hour(hour);\n    s = s.minute(minute);\n    s = s.second(sec);\n    s = s.millisecond(0);\n    s = fwdBkwd(s, old, goFwd, 'day'); // specify direction\n    return s.epoch\n  };\n\n  const date = function (s, n, goFwd) {\n    n = validate(n);\n    //avoid setting february 31st\n    if (n > 28) {\n      let month = s.month();\n      let max = monthLength[month];\n      // support leap day in february\n      if (month === 1 && n === 29 && isLeapYear(s.year())) {\n        max = 29;\n      }\n      if (n > max) {\n        n = max;\n      }\n    }\n    //avoid setting < 0\n    if (n <= 0) {\n      n = 1;\n    }\n    let old = s.clone();\n    walkTo$1(s, {\n      date: n\n    });\n    s = fwdBkwd(s, old, goFwd, 'month'); // specify direction\n    return s.epoch\n  };\n\n  const month = function (s, n, goFwd) {\n    if (typeof n === 'string') {\n      if (n === 'sept') {\n        n = 'sep';\n      }\n      n = mapping$1()[n.toLowerCase()];\n    }\n    n = validate(n);\n    //don't go past december\n    if (n >= 12) {\n      n = 11;\n    }\n    if (n <= 0) {\n      n = 0;\n    }\n\n    let d = s.date();\n    //there's no 30th of february, etc.\n    if (d > monthLength[n]) {\n      //make it as close as we can..\n      d = monthLength[n];\n    }\n    let old = s.clone();\n    walkTo$1(s, {\n      month: n,\n      d\n    });\n    s = fwdBkwd(s, old, goFwd, 'year'); // specify direction\n    return s.epoch\n  };\n\n  const year = function (s, n) {\n    // support '97\n    if (typeof n === 'string' && /^'[0-9]{2}$/.test(n)) {\n      n = n.replace(/'/, '').trim();\n      n = Number(n);\n      // '89 is 1989\n      if (n > 30) {\n        //change this in 10y\n        n = 1900 + n;\n      } else {\n        // '12 is 2012\n        n = 2000 + n;\n      }\n    }\n    n = validate(n);\n    walkTo$1(s, {\n      year: n\n    });\n    return s.epoch\n  };\n\n  const week = function (s, n, goFwd) {\n    let old = s.clone();\n    n = validate(n);\n    s = s.month(0);\n    s = s.date(1);\n    s = s.day('monday');\n    //first week starts first Thurs in Jan\n    // so mon dec 28th is 1st week\n    // so mon dec 29th is not the week\n    if (s.monthName() === 'december' && s.date() >= 28) {\n      s = s.add(1, 'week');\n    }\n    n -= 1; //1-based\n    s = s.add(n, 'weeks');\n    s = fwdBkwd(s, old, goFwd, 'year'); // specify direction\n    return s.epoch\n  };\n\n  const dayOfYear = function (s, n, goFwd) {\n    n = validate(n);\n    let old = s.clone();\n    n -= 1; //days are 1-based\n    if (n <= 0) {\n      n = 0;\n    } else if (n >= 365) {\n      if (isLeapYear(s.year())) {\n        n = 365;\n      } else {\n        n = 364;\n      }\n    }\n    s = s.startOf('year');\n    s = s.add(n, 'day');\n    confirm(s, old, 'hour');\n    s = fwdBkwd(s, old, goFwd, 'year'); // specify direction\n    return s.epoch\n  };\n\n  let morning = 'am';\n  let evening = 'pm';\n\n  function am() { return morning }\n  function pm() { return evening }\n  function set(i18n) {\n      morning = i18n.am || morning;\n      evening = i18n.pm || evening;\n  }\n\n  const methods$3 = {\n    millisecond: function (num) {\n      if (num !== undefined) {\n        let s = this.clone();\n        s.epoch = milliseconds(s, num);\n        return s\n      }\n      return this.d.getMilliseconds()\n    },\n    second: function (num, goFwd) {\n      if (num !== undefined) {\n        let s = this.clone();\n        s.epoch = seconds(s, num, goFwd);\n        return s\n      }\n      return this.d.getSeconds()\n    },\n    minute: function (num, goFwd) {\n      if (num !== undefined) {\n        let s = this.clone();\n        s.epoch = minutes(s, num, goFwd);\n        return s\n      }\n      return this.d.getMinutes()\n    },\n    hour: function (num, goFwd) {\n      let d = this.d;\n      if (num !== undefined) {\n        let s = this.clone();\n        s.epoch = hours(s, num, goFwd);\n        return s\n      }\n      return d.getHours()\n    },\n\n    //'3:30' is 3.5\n    hourFloat: function (num, goFwd) {\n      if (num !== undefined) {\n        let s = this.clone();\n        let minute = num % 1;\n        minute = minute * 60;\n        let hour = parseInt(num, 10);\n        s.epoch = hours(s, hour, goFwd);\n        s.epoch = minutes(s, minute, goFwd);\n        return s\n      }\n      let d = this.d;\n      let hour = d.getHours();\n      let minute = d.getMinutes();\n      minute = minute / 60;\n      return hour + minute\n    },\n\n    // hour in 12h format\n    hour12: function (str, goFwd) {\n      let d = this.d;\n      if (str !== undefined) {\n        let s = this.clone();\n        str = '' + str;\n        let m = str.match(/^([0-9]+)(am|pm)$/);\n        if (m) {\n          let hour = parseInt(m[1], 10);\n          if (m[2] === 'pm') {\n            hour += 12;\n          }\n          s.epoch = hours(s, hour, goFwd);\n        }\n        return s\n      }\n      //get the hour\n      let hour12 = d.getHours();\n      if (hour12 > 12) {\n        hour12 = hour12 - 12;\n      }\n      if (hour12 === 0) {\n        hour12 = 12;\n      }\n      return hour12\n    },\n\n    //some ambiguity here with 12/24h\n    time: function (str, goFwd) {\n      if (str !== undefined) {\n        let s = this.clone();\n        str = str.toLowerCase().trim();\n        s.epoch = time(s, str, goFwd);\n        return s\n      }\n      return `${this.h12()}:${zeroPad(this.minute())}${this.ampm()}`\n    },\n\n    // either 'am' or 'pm'\n    ampm: function (input, goFwd) {\n      // let which = 'am'\n      let which = am();\n      let hour = this.hour();\n      if (hour >= 12) {\n        // which = 'pm'\n        which = pm();\n      }\n      if (typeof input !== 'string') {\n        return which\n      }\n      //okay, we're doing a setter\n      let s = this.clone();\n      input = input.toLowerCase().trim();\n      //ampm should never change the day\n      // - so use `.hour(n)` instead of `.minus(12,'hour')`\n      if (hour >= 12 && input === 'am') {\n        //noon is 12pm\n        hour -= 12;\n        return s.hour(hour, goFwd)\n      }\n      if (hour < 12 && input === 'pm') {\n        hour += 12;\n        return s.hour(hour, goFwd)\n      }\n      return s\n    },\n\n    //some hard-coded times of day, like 'noon'\n    dayTime: function (str, goFwd) {\n      if (str !== undefined) {\n        const times = {\n          morning: '7:00',\n          breakfast: '7:00',\n          noon: '12:00',\n          lunch: '12:00',\n          afternoon: '14:00',\n          evening: '18:00',\n          dinner: '18:00',\n          night: '23:00',\n          midnight: '00:00'\n        };\n        let s = this.clone();\n        str = str || '';\n        str = str.toLowerCase();\n        if (times.hasOwnProperty(str) === true) {\n          s = s.time(times[str], goFwd);\n        }\n        return s\n      }\n      let h = this.hour();\n      if (h < 6) {\n        return 'night'\n      }\n      if (h < 12) {\n        //until noon\n        return 'morning'\n      }\n      if (h < 17) {\n        //until 5pm\n        return 'afternoon'\n      }\n      if (h < 22) {\n        //until 10pm\n        return 'evening'\n      }\n      return 'night'\n    },\n\n    //parse a proper iso string\n    iso: function (num) {\n      if (num !== undefined) {\n        return this.set(num)\n      }\n      return this.format('iso')\n    }\n  };\n  var timeFns = methods$3;\n\n  const methods$2 = {\n    // # day in the month\n    date: function (num, goFwd) {\n      if (num !== undefined) {\n        let s = this.clone();\n        num = parseInt(num, 10);\n        if (num) {\n          s.epoch = date(s, num, goFwd);\n        }\n        return s\n      }\n      return this.d.getDate()\n    },\n\n    //like 'wednesday' (hard!)\n    day: function (input, goFwd) {\n      if (input === undefined) {\n        return this.d.getDay()\n      }\n      let original = this.clone();\n      let want = input;\n      // accept 'wednesday'\n      if (typeof input === 'string') {\n        input = input.toLowerCase();\n        if (aliases$1.hasOwnProperty(input)) {\n          want = aliases$1[input];\n        } else {\n          want = short().indexOf(input);\n          if (want === -1) {\n            want = long().indexOf(input);\n          }\n        }\n      }\n      //move approx\n      let day = this.d.getDay();\n      let diff = day - want;\n      if (goFwd === true && diff > 0) {\n        diff = diff - 7;\n      }\n      if (goFwd === false && diff < 0) {\n        diff = diff + 7;\n      }\n      let s = this.subtract(diff, 'days');\n      //tighten it back up\n      walkTo$1(s, {\n        hour: original.hour(),\n        minute: original.minute(),\n        second: original.second()\n      });\n      return s\n    },\n\n    //these are helpful name-wrappers\n    dayName: function (input, goFwd) {\n      if (input === undefined) {\n        return long()[this.day()]\n      }\n      let s = this.clone();\n      s = s.day(input, goFwd);\n      return s\n    }\n  };\n  var dateFns = methods$2;\n\n  const clearMinutes = (s) => {\n    s = s.minute(0);\n    s = s.second(0);\n    s = s.millisecond(1);\n    return s\n  };\n\n  const methods$1 = {\n    // day 0-366\n    dayOfYear: function (num, goFwd) {\n      if (num !== undefined) {\n        let s = this.clone();\n        s.epoch = dayOfYear(s, num, goFwd);\n        return s\n      }\n      //days since newyears - jan 1st is 1, jan 2nd is 2...\n      let sum = 0;\n      let month = this.d.getMonth();\n      let tmp;\n      //count the num days in each month\n      for (let i = 1; i <= month; i++) {\n        tmp = new Date();\n        tmp.setDate(1);\n        tmp.setFullYear(this.d.getFullYear()); //the year matters, because leap-years\n        tmp.setHours(1);\n        tmp.setMinutes(1);\n        tmp.setMonth(i);\n        tmp.setHours(-2); //the last day of the month\n        sum += tmp.getDate();\n      }\n      return sum + this.d.getDate()\n    },\n\n    //since the start of the year\n    week: function (num, goFwd) {\n      // week-setter\n      if (num !== undefined) {\n        let s = this.clone();\n        s.epoch = week(this, num, goFwd);\n        s = clearMinutes(s);\n        return s\n      }\n      //find-out which week it is\n      let tmp = this.clone();\n      tmp = tmp.month(0);\n      tmp = tmp.date(1);\n      tmp = clearMinutes(tmp);\n      tmp = tmp.day('monday');\n      //don't go into last-year\n      if (tmp.month() === 11 && tmp.date() >= 25) {\n        tmp = tmp.add(1, 'week');\n      }\n\n      // is first monday the 1st?\n      let toAdd = 1;\n      if (tmp.date() === 1) {\n        toAdd = 0;\n      }\n      tmp = tmp.minus(1, 'second');\n      const thisOne = this.epoch;\n      //if the week technically hasn't started yet\n      if (tmp.epoch > thisOne) {\n        return 1\n      }\n      //speed it up, if we can\n      let i = 0;\n      let skipWeeks = this.month() * 4;\n      // console.log(ms.week+ \" \"+ skipWeeks);\n      tmp.epoch += ms.week * skipWeeks;\n      i += skipWeeks;\n      for (; i <= 52; i++) {\n        if (tmp.epoch > thisOne) {\n          return i + toAdd\n        }\n        tmp = tmp.add(1, 'week');\n      }\n      return 52\n    },\n    //either name or number\n    month: function (input, goFwd) {\n      if (input !== undefined) {\n        let s = this.clone();\n        s.epoch = month(s, input, goFwd);\n        return s\n      }\n      return this.d.getMonth()\n    },\n    //'january'\n    monthName: function (input, goFwd) {\n      if (input !== undefined) {\n        let s = this.clone();\n        s = s.month(input, goFwd);\n        return s\n      }\n      return long$1()[this.month()]\n    },\n\n    //q1, q2, q3, q4\n    quarter: function (num, goFwd) {\n      if (num !== undefined) {\n        if (typeof num === 'string') {\n          num = num.replace(/^q/i, '');\n          num = parseInt(num, 10);\n        }\n        if (quarters[num]) {\n          let s = this.clone();\n          let month = quarters[num][0];\n          s = s.month(month, goFwd);\n          s = s.date(1, goFwd);\n          s = s.startOf('day');\n          return s\n        }\n      }\n      let month = this.d.getMonth();\n      for (let i = 1; i < quarters.length; i++) {\n        if (month < quarters[i][0]) {\n          return i - 1\n        }\n      }\n      return 4\n    },\n\n    //spring, summer, winter, fall\n    season: function (input, goFwd) {\n      let hem = 'north';\n      if (this.hemisphere() === 'South') {\n        hem = 'south';\n      }\n      if (input !== undefined) {    // setter\n        let s = this.clone();\n        for (let i = 0; i < seasons[hem].length; i++) {\n          if (input === seasons[hem][i][0]) {\n            s = s.month(seasons[hem][i][1], goFwd);\n            s = s.date(1);\n            s = s.startOf('day');\n          }\n        }\n        return s\n      }\n      let month = this.d.getMonth();\n      for (let i = 0; i < seasons[hem].length - 1; i++) {\n        if (month >= seasons[hem][i][1] && month < seasons[hem][i + 1][1]) {\n          return seasons[hem][i][0]\n        }\n      }\n      return hem === 'north' ? 'winter' : 'summer'\n    },\n\n    //the year number\n    year: function (num) {\n      if (num !== undefined) {\n        let s = this.clone();\n        s.epoch = year(s, num);\n        return s\n      }\n      return this.d.getFullYear()\n    },\n\n    //bc/ad years\n    era: function (str) {\n      if (str !== undefined) {\n        let s = this.clone();\n        str = str.toLowerCase();\n        //TODO: there is no year-0AD i think. may have off-by-1 error here\n        let year$1 = s.d.getFullYear();\n        //make '1992' into 1992bc..\n        if (str === 'bc' && year$1 > 0) {\n          s.epoch = year(s, year$1 * -1);\n        }\n        //make '1992bc' into '1992'\n        if (str === 'ad' && year$1 < 0) {\n          s.epoch = year(s, year$1 * -1);\n        }\n        return s\n      }\n      if (this.d.getFullYear() < 0) {\n        return 'BC'\n      }\n      return 'AD'\n    },\n\n    // 2019 -> 2010\n    decade: function (input) {\n      if (input !== undefined) {\n        input = String(input);\n        input = input.replace(/([0-9])'?s$/, '$1'); //1950's\n        input = input.replace(/([0-9])(th|rd|st|nd)/, '$1'); //fix ordinals\n        if (!input) {\n          console.warn('Spacetime: Invalid decade input');\n          return this\n        }\n        // assume 20th century?? for '70s'.\n        if (input.length === 2 && /[0-9][0-9]/.test(input)) {\n          input = '19' + input;\n        }\n        let year = Number(input);\n        if (isNaN(year)) {\n          return this\n        }\n        // round it down to the decade\n        year = Math.floor(year / 10) * 10;\n        return this.year(year) //.startOf('decade')\n      }\n      return this.startOf('decade').year()\n    },\n    // 1950 -> 19+1\n    century: function (input) {\n      if (input !== undefined) {\n        if (typeof input === 'string') {\n          input = input.replace(/([0-9])(th|rd|st|nd)/, '$1'); //fix ordinals\n          input = input.replace(/([0-9]+) ?(b\\.?c\\.?|a\\.?d\\.?)/i, (a, b, c) => {\n            if (c.match(/b\\.?c\\.?/i)) {\n              b = '-' + b;\n            }\n            return b\n          });\n          input = input.replace(/c$/, ''); //20thC\n        }\n        let year = Number(input);\n        if (isNaN(input)) {\n          console.warn('Spacetime: Invalid century input');\n          return this\n        }\n        // there is no century 0\n        if (year === 0) {\n          year = 1;\n        }\n        if (year >= 0) {\n          year = (year - 1) * 100;\n        } else {\n          year = (year + 1) * 100;\n        }\n        return this.year(year)\n      }\n      // century getter\n      let num = this.startOf('century').year();\n      num = Math.floor(num / 100);\n      if (num < 0) {\n        return num - 1\n      }\n      return num + 1\n    },\n    // 2019 -> 2+1\n    millenium: function (input) {\n      if (input !== undefined) {\n        if (typeof input === 'string') {\n          input = input.replace(/([0-9])(th|rd|st|nd)/, '$1'); //fix ordinals\n          input = Number(input);\n          if (isNaN(input)) {\n            console.warn('Spacetime: Invalid millenium input');\n            return this\n          }\n        }\n        if (input > 0) {\n          input -= 1;\n        }\n        let year = input * 1000;\n        // there is no year 0\n        if (year === 0) {\n          year = 1;\n        }\n        return this.year(year)\n      }\n      // get the current millenium\n      let num = Math.floor(this.year() / 1000);\n      if (num >= 0) {\n        num += 1;\n      }\n      return num\n    }\n  };\n  var yearFns = methods$1;\n\n  const methods = Object.assign({}, timeFns, dateFns, yearFns);\n\n  //aliases\n  methods.milliseconds = methods.millisecond;\n  methods.seconds = methods.second;\n  methods.minutes = methods.minute;\n  methods.hours = methods.hour;\n  methods.hour24 = methods.hour;\n  methods.h12 = methods.hour12;\n  methods.h24 = methods.hour24;\n  methods.days = methods.day;\n\n  const addMethods$4 = Space => {\n    //hook the methods into prototype\n    Object.keys(methods).forEach(k => {\n      Space.prototype[k] = methods[k];\n    });\n  };\n\n  var queryFns = addMethods$4;\n\n  const getMonthLength = function (month, year) {\n    if (month === 1 && isLeapYear(year)) {\n      return 29\n    }\n    return monthLength[month]\n  };\n\n  //month is the one thing we 'model/compute'\n  //- because ms-shifting can be off by enough\n  const rollMonth = (want, old) => {\n    //increment year\n    if (want.month > 0) {\n      let years = parseInt(want.month / 12, 10);\n      want.year = old.year() + years;\n      want.month = want.month % 12;\n    } else if (want.month < 0) {\n      let m = Math.abs(want.month);\n      let years = parseInt(m / 12, 10);\n      if (m % 12 !== 0) {\n        years += 1;\n      }\n      want.year = old.year() - years;\n      //ignore extras\n      want.month = want.month % 12;\n      want.month = want.month + 12;\n      if (want.month === 12) {\n        want.month = 0;\n      }\n    }\n    return want\n  };\n\n  // briefly support day=-2 (this does not need to be perfect.)\n  const rollDaysDown = (want, old, sum) => {\n    want.year = old.year();\n    want.month = old.month();\n    let date = old.date();\n    want.date = date - Math.abs(sum);\n    while (want.date < 1) {\n      want.month -= 1;\n      if (want.month < 0) {\n        want.month = 11;\n        want.year -= 1;\n      }\n      let max = getMonthLength(want.month, want.year);\n      want.date += max;\n    }\n    return want\n  };\n\n  // briefly support day=33 (this does not need to be perfect.)\n  const rollDaysUp = (want, old, sum) => {\n    let year = old.year();\n    let month = old.month();\n    let max = getMonthLength(month, year);\n    while (sum > max) {\n      sum -= max;\n      month += 1;\n      if (month >= 12) {\n        month -= 12;\n        year += 1;\n      }\n      max = getMonthLength(month, year);\n    }\n    want.month = month;\n    want.date = sum;\n    return want\n  };\n\n  const months = rollMonth;\n  const days = rollDaysUp;\n  const daysBack = rollDaysDown;\n\n  // this logic is a bit of a mess,\n  // but briefly:\n  // millisecond-math, and some post-processing covers most-things\n  // we 'model' the calendar here only a little bit\n  // and that usually works-out...\n\n  const order = ['millisecond', 'second', 'minute', 'hour', 'date', 'month'];\n  let keep = {\n    second: order.slice(0, 1),\n    minute: order.slice(0, 2),\n    quarterhour: order.slice(0, 2),\n    hour: order.slice(0, 3),\n    date: order.slice(0, 4),\n    month: order.slice(0, 4),\n    quarter: order.slice(0, 4),\n    season: order.slice(0, 4),\n    year: order,\n    decade: order,\n    century: order\n  };\n  keep.week = keep.hour;\n  keep.season = keep.date;\n  keep.quarter = keep.date;\n\n  // Units need to be dst adjuested\n  const dstAwareUnits = {\n    year: true,\n    quarter: true,\n    season: true,\n    month: true,\n    week: true,\n    date: true\n  };\n\n  const keepDate = {\n    month: true,\n    quarter: true,\n    season: true,\n    year: true\n  };\n\n  const addMethods$3 = (SpaceTime) => {\n    SpaceTime.prototype.add = function (num, unit) {\n      let s = this.clone();\n\n      if (!unit || num === 0) {\n        return s //don't bother\n      }\n      let old = this.clone();\n      unit = normalize$2(unit);\n      if (unit === 'millisecond') {\n        s.epoch += num;\n        return s\n      }\n      // support 'fortnight' alias\n      if (unit === 'fortnight') {\n        num *= 2;\n        unit = 'week';\n      }\n      //move forward by the estimated milliseconds (rough)\n      if (ms[unit]) {\n        s.epoch += ms[unit] * num;\n      } else if (unit === 'week' || unit === 'weekend') {\n        s.epoch += ms.day * (num * 7);\n      } else if (unit === 'quarter' || unit === 'season') {\n        s.epoch += ms.month * (num * 3);\n      } else if (unit === 'quarterhour') {\n        s.epoch += ms.minute * 15 * num;\n      }\n      //now ensure our milliseconds/etc are in-line\n      let want = {};\n      if (keep[unit]) {\n        keep[unit].forEach((u) => {\n          want[u] = old[u]();\n        });\n      }\n\n      if (dstAwareUnits[unit]) {\n        const diff = old.timezone().current.offset - s.timezone().current.offset;\n        s.epoch += diff * 3600 * 1000;\n      }\n\n      //ensure month/year has ticked-over\n      if (unit === 'month') {\n        want.month = old.month() + num;\n        //month is the one unit we 'model' directly\n        want = months(want, old);\n      }\n      //support coercing a week, too\n      if (unit === 'week') {\n        let sum = old.date() + num * 7;\n        if (sum <= 28 && sum > 1) {\n          want.date = sum;\n        }\n      }\n      if (unit === 'weekend' && s.dayName() !== 'saturday') {\n        s = s.day('saturday', true); //ensure it's saturday\n      }\n      //support 25-hour day-changes on dst-changes\n      else if (unit === 'date') {\n        if (num < 0) {\n          want = daysBack(want, old, num);\n        } else {\n          //specify a naive date number, if it's easy to do...\n          let sum = old.date() + num;\n          // ok, model this one too\n          want = days(want, old, sum);\n        }\n        //manually punt it if we haven't moved at all..\n        if (num !== 0 && old.isSame(s, 'day')) {\n          want.date = old.date() + num;\n        }\n      }\n      // ensure a quarter is 3 months over\n      else if (unit === 'quarter') {\n        want.month = old.month() + num * 3;\n        want.year = old.year();\n        // handle rollover\n        if (want.month < 0) {\n          let years = Math.floor(want.month / 12);\n          let remainder = want.month + Math.abs(years) * 12;\n          want.month = remainder;\n          want.year += years;\n        } else if (want.month >= 12) {\n          let years = Math.floor(want.month / 12);\n          want.month = want.month % 12;\n          want.year += years;\n        }\n        want.date = old.date();\n      }\n      //ensure year has changed (leap-years)\n      else if (unit === 'year') {\n        let wantYear = old.year() + num;\n        let haveYear = s.year();\n        if (haveYear < wantYear) {\n          let toAdd = Math.floor(num / 4) || 1; //approx num of leap-days\n          s.epoch += Math.abs(ms.day * toAdd);\n        } else if (haveYear > wantYear) {\n          let toAdd = Math.floor(num / 4) || 1; //approx num of leap-days\n          s.epoch += ms.day * toAdd;\n        }\n      }\n      //these are easier\n      else if (unit === 'decade') {\n        want.year = s.year() + 10;\n      } else if (unit === 'century') {\n        want.year = s.year() + 100;\n      }\n      //keep current date, unless the month doesn't have it.\n      if (keepDate[unit]) {\n        let max = monthLength[want.month];\n        want.date = old.date();\n        if (want.date > max) {\n          want.date = max;\n        }\n      }\n      if (Object.keys(want).length > 1) {\n        walkTo$1(s, want);\n      }\n      return s\n    };\n\n    //subtract is only add *-1\n    SpaceTime.prototype.subtract = function (num, unit) {\n      let s = this.clone();\n      return s.add(num * -1, unit)\n    };\n    //add aliases\n    SpaceTime.prototype.minus = SpaceTime.prototype.subtract;\n    SpaceTime.prototype.plus = SpaceTime.prototype.add;\n  };\n\n  var addFns = addMethods$3;\n\n  //make a string, for easy comparison between dates\n  const print = {\n    millisecond: (s) => {\n      return s.epoch\n    },\n    second: (s) => {\n      return [s.year(), s.month(), s.date(), s.hour(), s.minute(), s.second()].join('-')\n    },\n    minute: (s) => {\n      return [s.year(), s.month(), s.date(), s.hour(), s.minute()].join('-')\n    },\n    hour: (s) => {\n      return [s.year(), s.month(), s.date(), s.hour()].join('-')\n    },\n    day: (s) => {\n      return [s.year(), s.month(), s.date()].join('-')\n    },\n    week: (s) => {\n      return [s.year(), s.week()].join('-')\n    },\n    month: (s) => {\n      return [s.year(), s.month()].join('-')\n    },\n    quarter: (s) => {\n      return [s.year(), s.quarter()].join('-')\n    },\n    year: (s) => {\n      return s.year()\n    }\n  };\n  print.date = print.day;\n\n  const addMethods$2 = (SpaceTime) => {\n    SpaceTime.prototype.isSame = function (b, unit, tzAware = true) {\n      let a = this;\n      if (!unit) {\n        return null\n      }\n      // support swapped params\n      if (typeof b === 'string' && typeof unit === 'object') {\n        let tmp = b;\n        b = unit;\n        unit = tmp;\n      }\n      if (typeof b === 'string' || typeof b === 'number') {\n        b = new SpaceTime(b, this.timezone.name);\n      }\n      //support 'seconds' aswell as 'second'\n      unit = unit.replace(/s$/, '');\n\n      // make them the same timezone for proper comparison\n      if (tzAware === true && a.tz !== b.tz) {\n        b = b.clone();\n        b.tz = a.tz;\n      }\n      if (print[unit]) {\n        return print[unit](a) === print[unit](b)\n      }\n      return null\n    };\n  };\n\n  var sameFns = addMethods$2;\n\n  const addMethods$1 = SpaceTime => {\n    const methods = {\n      isAfter: function (d) {\n        d = beADate(d, this);\n        let epoch = getEpoch(d);\n        if (epoch === null) {\n          return null\n        }\n        return this.epoch > epoch\n      },\n      isBefore: function (d) {\n        d = beADate(d, this);\n        let epoch = getEpoch(d);\n        if (epoch === null) {\n          return null\n        }\n        return this.epoch < epoch\n      },\n      isEqual: function (d) {\n        d = beADate(d, this);\n        let epoch = getEpoch(d);\n        if (epoch === null) {\n          return null\n        }\n        return this.epoch === epoch\n      },\n      isBetween: function (start, end, isInclusive = false) {\n        start = beADate(start, this);\n        end = beADate(end, this);\n        let startEpoch = getEpoch(start);\n        if (startEpoch === null) {\n          return null\n        }\n        let endEpoch = getEpoch(end);\n        if (endEpoch === null) {\n          return null\n        }\n        if (isInclusive) {\n          return this.isBetween(start, end) || this.isEqual(start) || this.isEqual(end);\n        }\n        return startEpoch < this.epoch && this.epoch < endEpoch\n      }\n    };\n\n    //hook them into proto\n    Object.keys(methods).forEach(k => {\n      SpaceTime.prototype[k] = methods[k];\n    });\n  };\n\n  var compareFns = addMethods$1;\n\n  const addMethods = SpaceTime => {\n    const methods = {\n      i18n: function (data) {\n        //change the day names\n        if (isObject(data.days)) {\n          set$4(data.days);\n        }\n        //change the month names\n        if (isObject(data.months)) {\n          set$5(data.months);\n        }\n\n        //change the display style of the month / day names\n        if (isBoolean(data.useTitleCase)) {\n          set$3(data.useTitleCase);\n        }\n\n        //change am and pm strings\n        if (isObject(data.ampm)) {\n          set(data.ampm);\n        }\n\n        //change distance strings\n        if(isObject(data.distance)){\n          set$1(data.distance);\n        }\n\n        //change units strings\n        if(isObject(data.units)){\n          set$2(data.units);\n        }\n\n        return this\n      }\n    };\n\n    //hook them into proto\n    Object.keys(methods).forEach(k => {\n      SpaceTime.prototype[k] = methods[k];\n    });\n  };\n\n  var i18nFns = addMethods;\n\n  let timezones = zones;\n  // fake timezone-support, for fakers (es5 class)\n  const SpaceTime = function (input, tz, options = {}) {\n    // the holy moment\n    this.epoch = null;\n    // the shift for the given timezone\n    this.tz = findTz(tz, timezones);\n    // whether to output warnings to console\n    this.silent = typeof options.silent !== 'undefined' ? options.silent : true;\n    // favour british interpretation of 02/02/2018, etc\n    this.british = options.dmy || options.british;\n\n    // does the week start on sunday, or monday:\n    this._weekStart = 1; // default to monday\n    if (options.weekStart !== undefined) {\n      this._weekStart = options.weekStart;\n    }\n    // the reference today date object, (for testing)\n    this._today = {};\n    if (options.today !== undefined) {\n      this._today = options.today;\n    }\n    // dunno if this is a good idea, or not\n    // Object.defineProperty(this, 'parsers', {\n    //   enumerable: false,\n    //   writable: true,\n    //   value: parsers\n    // })\n    // add getter/setters\n    Object.defineProperty(this, 'd', {\n      // return a js date object\n      get: function () {\n        let offset = quickOffset$1(this);\n        // every computer is somewhere- get this computer's built-in offset\n        let bias = new Date(this.epoch).getTimezoneOffset() || 0;\n        // movement\n        let shift = bias + offset * 60; //in minutes\n        shift = shift * 60 * 1000; //in ms\n        // remove this computer's offset\n        let epoch = this.epoch + shift;\n        let d = new Date(epoch);\n        return d\n      }\n    });\n    // add this data on the object, to allow adding new timezones\n    Object.defineProperty(this, 'timezones', {\n      get: () => timezones,\n      set: (obj) => {\n        timezones = obj;\n        return obj\n      }\n    });\n    // parse the various formats\n    let tmp = handleInput(this, input);\n    this.epoch = tmp.epoch;\n    if (tmp.tz) {\n      this.tz = tmp.tz;\n    }\n  };\n\n  // (add instance methods to prototype)\n  Object.keys(methods$5).forEach((k) => {\n    SpaceTime.prototype[k] = methods$5[k];\n  });\n\n  // \u00af\\_(\u30c4)_/\u00af\n  SpaceTime.prototype.clone = function () {\n    return new SpaceTime(this.epoch, this.tz, {\n      silent: this.silent,\n      weekStart: this._weekStart,\n      today: this._today,\n      parsers: this.parsers\n    })\n  };\n\n  /**\n   * @deprecated use toNativeDate()\n   * @returns native date object at the same epoch\n   */\n  SpaceTime.prototype.toLocalDate = function () {\n    return this.toNativeDate()\n  };\n\n  /**\n   * @returns native date object at the same epoch\n   */\n  SpaceTime.prototype.toNativeDate = function () {\n    return new Date(this.epoch)\n  };\n\n  // append more methods\n  queryFns(SpaceTime);\n  addFns(SpaceTime);\n  sameFns(SpaceTime);\n  compareFns(SpaceTime);\n  i18nFns(SpaceTime);\n\n  var Spacetime = SpaceTime;\n\n  // const timezones = require('../data');\n\n  const whereIts = (a, b) => {\n    let start = new Spacetime(null);\n    let end = new Spacetime(null);\n    start = start.time(a);\n    //if b is undefined, use as 'within one hour'\n    if (b) {\n      end = end.time(b);\n    } else {\n      end = start.add(59, 'minutes');\n    }\n\n    let startHour = start.hour();\n    let endHour = end.hour();\n    let tzs = Object.keys(start.timezones).filter((tz) => {\n      if (tz.indexOf('/') === -1) {\n        return false\n      }\n      let m = new Spacetime(null, tz);\n      let hour = m.hour();\n      //do 'calendar-compare' not real-time-compare\n      if (hour >= startHour && hour <= endHour) {\n        //test minutes too, if applicable\n        if (hour === startHour && m.minute() < start.minute()) {\n          return false\n        }\n        if (hour === endHour && m.minute() > end.minute()) {\n          return false\n        }\n        return true\n      }\n      return false\n    });\n    return tzs\n  };\n  var whereIts$1 = whereIts;\n\n  var version = '7.6.0';\n\n  const main = (input, tz, options) => new Spacetime(input, tz, options);\n\n  // set all properties of a given 'today' object\n  const setToday = function (s) {\n    let today = s._today || {};\n    Object.keys(today).forEach((k) => {\n      s = s[k](today[k]);\n    });\n    return s\n  };\n\n  //some helper functions on the main method\n  main.now = (tz, options) => {\n    let s = new Spacetime(new Date().getTime(), tz, options);\n    s = setToday(s);\n    return s\n  };\n  main.today = (tz, options) => {\n    let s = new Spacetime(new Date().getTime(), tz, options);\n    s = setToday(s);\n    return s.startOf('day')\n  };\n  main.tomorrow = (tz, options) => {\n    let s = new Spacetime(new Date().getTime(), tz, options);\n    s = setToday(s);\n    return s.add(1, 'day').startOf('day')\n  };\n  main.yesterday = (tz, options) => {\n    let s = new Spacetime(new Date().getTime(), tz, options);\n    s = setToday(s);\n    return s.subtract(1, 'day').startOf('day')\n  };\n  main.extend = function (obj = {}) {\n    Object.keys(obj).forEach((k) => {\n      Spacetime.prototype[k] = obj[k];\n    });\n    return this\n  };\n  main.timezones = function () {\n    let s = new Spacetime();\n    return s.timezones\n  };\n  main.max = function (tz, options) {\n    let s = new Spacetime(null, tz, options);\n    s.epoch = 8640000000000000;\n    return s\n  };\n  main.min = function (tz, options) {\n    let s = new Spacetime(null, tz, options);\n    s.epoch = -8640000000000000;\n    return s\n  };\n\n  //find tz by time\n  main.whereIts = whereIts$1;\n  main.version = version;\n\n  //aliases:\n  main.plugin = main.extend;\n\n  return main;\n\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","spacetime","isLeapYear","year","isDate","d","Object","prototype","toString","call","isNaN","valueOf","isObject","input","zeroPad","str","len","length","Array","join","pad","ordinal","i","j","k","toCardinal","String","replace","parseInt","normalize$2","toLowerCase","trim","getEpoch","tmp","getTime","epoch","beADate","s","clone","set","formatTimezone","offset","delimiter","sign","absOffset","Math","abs","hours","minutes","buildMapping","obj","sep","shortMonths","longMonths","getDiff","a","b","isBefore","later","earlier","diff","years","months","days","seconds","keys","forEach","unit","isSame","max","add","u","set$2","i18n","units$2","second","minute","hour","day","month","pluralize","value","slice","toUtc","dstChange","rest","split","Date","UTC","MSEC_IN_HOUR","inSummerTime$1","start","end","summerOffset","winterOffset","inSummerTime","getUTCFullYear","startUtc","endUtc","data","prefixes","all","Number","hem","dst","names","before","num","utc","name","safeIntl","Intl","DateTimeFormat","format","resolvedOptions","timezone","timeZone","isOffset","isNumber","utcOffset","gmtOffset","toIana","parseOffset$3","parseOffset$2","tz","m","match","local","guessTz","fallbackTZ","cities","reduce","h","city","findTz","zones","lookupTz","hasOwnProperty","console","warn","error","test","id","Error","defaults$1","getFullYear","date","getNow","now","_today","dates","today","tonight","tomorrow","startOf","yesterday","subtract","christmas","new years","o","millisecond","week","walk","n","fn","previous","current","startUnit","original","halfStep","units$4","valid","walkTo","getMonth","milliseconds","walkTo$1","wants","old","undefined","silent","monthLength","monthLengths","parseOffset$1","parseOffset","parseFloat","timezones","parseMs","substring","parseTime$1","parseTime","arr","sec","ms","ampm","months$1","validate$1","parseYear","parseMonth","parsers","concat","ymd","reg","parse","mdy","british","time","dmy","misc","quarter","season","getDate","parseArray","parseObject","parseNumber","fns","parseArray$1","order","parseObject$1","assign","parseNumber$1","minimumEpoch","defaults","handleInput","parseInput","res","isValid","givenTz","shortDays","longDays","aliases$1","mo","tu","we","th","fr","sa","su","tues","weds","wedn","thur","thurs","titleCaseEnabled","isoOffset$1","isoOffset","applyCaseFormat","toUpperCase","substr","dayName","day-short","day-number","day-ordinal","day-pad","date-ordinal","date-pad","monthName","month-short","month-number","month-ordinal","month-pad","iso-month","year-short","iso-year","isNegative","time-24","hour24","hour12","hour-pad","hour-24","hour-24-pad","minute-pad","second-pad","millisecond-pad","AMPM","era","json","numeric","numeric-us","numeric-uk","mm/dd","iso","h24","iso-short","iso-utc","toISOString","nice","nice-24","nice-year","nice-day","nice-full","nice-full-24","aliases","format$1","printFormat","out","indexOf","sections","_","fmt","mapping","G","GG","GGG","GGGG","y","yy","yyy","yyyy","yyyyy","Q","QQ","QQQ","QQQQ","M","MM","MMM","MMMM","w","ww","dd","D","dayOfYear","DD","DDD","E","EE","EEE","EEEE","EEEEE","e","ee","eee","eeee","eeeee","aa","aaa","aaaa","h12","hh","H","HH","mm","ss","SSS","A","z","zz","zzz","zzzz","Z","ZZ","ZZZ","ZZZZ","addAlias","char","to","toName","escapeChars","filter","ch","combineRepeated","c","map","unixFmt$1","unixFmt","txt","units$3","doUnit","duration","endOf","toFixed","progress$1","progress","climb","isAfter","diffOne$1","diffOne","reverseDiff","toISO$1","toISO","past","future","present","almost","over","pastDistance","futureDistance","qualifiers","soften","toSoft","rounded","qualified","abbreviated","englishValues","units","push","englishValue","nextUnit","nextValue","since$1","since","every","isNow","precise","direction","splice","seasons","north","south","quarters","units$1","quarterhour","_weekStart","q","hemisphere","decade","century","isDay","find","titleCase","timezone$1","epochShift","found","result","hasDst","default_offset","change","back","winter","summer","isDST","methods$4","hasDST","leapYear","nearest","prog","reversed","msDiff","weeks","next","last","goto","first","isAwake","isAsleep","daysInMonth","log","logYear","debug","from","fromNow","weekStart","inDST","round","each","validate","order$1","confirm","want","fwdBkwd","goFwd","minus","shift","morning","evening","clearMinutes","methods","methods$3","getMilliseconds","getSeconds","getMinutes","getHours","hourFloat","which","dayTime","times","breakfast","noon","lunch","afternoon","dinner","night","midnight","methods$2","getDay","methods$1","sum","setDate","setFullYear","setHours","setMinutes","setMonth","toAdd","thisOne","skipWeeks","year$1","floor","millenium","getMonthLength","rollMonth","rollDaysUp","daysBack","rollDaysDown","keep","dstAwareUnits","keepDate","print","SpaceTime","options","defineProperty","get","jul","dec","inSummer","getTimezoneOffset","SpaceTime.prototype.clone","toLocalDate","SpaceTime.prototype.toLocalDate","toNativeDate","SpaceTime.prototype.toNativeDate","addMethods$4","Space","addMethods$3","SpaceTime.prototype.add","wantYear","haveYear","SpaceTime.prototype.subtract","plus","addMethods$2","SpaceTime.prototype.isSame","tzAware","addMethods$1","isEqual","isBetween","isInclusive","startEpoch","endEpoch","addMethods","short","long","useTitleCase","am","pm","distance","main","setToday","main.now","main.today","main.tomorrow","main.yesterday","extend","main.extend","main.timezones","main.max","min","main.min","whereIts","startHour","endHour","tzs","version","plugin"]
}
