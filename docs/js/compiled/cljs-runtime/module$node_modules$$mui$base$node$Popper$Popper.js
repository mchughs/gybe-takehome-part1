shadow$provide.module$node_modules$$mui$base$node$Popper$Popper = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  function flipPlacement(placement, direction) {
    if ("ltr" === direction) {
      return placement;
    }
    switch(placement) {
      case "bottom-end":
        return "bottom-start";
      case "bottom-start":
        return "bottom-end";
      case "top-end":
        return "top-start";
      case "top-start":
        return "top-end";
      default:
        return placement;
    }
  }
  function resolveAnchorEl(anchorEl) {
    return "function" === typeof anchorEl ? anchorEl() : anchorEl;
  }
  "use client";
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.Popper = void 0;
  var _extends2 = global(require("module$node_modules$$babel$runtime$helpers$extends")), _objectWithoutPropertiesLoose2 = global(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")), React = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index")), _utils = require("module$node_modules$$mui$utils$node$index"), _core = require("module$node_modules$$popperjs$core$dist$cjs$popper");
  global = global(require("module$node_modules$prop_types$index"));
  var _composeClasses = require("module$node_modules$$mui$base$node$composeClasses$index"), _Portal = require("module$node_modules$$mui$base$node$Portal$index"), _popperClasses = require("module$node_modules$$mui$base$node$Popper$popperClasses"), _utils2 = require("module$node_modules$$mui$base$node$utils$index"), _ClassNameConfigurator = require("module$node_modules$$mui$base$node$utils$ClassNameConfigurator"), _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  const _excluded = "anchorEl children direction disablePortal modifiers open placement popperOptions popperRef slotProps slots TransitionProps ownerState".split(" "), _excluded2 = "anchorEl children container direction disablePortal keepMounted modifiers open placement popperOptions popperRef style transition slotProps slots".split(" "), defaultPopperOptions = {}, PopperTooltip = React.forwardRef(function(props, forwardedRef) {
    var _slots$root;
    const {anchorEl, children, direction, disablePortal, modifiers, open, placement:initialPlacement, popperOptions, popperRef:popperRefProp, slotProps = {}, slots = {}, TransitionProps} = props, other = (0,_objectWithoutPropertiesLoose2.default)(props, _excluded), tooltipRef = React.useRef(null), ownRef = (0,_utils.unstable_useForkRef)(tooltipRef, forwardedRef), popperRef = React.useRef(null), handlePopperRef = (0,_utils.unstable_useForkRef)(popperRef, popperRefProp), handlePopperRefRef = React.useRef(handlePopperRef);
    (0,_utils.unstable_useEnhancedEffect)(() => {
      handlePopperRefRef.current = handlePopperRef;
    }, [handlePopperRef]);
    React.useImperativeHandle(popperRefProp, () => popperRef.current, []);
    const rtlPlacement = flipPlacement(initialPlacement, direction), [placement, setPlacement] = React.useState(rtlPlacement), [resolvedAnchorElement, setResolvedAnchorElement] = React.useState(resolveAnchorEl(anchorEl));
    React.useEffect(() => {
      popperRef.current && popperRef.current.forceUpdate();
    });
    React.useEffect(() => {
      anchorEl && setResolvedAnchorElement(resolveAnchorEl(anchorEl));
    }, [anchorEl]);
    (0,_utils.unstable_useEnhancedEffect)(() => {
      if (resolvedAnchorElement && open) {
        if (resolvedAnchorElement && void 0 !== resolvedAnchorElement.nodeType && 1 === resolvedAnchorElement.nodeType) {
          var box = resolvedAnchorElement.getBoundingClientRect();
          0 === box.top && 0 === box.left && 0 === box.right && 0 === box.bottom && console.warn("MUI: The `anchorEl` prop provided to the component is invalid.\nThe anchor element should be part of the document layout.\nMake sure the element is present in the document or that it's not display none.");
        }
        box = [{name:"preventOverflow", options:{altBoundary:disablePortal}}, {name:"flip", options:{altBoundary:disablePortal}}, {name:"onUpdate", enabled:!0, phase:"afterWrite", fn:({state}) => {
          setPlacement(state.placement);
        }}];
        null != modifiers && (box = box.concat(modifiers));
        popperOptions && null != popperOptions.modifiers && (box = box.concat(popperOptions.modifiers));
        var popper = (0,_core.createPopper)(resolvedAnchorElement, tooltipRef.current, (0,_extends2.default)({placement:rtlPlacement}, popperOptions, {modifiers:box}));
        handlePopperRefRef.current(popper);
        return () => {
          popper.destroy();
          handlePopperRefRef.current(null);
        };
      }
    }, [resolvedAnchorElement, disablePortal, modifiers, open, popperOptions, rtlPlacement]);
    forwardedRef = {placement};
    null !== TransitionProps && (forwardedRef.TransitionProps = TransitionProps);
    const classes = (0,_composeClasses.unstable_composeClasses)({root:["root"]}, (0,_ClassNameConfigurator.useClassNamesOverride)(_popperClasses.getPopperUtilityClass)), Root = null != (_slots$root = slots.root) ? _slots$root : "div";
    props = (0,_utils2.useSlotProps)({elementType:Root, externalSlotProps:slotProps.root, externalForwardedProps:other, additionalProps:{role:"tooltip", ref:ownRef}, ownerState:props, className:classes.root});
    return (0,_jsxRuntime.jsx)(Root, (0,_extends2.default)({}, props, {children:"function" === typeof children ? children(forwardedRef) : children}));
  });
  (exports.Popper = React.forwardRef(function(props, forwardedRef) {
    const {anchorEl, children, container:containerProp, direction = "ltr", disablePortal = !1, keepMounted = !1, modifiers, open, placement = "bottom", popperOptions = defaultPopperOptions, popperRef, style, transition = !1, slotProps = {}, slots = {}} = props;
    props = (0,_objectWithoutPropertiesLoose2.default)(props, _excluded2);
    const [exited, setExited] = React.useState(!0);
    var handleEnter = () => {
      setExited(!1);
    };
    const handleExited = () => {
      setExited(!0);
    };
    if (!(keepMounted || open || transition && !exited)) {
      return null;
    }
    if (containerProp) {
      var container = containerProp;
    } else {
      anchorEl && (container = (container = resolveAnchorEl(anchorEl)) && void 0 !== container.nodeType ? (0,_utils.unstable_ownerDocument)(container).body : (0,_utils.unstable_ownerDocument)(null).body);
    }
    handleEnter = transition ? {in:open, onEnter:handleEnter, onExited:handleExited} : void 0;
    return (0,_jsxRuntime.jsx)(_Portal.Portal, {disablePortal, container, children:(0,_jsxRuntime.jsx)(PopperTooltip, (0,_extends2.default)({anchorEl, direction, disablePortal, modifiers, ref:forwardedRef, open:transition ? !exited : open, placement, popperOptions, popperRef, slotProps, slots}, props, {style:(0,_extends2.default)({position:"fixed", top:0, left:0, display:open || !keepMounted || transition && !exited ? void 0 : "none"}, style), TransitionProps:handleEnter, children}))});
  })).propTypes = {anchorEl:(0,_utils.chainPropTypes)(global.default.oneOfType([_utils.HTMLElementType, global.default.object, global.default.func]), props => {
    if (props.open) {
      if ((props = resolveAnchorEl(props.anchorEl)) && void 0 !== props.nodeType && 1 === props.nodeType) {
        if (props = props.getBoundingClientRect(), 0 === props.top && 0 === props.left && 0 === props.right && 0 === props.bottom) {
          return Error("MUI: The `anchorEl` prop provided to the component is invalid.\nThe anchor element should be part of the document layout.\nMake sure the element is present in the document or that it's not display none.");
        }
      } else if (!props || "function" !== typeof props.getBoundingClientRect || void 0 === props.nodeType && null != props.contextElement && 1 !== props.contextElement.nodeType) {
        return Error("MUI: The `anchorEl` prop provided to the component is invalid.\nIt should be an HTML element instance or a virtualElement \n(https://popper.js.org/docs/v2/virtual-elements/).");
      }
    }
    return null;
  }), children:global.default.oneOfType([global.default.node, global.default.func]), container:global.default.oneOfType([_utils.HTMLElementType, global.default.func]), direction:global.default.oneOf(["ltr", "rtl"]), disablePortal:global.default.bool, keepMounted:global.default.bool, modifiers:global.default.arrayOf(global.default.shape({data:global.default.object, effect:global.default.func, enabled:global.default.bool, fn:global.default.func, name:global.default.any, options:global.default.object, 
  phase:global.default.oneOf("afterMain afterRead afterWrite beforeMain beforeRead beforeWrite main read write".split(" ")), requires:global.default.arrayOf(global.default.string), requiresIfExists:global.default.arrayOf(global.default.string)})), open:global.default.bool.isRequired, placement:global.default.oneOf("auto-end auto-start auto bottom-end bottom-start bottom left-end left-start left right-end right-start right top-end top-start top".split(" ")), popperOptions:global.default.shape({modifiers:global.default.array, 
  onFirstUpdate:global.default.func, placement:global.default.oneOf("auto-end auto-start auto bottom-end bottom-start bottom left-end left-start left right-end right-start right top-end top-start top".split(" ")), strategy:global.default.oneOf(["absolute", "fixed"])}), popperRef:_utils.refType, slotProps:global.default.shape({root:global.default.oneOfType([global.default.func, global.default.object])}), slots:global.default.shape({root:global.default.elementType}), transition:global.default.bool};
};

//# sourceMappingURL=module$node_modules$$mui$base$node$Popper$Popper.js.map
