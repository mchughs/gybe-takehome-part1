shadow$provide.module$node_modules$$mui$base$node$useMenuItem$useMenuItem = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  function idGenerator(existingKeys) {
    return `menu-item-${existingKeys.size}`;
  }
  "use client";
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.useMenuItem = function(params) {
    function getRootProps(externalProps = {}) {
      const externalEventHandlers = (0,_extractEventHandlers.extractEventHandlers)(externalProps), getCombinedRootProps = (0,_combineHooksSlotProps.combineHooksSlotProps)(getOwnHandlers, (0,_combineHooksSlotProps.combineHooksSlotProps)(getButtonProps, getListRootProps));
      return (0,_extends2.default)({}, externalProps, externalEventHandlers, getCombinedRootProps(externalEventHandlers), {id, ref:handleRef, role:"menuitem"});
    }
    var _React$useContext;
    const {disabled = !1, id:idParam, rootRef:externalRef, label, disableFocusOnHover = !1} = params, id = (0,_utils.unstable_useId)(idParam), itemRef = React.useRef(null);
    params = React.useMemo(() => ({disabled, id:null != id ? id : "", label, ref:itemRef}), [disabled, id, label]);
    const {dispatch} = null != (_React$useContext = React.useContext(_DropdownContext.DropdownContext)) ? _React$useContext : FALLBACK_MENU_CONTEXT, {getRootProps:getListRootProps, highlighted} = (0,_useList.useListItem)({item:id, handlePointerOverEvents:!disableFocusOnHover}), {index, totalItemCount} = (0,_useCompound.useCompoundItem)(null != id ? id : idGenerator, params), {getRootProps:getButtonProps, focusVisible, rootRef:buttonRefHandler} = (0,_useButton.useButton)({disabled, focusableWhenDisabled:!0}), 
    handleRef = (0,_utils.unstable_useForkRef)(buttonRefHandler, externalRef, itemRef);
    React.useDebugValue({id, highlighted, disabled, label});
    const createHandleClick = otherHandlers => event => {
      var _otherHandlers$onClic;
      null == (_otherHandlers$onClic = otherHandlers.onClick) || _otherHandlers$onClic.call(otherHandlers, event);
      event.defaultMuiPrevented || dispatch({type:_useDropdown.DropdownActionTypes.close, event});
    }, getOwnHandlers = (otherHandlers = {}) => (0,_extends2.default)({}, otherHandlers, {onClick:createHandleClick(otherHandlers)});
    return void 0 === id ? {getRootProps, disabled:!1, focusVisible, highlighted:!1, index:-1, totalItemCount:0, rootRef:handleRef} : {getRootProps, disabled, focusVisible, highlighted, index, totalItemCount, rootRef:handleRef};
  };
  var _extends2 = global(require("module$node_modules$$babel$runtime$helpers$extends")), React = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index")), _utils = require("module$node_modules$$mui$utils$node$index"), _useButton = require("module$node_modules$$mui$base$node$useButton$index"), _useList = require("module$node_modules$$mui$base$node$useList$index"), _useDropdown = require("module$node_modules$$mui$base$node$useDropdown$index"), _DropdownContext = require("module$node_modules$$mui$base$node$useDropdown$DropdownContext"), _combineHooksSlotProps = require("module$node_modules$$mui$base$node$utils$combineHooksSlotProps"), 
  _useCompound = require("module$node_modules$$mui$base$node$useCompound$index"), _extractEventHandlers = require("module$node_modules$$mui$base$node$utils$extractEventHandlers");
  const FALLBACK_MENU_CONTEXT = {dispatch:() => {
  }, popupId:"", registerPopup:() => {
  }, registerTrigger:() => {
  }, state:{open:!0, changeReason:null}, triggerElement:null};
};

//# sourceMappingURL=module$node_modules$$mui$base$node$useMenuItem$useMenuItem.js.map
