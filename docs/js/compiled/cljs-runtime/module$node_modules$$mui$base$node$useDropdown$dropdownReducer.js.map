{
"version":3,
"file":"module$node_modules$$mui$base$node$useDropdown$dropdownReducer.js",
"lineCount":21,
"mappings":"AAAAA,cAAA,CAAA,8DAAA,GAAmF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAG3HC,QAAOC,CAAAA,cAAP,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAH,SAAQI,CAAAA,eAAR,GAEAA,QAAwB,CAACC,KAAD,EAAQC,MAAR,CAAgB;AACtC,WAAQA,MAAOC,CAAAA,IAAf;AACE,WAAKC,YAAaC,CAAAA,mBAAoBC,CAAAA,IAAtC;AACE,eAAO,CACLC,KAAM,CAAA,CADD,EAELC,aAAcN,MAAOO,CAAAA,KAFhB,CAAP;AAIF,WAAKL,YAAaC,CAAAA,mBAAoBK,CAAAA,aAAtC;AACE,eAAO,CACLH,KAAM,CAAA,CADD,EAELC,aAAcN,MAAOO,CAAAA,KAFhB,CAAP;AAIF,WAAKL,YAAaC,CAAAA,mBAAoBM,CAAAA,MAAtC;AACE,eAAO,CACLJ,KAAM,CAACN,KAAMM,CAAAA,IADR,EAELC,aAAcN,MAAOO,CAAAA,KAFhB,CAAP;AAIF,WAAKL,YAAaC,CAAAA,mBAAoBE,CAAAA,IAAtC;AACE,eAAO,CACLA,KAAM,CAAA,CADD,EAELC,aAAcN,MAAOO,CAAAA,KAFhB,CAAP;AAIF,WAAKL,YAAaC,CAAAA,mBAAoBO,CAAAA,KAAtC;AACE,eAAO,CACLL,KAAM,CAAA,CADD,EAELC,aAAcN,MAAOO,CAAAA,KAFhB,CAAP;AAIF;AACE,cAAUI,KAAJ,CAAW,kBAAX,CAAN;AA3BJ;AADsC,GAFxC;AACA,MAAIT,eAAeV,OAAA,CAAQ,kEAAR,CAAnB;AAP2H,CAA3H;;",
"sources":["node_modules/@mui/base/node/useDropdown/dropdownReducer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$base$node$useDropdown$dropdownReducer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dropdownReducer = dropdownReducer;\nvar _useDropdown = require(\"./useDropdown.types\");\nfunction dropdownReducer(state, action) {\n  switch (action.type) {\n    case _useDropdown.DropdownActionTypes.blur:\n      return {\n        open: false,\n        changeReason: action.event\n      };\n    case _useDropdown.DropdownActionTypes.escapeKeyDown:\n      return {\n        open: false,\n        changeReason: action.event\n      };\n    case _useDropdown.DropdownActionTypes.toggle:\n      return {\n        open: !state.open,\n        changeReason: action.event\n      };\n    case _useDropdown.DropdownActionTypes.open:\n      return {\n        open: true,\n        changeReason: action.event\n      };\n    case _useDropdown.DropdownActionTypes.close:\n      return {\n        open: false,\n        changeReason: action.event\n      };\n    default:\n      throw new Error(`Unhandled action`);\n  }\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","dropdownReducer","state","action","type","_useDropdown","DropdownActionTypes","blur","open","changeReason","event","escapeKeyDown","toggle","close","Error"]
}
