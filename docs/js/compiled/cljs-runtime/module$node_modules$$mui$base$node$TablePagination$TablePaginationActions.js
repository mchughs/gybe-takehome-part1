shadow$provide.module$node_modules$$mui$base$node$TablePagination$TablePaginationActions = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  function LastPageIconDefault() {
    return _span || (_span = (0,_jsxRuntime.jsx)("span", {children:"⇾|"}));
  }
  function FirstPageIconDefault() {
    return _span2 || (_span2 = (0,_jsxRuntime.jsx)("span", {children:"|⇽"}));
  }
  function NextPageIconDefault() {
    return _span3 || (_span3 = (0,_jsxRuntime.jsx)("span", {children:"⇾"}));
  }
  function BackPageIconDefault() {
    return _span4 || (_span4 = (0,_jsxRuntime.jsx)("span", {children:"⇽"}));
  }
  function defaultGetAriaLabel(type) {
    return `Go to ${type} page`;
  }
  "use client";
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.TablePaginationActions = void 0;
  var _extends2 = global(require("module$node_modules$$babel$runtime$helpers$extends")), _objectWithoutPropertiesLoose2 = global(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose"));
  global = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index"));
  var _utils = require("module$node_modules$$mui$base$node$utils$index"), _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  const _excluded = "count getItemAriaLabel onPageChange page rowsPerPage showFirstButton showLastButton direction ownerState slotProps slots".split(" ");
  var _span, _span2, _span3, _span4;
  exports.TablePaginationActions = global.forwardRef(function(props, forwardedRef) {
    var _slots$root, _slots$firstButton, _slots$lastButton, _slots$nextButton, _slots$backButton, _slots$lastPageIcon, _slots$firstPageIcon, _slots$nextPageIcon, _slots$backPageIcon;
    const {count, getItemAriaLabel = defaultGetAriaLabel, onPageChange, page, rowsPerPage, showFirstButton = !1, showLastButton = !1, direction, slotProps = {}, slots = {}} = props;
    var other = (0,_objectWithoutPropertiesLoose2.default)(props, _excluded);
    const Root = null != (_slots$root = slots.root) ? _slots$root : "div";
    forwardedRef = (0,_utils.useSlotProps)({elementType:Root, externalSlotProps:slotProps.root, externalForwardedProps:other, additionalProps:{ref:forwardedRef}, ownerState:props});
    _slots$root = null != (_slots$firstButton = slots.firstButton) ? _slots$firstButton : "button";
    _slots$firstButton = (0,_utils.useSlotProps)({elementType:_slots$root, externalSlotProps:slotProps.firstButton, additionalProps:{onClick:event => {
      onPageChange(event, 0);
    }, disabled:0 === page, "aria-label":getItemAriaLabel("first", page), title:getItemAriaLabel("first", page)}, ownerState:props});
    other = null != (_slots$lastButton = slots.lastButton) ? _slots$lastButton : "button";
    _slots$lastButton = (0,_utils.useSlotProps)({elementType:other, externalSlotProps:slotProps.lastButton, additionalProps:{onClick:event => {
      onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));
    }, disabled:page >= Math.ceil(count / rowsPerPage) - 1, "aria-label":getItemAriaLabel("last", page), title:getItemAriaLabel("last", page)}, ownerState:props});
    const NextButton = null != (_slots$nextButton = slots.nextButton) ? _slots$nextButton : "button";
    _slots$nextButton = (0,_utils.useSlotProps)({elementType:NextButton, externalSlotProps:slotProps.nextButton, additionalProps:{onClick:event => {
      onPageChange(event, page + 1);
    }, disabled:-1 !== count ? page >= Math.ceil(count / rowsPerPage) - 1 : !1, "aria-label":getItemAriaLabel("next", page), title:getItemAriaLabel("next", page)}, ownerState:props});
    const BackButton = null != (_slots$backButton = slots.backButton) ? _slots$backButton : "button";
    props = (0,_utils.useSlotProps)({elementType:BackButton, externalSlotProps:slotProps.backButton, additionalProps:{onClick:event => {
      onPageChange(event, page - 1);
    }, disabled:0 === page, "aria-label":getItemAriaLabel("previous", page), title:getItemAriaLabel("previous", page)}, ownerState:props});
    _slots$backButton = null != (_slots$lastPageIcon = slots.lastPageIcon) ? _slots$lastPageIcon : LastPageIconDefault;
    _slots$lastPageIcon = null != (_slots$firstPageIcon = slots.firstPageIcon) ? _slots$firstPageIcon : FirstPageIconDefault;
    _slots$firstPageIcon = null != (_slots$nextPageIcon = slots.nextPageIcon) ? _slots$nextPageIcon : NextPageIconDefault;
    _slots$nextPageIcon = null != (_slots$backPageIcon = slots.backPageIcon) ? _slots$backPageIcon : BackPageIconDefault;
    return (0,_jsxRuntime.jsxs)(Root, (0,_extends2.default)({}, forwardedRef, {children:[showFirstButton && (0,_jsxRuntime.jsx)(_slots$root, (0,_extends2.default)({}, _slots$firstButton, {children:"rtl" === direction ? (0,_jsxRuntime.jsx)(_slots$backButton, {}) : (0,_jsxRuntime.jsx)(_slots$lastPageIcon, {})})), (0,_jsxRuntime.jsx)(BackButton, (0,_extends2.default)({}, props, {children:"rtl" === direction ? (0,_jsxRuntime.jsx)(_slots$firstPageIcon, {}) : (0,_jsxRuntime.jsx)(_slots$nextPageIcon, {})})), 
    (0,_jsxRuntime.jsx)(NextButton, (0,_extends2.default)({}, _slots$nextButton, {children:"rtl" === direction ? (0,_jsxRuntime.jsx)(_slots$nextPageIcon, {}) : (0,_jsxRuntime.jsx)(_slots$firstPageIcon, {})})), showLastButton && (0,_jsxRuntime.jsx)(other, (0,_extends2.default)({}, _slots$lastButton, {children:"rtl" === direction ? (0,_jsxRuntime.jsx)(_slots$lastPageIcon, {}) : (0,_jsxRuntime.jsx)(_slots$backButton, {})}))]}));
  });
};

//# sourceMappingURL=module$node_modules$$mui$base$node$TablePagination$TablePaginationActions.js.map
