{
"version":3,
"file":"module$node_modules$$mui$utils$node$setRef$setRef.js",
"lineCount":7,
"mappings":"AAAAA,cAAA,CAAA,iDAAA,GAAsE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAG9GC,QAAOC,CAAAA,cAAP,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAH,SAAQI,CAAAA,OAAR,GAcAC,QAAe,CAACC,GAAD,EAAMH,KAAN,CAAa;AACP,cAAnB,KAAI,MAAOG,IAAX,GACEA,GAAA,CAAIH,KAAJ,CADF,GAEWG,GAFX,KAGEA,GAAIC,CAAAA,OAHN,GAGgBJ,KAHhB,CAAA;AAD0B,GAd5B;AAN8G,CAA9G;;",
"sources":["node_modules/@mui/utils/node/setRef/setRef.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$utils$node$setRef$setRef\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = setRef;\n/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nfunction setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","setRef","ref","current"]
}
