shadow$provide.module$node_modules$$mui$base$node$useSelect$selectReducer = function(global, require, module, exports) {
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.selectReducer = function(state, action) {
    var {open} = state, {context:{selectionMode}} = action;
    if (action.type === _useSelect.SelectActionTypes.buttonClick) {
      var _state$selectedValues;
      selectionMode = null != (_state$selectedValues = state.selectedValues[0]) ? _state$selectedValues : (0,_useList.moveHighlight)(null, "start", action.context);
      return (0,_extends2.default)({}, state, {open:!open, highlightedValue:open ? null : selectionMode});
    }
    if (action.type === _useSelect.SelectActionTypes.browserAutoFill) {
      return (0,_useList.handleItemSelection)(action.item, state, action.context);
    }
    open = (0,_useList.listReducer)(state, action);
    switch(action.type) {
      case _useList.ListActionTypes.keyDown:
        if (state.open) {
          if ("Escape" === action.event.key) {
            return (0,_extends2.default)({}, open, {open:!1});
          }
        } else {
          if ("ArrowDown" === action.event.key) {
            var _state$selectedValues2;
            return (0,_extends2.default)({}, state, {open:!0, highlightedValue:null != (_state$selectedValues2 = state.selectedValues[0]) ? _state$selectedValues2 : (0,_useList.moveHighlight)(null, "start", action.context)});
          }
          if ("ArrowUp" === action.event.key) {
            var _state$selectedValues3;
            return (0,_extends2.default)({}, state, {open:!0, highlightedValue:null != (_state$selectedValues3 = state.selectedValues[0]) ? _state$selectedValues3 : (0,_useList.moveHighlight)(null, "end", action.context)});
          }
        }
        break;
      case _useList.ListActionTypes.itemClick:
        if ("single" === selectionMode) {
          return (0,_extends2.default)({}, open, {open:!1});
        }
        break;
      case _useList.ListActionTypes.blur:
        return (0,_extends2.default)({}, open, {open:!1});
    }
    return open;
  };
  var _extends2 = global(require("module$node_modules$$babel$runtime$helpers$extends")), _useList = require("module$node_modules$$mui$base$node$useList$index"), _useSelect = require("module$node_modules$$mui$base$node$useSelect$useSelect_types");
};

//# sourceMappingURL=module$node_modules$$mui$base$node$useSelect$selectReducer.js.map
