shadow$provide.module$node_modules$$mui$base$node$Switch$Switch = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  "use client";
  module = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.Switch = void 0;
  var _extends2 = module(require("module$node_modules$$babel$runtime$helpers$extends")), _objectWithoutPropertiesLoose2 = module(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose"));
  global = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index"));
  module = module(require("module$node_modules$prop_types$index"));
  var _composeClasses = require("module$node_modules$$mui$base$node$composeClasses$index"), _useSwitch = require("module$node_modules$$mui$base$node$useSwitch$index"), _utils = require("module$node_modules$$mui$base$node$utils$index"), _ClassNameConfigurator = require("module$node_modules$$mui$base$node$utils$ClassNameConfigurator"), _switchClasses = require("module$node_modules$$mui$base$node$Switch$switchClasses"), _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  const _excluded = "checked defaultChecked disabled onBlur onChange onFocus onFocusVisible readOnly required slotProps slots".split(" "), useUtilityClasses = ownerState => {
    const {checked, disabled, focusVisible, readOnly} = ownerState;
    return (0,_composeClasses.unstable_composeClasses)({root:["root", checked && "checked", disabled && "disabled", focusVisible && "focusVisible", readOnly && "readOnly"], thumb:["thumb"], input:["input"], track:["track"]}, (0,_ClassNameConfigurator.useClassNamesOverride)(_switchClasses.getSwitchUtilityClass));
  };
  (exports.Switch = global.forwardRef(function(props, forwardedRef) {
    var _slots$root, _slots$thumb, _slots$input, _slots$track;
    const {slotProps = {}, slots = {}} = props;
    var other = (0,_objectWithoutPropertiesLoose2.default)(props, _excluded);
    const {getInputProps, checked, disabled, focusVisible, readOnly} = (0,_useSwitch.useSwitch)(props), ownerState = (0,_extends2.default)({}, props, {checked, disabled, focusVisible, readOnly}), classes = useUtilityClasses(ownerState);
    props = null != (_slots$root = slots.root) ? _slots$root : "span";
    forwardedRef = (0,_utils.useSlotProps)({elementType:props, externalSlotProps:slotProps.root, externalForwardedProps:other, additionalProps:{ref:forwardedRef}, ownerState, className:classes.root});
    _slots$root = null != (_slots$thumb = slots.thumb) ? _slots$thumb : "span";
    _slots$thumb = (0,_utils.useSlotProps)({elementType:_slots$root, externalSlotProps:slotProps.thumb, ownerState, className:classes.thumb});
    other = null != (_slots$input = slots.input) ? _slots$input : "input";
    _slots$input = (0,_utils.useSlotProps)({elementType:other, getSlotProps:getInputProps, externalSlotProps:slotProps.input, ownerState, className:classes.input});
    const Track = null === slots.track ? () => null : null != (_slots$track = slots.track) ? _slots$track : "span";
    _slots$track = (0,_utils.useSlotProps)({elementType:Track, externalSlotProps:slotProps.track, ownerState, className:classes.track});
    return (0,_jsxRuntime.jsxs)(props, (0,_extends2.default)({}, forwardedRef, {children:[(0,_jsxRuntime.jsx)(Track, (0,_extends2.default)({}, _slots$track)), (0,_jsxRuntime.jsx)(_slots$root, (0,_extends2.default)({}, _slots$thumb)), (0,_jsxRuntime.jsx)(other, (0,_extends2.default)({}, _slots$input))]}));
  })).propTypes = {checked:module.default.bool, className:module.default.string, defaultChecked:module.default.bool, disabled:module.default.bool, onBlur:module.default.func, onChange:module.default.func, onFocus:module.default.func, onFocusVisible:module.default.func, readOnly:module.default.bool, required:module.default.bool, slotProps:module.default.shape({input:module.default.oneOfType([module.default.func, module.default.object]), root:module.default.oneOfType([module.default.func, module.default.object]), 
  thumb:module.default.oneOfType([module.default.func, module.default.object]), track:module.default.oneOfType([module.default.func, module.default.object])}), slots:module.default.shape({input:module.default.elementType, root:module.default.elementType, thumb:module.default.elementType, track:module.default.oneOfType([module.default.elementType, module.default.oneOf([null])])})};
};

//# sourceMappingURL=module$node_modules$$mui$base$node$Switch$Switch.js.map
