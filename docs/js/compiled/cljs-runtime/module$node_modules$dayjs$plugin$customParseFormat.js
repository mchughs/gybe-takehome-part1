shadow$provide.module$node_modules$dayjs$plugin$customParseFormat = function(global, require, module, exports) {
  !function(e, t) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).dayjs_plugin_customParseFormat = t();
  }(this, function() {
    function c(n) {
      var i = o$jscomp$0 && o$jscomp$0.formats;
      var s = (n = n.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g, function(t, n, r) {
        t = r && r.toUpperCase();
        return n || i[r] || e[r] || i[t].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g, function(e, t, n) {
          return t || n.slice(1);
        });
      })).match(t), a = s.length;
      for (n = 0; n < a; n += 1) {
        var h = s[n], u = d[h], c = u && u[0];
        u = u && u[1];
        s[n] = u ? {regex:c, parser:u} : h.replace(/^\[|\]$/g, "");
      }
      return function(e) {
        for (var t = {}, n = 0, r = 0; n < a; n += 1) {
          var i = s[n];
          if ("string" == typeof i) {
            r += i.length;
          } else {
            var o = i.regex;
            i = i.parser;
            var h = e.slice(r);
            o = o.exec(h)[0];
            i.call(t, o);
            e = e.replace(o, "");
          }
        }
        e = t.afternoon;
        void 0 !== e && (n = t.hours, e ? 12 > n && (t.hours += 12) : 12 === n && (t.hours = 0), delete t.afternoon);
        return t;
      };
    }
    var e = {LTS:"h:mm:ss A", LT:"h:mm A", L:"MM/DD/YYYY", LL:"MMMM D, YYYY", LLL:"MMMM D, YYYY h:mm A", LLLL:"dddd, MMMM D, YYYY h:mm A"}, t = /(\[[^[]*\])|([-_:/.,()\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g, n = /\d\d/, r = /\d\d?/, i = /\d*[^-_:/,()\s\d]+/, o$jscomp$0 = {}, s = function(e) {
      return (e = +e) + (68 < e ? 1900 : 2e3);
    }, a = function(e) {
      return function(t) {
        this[e] = +t;
      };
    }, f = [/[+-]\d\d:?(\d\d)?|Z/, function(e) {
      var JSCompiler_temp_const = this.zone || (this.zone = {});
      if (e) {
        if ("Z" === e) {
          e = 0;
        } else {
          e = e.match(/([+-]|\d\d)/g);
          var n = 60 * e[1] + (+e[2] || 0);
          e = 0 === n ? 0 : "+" === e[0] ? -n : n;
        }
      } else {
        e = 0;
      }
      JSCompiler_temp_const.offset = e;
    }], h = function(e) {
      return (e = o$jscomp$0[e]) && (e.indexOf ? e : e.s.concat(e.f));
    }, u = function(e, t) {
      var r = o$jscomp$0.meridiem;
      if (r) {
        for (var i = 1; 24 >= i; i += 1) {
          if (-1 < e.indexOf(r(i, 0, t))) {
            var n = 12 < i;
            break;
          }
        }
      } else {
        n = e === (t ? "pm" : "PM");
      }
      return n;
    }, d = {A:[i, function(e) {
      this.afternoon = u(e, !1);
    }], a:[i, function(e) {
      this.afternoon = u(e, !0);
    }], S:[/\d/, function(e) {
      this.milliseconds = 100 * +e;
    }], SS:[n, function(e) {
      this.milliseconds = 10 * +e;
    }], SSS:[/\d{3}/, function(e) {
      this.milliseconds = +e;
    }], s:[r, a("seconds")], ss:[r, a("seconds")], m:[r, a("minutes")], mm:[r, a("minutes")], H:[r, a("hours")], h:[r, a("hours")], HH:[r, a("hours")], hh:[r, a("hours")], D:[r, a("day")], DD:[n, a("day")], Do:[i, function(e) {
      var t = o$jscomp$0.ordinal;
      if (this.day = e.match(/\d+/)[0], t) {
        for (var r = 1; 31 >= r; r += 1) {
          t(r).replace(/\[|\]/g, "") === e && (this.day = r);
        }
      }
    }], M:[r, a("month")], MM:[n, a("month")], MMM:[i, function(e) {
      var t = h("months");
      e = (h("monthsShort") || t.map(function(e) {
        return e.slice(0, 3);
      })).indexOf(e) + 1;
      if (1 > e) {
        throw Error();
      }
      this.month = e % 12 || e;
    }], MMMM:[i, function(e) {
      e = h("months").indexOf(e) + 1;
      if (1 > e) {
        throw Error();
      }
      this.month = e % 12 || e;
    }], Y:[/[+-]?\d+/, a("year")], YY:[n, function(e) {
      this.year = s(e);
    }], YYYY:[/\d{4}/, a("year")], Z:f, ZZ:f};
    return function(e, t, n) {
      n.p.customParseFormat = !0;
      e && e.parseTwoDigitYear && (s = e.parseTwoDigitYear);
      e = t.prototype;
      var i$jscomp$0 = e.parse;
      e.parse = function(e) {
        var t = e.date, r = e.utc, s = e.args;
        this.$u = r;
        var a = s[1];
        if ("string" == typeof a) {
          var f = !0 === s[2], h = !0 === s[3];
          e = f || h;
          var d = s[2];
          h && (d = s[2]);
          o$jscomp$0 = this.$locale();
          !f && d && (o$jscomp$0 = n.Ls[d]);
          try {
            if (-1 < ["x", "X"].indexOf(a)) {
              var JSCompiler_inline_result = new Date(("X" === a ? 1e3 : 1) * t);
            } else {
              var r$jscomp$0 = c(a)(t), i = r$jscomp$0.year, o = r$jscomp$0.month, a$jscomp$0 = r$jscomp$0.hours, f$jscomp$0 = r$jscomp$0.minutes, h$jscomp$0 = r$jscomp$0.seconds, u = r$jscomp$0.milliseconds, d$jscomp$0 = r$jscomp$0.zone, l = new Date(), m = r$jscomp$0.day || (i || o ? 1 : l.getDate()), M = i || l.getFullYear();
              s = 0;
              i && !o || (s = 0 < o ? o - 1 : l.getMonth());
              i = a$jscomp$0 || 0;
              f$jscomp$0 = f$jscomp$0 || 0;
              h$jscomp$0 = h$jscomp$0 || 0;
              u = u || 0;
              JSCompiler_inline_result = d$jscomp$0 ? new Date(Date.UTC(M, s, m, i, f$jscomp$0, h$jscomp$0, u + 6E4 * d$jscomp$0.offset)) : r ? new Date(Date.UTC(M, s, m, i, f$jscomp$0, h$jscomp$0, u)) : new Date(M, s, m, i, f$jscomp$0, h$jscomp$0, u);
            }
          } catch (e) {
            JSCompiler_inline_result = new Date("");
          }
          this.$d = JSCompiler_inline_result;
          this.init();
          d && !0 !== d && (this.$L = this.locale(d).$L);
          e && t != this.format(a) && (this.$d = new Date(""));
          o$jscomp$0 = {};
        } else if (a instanceof Array) {
          for (t = a.length, r = 1; r <= t; r += 1) {
            s[1] = a[r - 1];
            JSCompiler_inline_result = n.apply(this, s);
            if (JSCompiler_inline_result.isValid()) {
              this.$d = JSCompiler_inline_result.$d;
              this.$L = JSCompiler_inline_result.$L;
              this.init();
              break;
            }
            r === t && (this.$d = new Date(""));
          }
        } else {
          i$jscomp$0.call(this, e);
        }
      };
    };
  });
};

//# sourceMappingURL=module$node_modules$dayjs$plugin$customParseFormat.js.map
