shadow$provide.module$node_modules$$mui$x_date_pickers$node$PickersLayout$PickersLayout = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.PickersLayoutRoot = exports.PickersLayoutContentWrapper = exports.PickersLayout = void 0;
  var React = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index"));
  module = global(require("module$node_modules$prop_types$index"));
  var _clsx = global(require("module$node_modules$clsx$dist$clsx")), _styles = require("module$node_modules$$mui$material$node$styles$index"), _utils = require("module$node_modules$$mui$utils$node$index"), _pickersLayoutClasses = require("module$node_modules$$mui$x_date_pickers$node$PickersLayout$pickersLayoutClasses"), _usePickerLayout = global(require("module$node_modules$$mui$x_date_pickers$node$PickersLayout$usePickerLayout")), _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  const PickersLayoutRoot = exports.PickersLayoutRoot = (0,_styles.styled)("div", {name:"MuiPickersLayout", slot:"Root", overridesResolver:(props, styles) => styles.root})(({theme, ownerState}) => ({display:"grid", gridAutoColumns:"max-content auto max-content", gridAutoRows:"max-content auto max-content", [`& .${_pickersLayoutClasses.pickersLayoutClasses.toolbar}`]:ownerState.isLandscape ? {gridColumn:"rtl" === theme.direction ? 3 : 1, gridRow:"2 / 3"} : {gridColumn:"2 / 4", gridRow:1}, [`.${_pickersLayoutClasses.pickersLayoutClasses.shortcuts}`]:ownerState.isLandscape ? 
  {gridColumn:"2 / 4", gridRow:1} : {gridColumn:"rtl" === theme.direction ? 3 : 1, gridRow:"2 / 3"}, [`& .${_pickersLayoutClasses.pickersLayoutClasses.actionBar}`]:{gridColumn:"1 / 4", gridRow:3}}));
  PickersLayoutRoot.propTypes = {as:module.default.elementType, ownerState:module.default.shape({isLandscape:module.default.bool.isRequired}).isRequired, sx:module.default.oneOfType([module.default.arrayOf(module.default.oneOfType([module.default.func, module.default.object, module.default.bool])), module.default.func, module.default.object])};
  const PickersLayoutContentWrapper = exports.PickersLayoutContentWrapper = (0,_styles.styled)("div", {name:"MuiPickersLayout", slot:"ContentWrapper", overridesResolver:(props, styles) => styles.contentWrapper})({gridColumn:2, gridRow:2, display:"flex", flexDirection:"column"});
  (exports.PickersLayout = function(inProps) {
    inProps = (0,_styles.useThemeProps)({props:inProps, name:"MuiPickersLayout"});
    const {toolbar, content, tabs, actionBar, shortcuts} = (0,_usePickerLayout.default)(inProps), {sx, className, isLandscape, ref, wrapperVariant} = inProps;
    const {isLandscape:isLandscape$jscomp$0, classes} = inProps;
    var JSCompiler_inline_result = (0,_utils.unstable_composeClasses)({root:["root", isLandscape$jscomp$0 && "landscape"], contentWrapper:["contentWrapper"]}, _pickersLayoutClasses.getPickersLayoutUtilityClass, classes);
    return (0,_jsxRuntime.jsxs)(PickersLayoutRoot, {ref, sx, className:(0,_clsx.default)(className, JSCompiler_inline_result.root), ownerState:inProps, children:[isLandscape ? shortcuts : toolbar, isLandscape ? toolbar : shortcuts, (0,_jsxRuntime.jsx)(PickersLayoutContentWrapper, {className:JSCompiler_inline_result.contentWrapper, children:"desktop" === wrapperVariant ? (0,_jsxRuntime.jsxs)(React.Fragment, {children:[content, tabs]}) : (0,_jsxRuntime.jsxs)(React.Fragment, {children:[tabs, content]})}), 
    actionBar]});
  }).propTypes = {children:module.default.node, classes:module.default.object, className:module.default.string, disabled:module.default.bool, isLandscape:module.default.bool.isRequired, isValid:module.default.func.isRequired, onAccept:module.default.func.isRequired, onCancel:module.default.func.isRequired, onChange:module.default.func.isRequired, onClear:module.default.func.isRequired, onClose:module.default.func.isRequired, onDismiss:module.default.func.isRequired, onOpen:module.default.func.isRequired, 
  onSelectShortcut:module.default.func.isRequired, onSetToday:module.default.func.isRequired, onViewChange:module.default.func.isRequired, orientation:module.default.oneOf(["landscape", "portrait"]), readOnly:module.default.bool, slotProps:module.default.object, slots:module.default.object, sx:module.default.oneOfType([module.default.arrayOf(module.default.oneOfType([module.default.func, module.default.object, module.default.bool])), module.default.func, module.default.object]), value:module.default.any, 
  view:module.default.oneOf("day hours meridiem minutes month seconds year".split(" ")), views:module.default.arrayOf(module.default.oneOf("day hours meridiem minutes month seconds year".split(" ")).isRequired).isRequired, wrapperVariant:module.default.oneOf(["desktop", "mobile"])};
};

//# sourceMappingURL=module$node_modules$$mui$x_date_pickers$node$PickersLayout$PickersLayout.js.map
