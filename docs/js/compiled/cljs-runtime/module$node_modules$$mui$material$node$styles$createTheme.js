shadow$provide.module$node_modules$$mui$material$node$styles$createTheme = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  function createTheme(options = {}, ...args) {
    const {mixins:mixinsInput = {}, palette:paletteInput = {}, transitions:transitionsInput = {}, typography:typographyInput = {}} = options, other = (0,_objectWithoutPropertiesLoose2.default)(options, _excluded);
    if (options.vars) {
      throw Error("MUI: `vars` is a private field used for CSS variables support.\nPlease use another name.");
    }
    const palette = (0,_createPalette.default)(paletteInput);
    options = (0,_createTheme.default)(options);
    let muiTheme = (0,_deepmerge.default)(options, {mixins:(0,_createMixins.default)(options.breakpoints, mixinsInput), palette, shadows:_shadows.default.slice(), typography:(0,_createTypography.default)(palette, typographyInput), transitions:(0,_createTransitions.default)(transitionsInput), zIndex:(0,_extends2.default)({}, _zIndex.default)});
    muiTheme = (0,_deepmerge.default)(muiTheme, other);
    muiTheme = args.reduce((acc, argument) => (0,_deepmerge.default)(acc, argument), muiTheme);
    const stateClasses = "active checked completed disabled error expanded focused focusVisible required selected".split(" ");
    Object.keys(muiTheme.components).forEach(component => {
      const styleOverrides = muiTheme.components[component].styleOverrides;
      if (styleOverrides && 0 === component.indexOf("Mui")) {
        let key;
        for (key in styleOverrides) {
          const child = styleOverrides[key];
          if (-1 !== stateClasses.indexOf(key) && 0 < Object.keys(child).length) {
            const stateClass = (0,_generateUtilityClass.default)("", key);
            console.error([`MUI: The \`${component}\` component increases ` + `the CSS specificity of the \`${key}\` internal state.`, "You can not override it like this: ", JSON.stringify(styleOverrides, null, 2), "", `Instead, you need to use the '&.${stateClass}' syntax:`, JSON.stringify({root:{[`&.${stateClass}`]:child}}, null, 2), "\nhttps://mui.com/r/state-classes-guide"].join("\n"));
            styleOverrides[key] = {};
          }
        }
      }
    });
    muiTheme.unstable_sxConfig = (0,_extends2.default)({}, _styleFunctionSx.unstable_defaultSxConfig, null == other ? void 0 : other.unstable_sxConfig);
    muiTheme.unstable_sx = function(props) {
      return (0,_styleFunctionSx.default)({sx:props, theme:this});
    };
    return muiTheme;
  }
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.createMuiTheme = function(...args) {
    warnedOnce || (warnedOnce = !0, console.error("MUI: the createMuiTheme function was renamed to createTheme.\n\nYou should use `import { createTheme } from '@mui/material/styles'`"));
    return createTheme(...args);
  };
  exports.default = void 0;
  var _extends2 = global(require("module$node_modules$$babel$runtime$helpers$extends")), _objectWithoutPropertiesLoose2 = global(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose"));
  global(require("module$node_modules$$mui$utils$node$formatMuiErrorMessage$index"));
  var _deepmerge = global(require("module$node_modules$$mui$utils$node$deepmerge$index")), _styleFunctionSx = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$$mui$system$styleFunctionSx$index")), _createTheme = global(require("module$node_modules$$mui$system$createTheme$index")), _generateUtilityClass = global(require("module$node_modules$$mui$utils$node$generateUtilityClass$index")), _createMixins = global(require("module$node_modules$$mui$material$node$styles$createMixins")), _createPalette = global(require("module$node_modules$$mui$material$node$styles$createPalette")), _createTypography = global(require("module$node_modules$$mui$material$node$styles$createTypography")), 
  _shadows = global(require("module$node_modules$$mui$material$node$styles$shadows")), _createTransitions = global(require("module$node_modules$$mui$material$node$styles$createTransitions")), _zIndex = global(require("module$node_modules$$mui$material$node$styles$zIndex"));
  const _excluded = "breakpoints mixins spacing palette transitions typography shape".split(" ");
  let warnedOnce = !1;
  exports.default = createTheme;
};

//# sourceMappingURL=module$node_modules$$mui$material$node$styles$createTheme.js.map
