shadow$provide.module$node_modules$$mui$material$node$Select$Select = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }
  "use client";
  var _interopRequireDefault = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = void 0;
  var _extends2 = _interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$extends")), _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")), React = _interopRequireWildcard(require("module$node_modules$react$index"));
  global = _interopRequireDefault(require("module$node_modules$prop_types$index"));
  var _clsx = _interopRequireDefault(require("module$node_modules$clsx$dist$clsx")), _deepmerge = _interopRequireDefault(require("module$node_modules$$mui$utils$node$deepmerge$index")), _SelectInput = _interopRequireDefault(require("module$node_modules$$mui$material$node$Select$SelectInput")), _formControlState = _interopRequireDefault(require("module$node_modules$$mui$material$node$FormControl$formControlState")), _useFormControl = _interopRequireDefault(require("module$node_modules$$mui$material$node$FormControl$useFormControl")), 
  _ArrowDropDown = _interopRequireDefault(require("module$node_modules$$mui$material$node$internal$svg_icons$ArrowDropDown"));
  module = _interopRequireDefault(require("module$node_modules$$mui$material$node$Input$index"));
  var _NativeSelectInput = _interopRequireDefault(require("module$node_modules$$mui$material$node$NativeSelect$NativeSelectInput")), _FilledInput = _interopRequireDefault(require("module$node_modules$$mui$material$node$FilledInput$index")), _OutlinedInput = _interopRequireDefault(require("module$node_modules$$mui$material$node$OutlinedInput$index")), _useThemeProps = _interopRequireDefault(require("module$node_modules$$mui$material$node$styles$useThemeProps")), _useForkRef = _interopRequireDefault(require("module$node_modules$$mui$material$node$utils$useForkRef")), 
  _styled = _interopRequireWildcard(require("module$node_modules$$mui$material$node$styles$styled")), _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  const _excluded = "autoWidth children classes className defaultOpen displayEmpty IconComponent id input inputProps label labelId MenuProps multiple native onClose onOpen open renderValue SelectDisplayProps variant".split(" "), _excluded2 = ["root"];
  require = {name:"MuiSelect", overridesResolver:(props, styles) => styles.root, shouldForwardProp:prop => (0,_styled.rootShouldForwardProp)(prop) && "variant" !== prop, slot:"Root"};
  const StyledInput = (0,_styled.default)(module.default, require)(""), StyledOutlinedInput = (0,_styled.default)(_OutlinedInput.default, require)(""), StyledFilledInput = (0,_styled.default)(_FilledInput.default, require)("");
  require = React.forwardRef(function(inProps, ref) {
    var props = (0,_useThemeProps.default)({name:"MuiSelect", props:inProps});
    const {autoWidth = !1, children, classes:classesProp = {}, className, defaultOpen = !1, displayEmpty = !1, IconComponent = _ArrowDropDown.default, id, input, inputProps, label, labelId, MenuProps, multiple = !1, native = !1, onClose, onOpen, open, renderValue, SelectDisplayProps, variant:variantProp = "outlined"} = props;
    inProps = (0,_objectWithoutPropertiesLoose2.default)(props, _excluded);
    const inputComponent = native ? _NativeSelectInput.default : _SelectInput.default;
    var muiFormControl = (0,_useFormControl.default)();
    muiFormControl = (0,_formControlState.default)({props, muiFormControl, states:["variant", "error"]});
    const variant = muiFormControl.variant || variantProp;
    var ownerState = (0,_extends2.default)({}, props, {variant, classes:classesProp});
    ({classes:props} = ownerState);
    const restOfClasses = (0,_objectWithoutPropertiesLoose2.default)(props, _excluded2);
    ownerState = input || {standard:(0,_jsxRuntime.jsx)(StyledInput, {ownerState}), outlined:(0,_jsxRuntime.jsx)(StyledOutlinedInput, {label, ownerState}), filled:(0,_jsxRuntime.jsx)(StyledFilledInput, {ownerState})}[variant];
    ref = (0,_useForkRef.default)(ref, ownerState.ref);
    return (0,_jsxRuntime.jsx)(React.Fragment, {children:React.cloneElement(ownerState, (0,_extends2.default)({inputComponent, inputProps:(0,_extends2.default)({children, error:muiFormControl.error, IconComponent, variant, type:void 0, multiple}, native ? {id} : {autoWidth, defaultOpen, displayEmpty, labelId, MenuProps, onClose, onOpen, open, renderValue, SelectDisplayProps:(0,_extends2.default)({id}, SelectDisplayProps)}, inputProps, {classes:inputProps ? (0,_deepmerge.default)(restOfClasses, inputProps.classes) : 
    restOfClasses}, input ? input.props.inputProps : {})}, (multiple && native || displayEmpty) && "outlined" === variant ? {notched:!0} : {}, {ref, className:(0,_clsx.default)(ownerState.props.className, className, props.root)}, !input && {variant}, inProps))});
  });
  require.propTypes = {autoWidth:global.default.bool, children:global.default.node, classes:global.default.object, className:global.default.string, defaultOpen:global.default.bool, defaultValue:global.default.any, displayEmpty:global.default.bool, IconComponent:global.default.elementType, id:global.default.string, input:global.default.element, inputProps:global.default.object, label:global.default.node, labelId:global.default.string, MenuProps:global.default.object, multiple:global.default.bool, 
  native:global.default.bool, onChange:global.default.func, onClose:global.default.func, onOpen:global.default.func, open:global.default.bool, renderValue:global.default.func, SelectDisplayProps:global.default.object, sx:global.default.oneOfType([global.default.arrayOf(global.default.oneOfType([global.default.func, global.default.object, global.default.bool])), global.default.func, global.default.object]), value:global.default.oneOfType([global.default.oneOf([""]), global.default.any]), variant:global.default.oneOf(["filled", 
  "outlined", "standard"])};
  require.muiName = "Select";
  exports.default = require;
};

//# sourceMappingURL=module$node_modules$$mui$material$node$Select$Select.js.map
