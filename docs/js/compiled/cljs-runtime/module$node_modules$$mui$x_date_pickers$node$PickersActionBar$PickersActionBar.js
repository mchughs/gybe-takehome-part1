shadow$provide.module$node_modules$$mui$x_date_pickers$node$PickersActionBar$PickersActionBar = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  function PickersActionBar(props) {
    const {onAccept, onClear, onCancel, onSetToday, actions} = props;
    props = (0,_objectWithoutPropertiesLoose2.default)(props, _excluded);
    const localeText = (0,_useUtils.useLocaleText)();
    if (null == actions || 0 === actions.length) {
      return null;
    }
    const buttons = actions?.map(actionType => {
      switch(actionType) {
        case "clear":
          return (0,_jsxRuntime.jsx)(_Button.default, {onClick:onClear, children:localeText.clearButtonLabel}, actionType);
        case "cancel":
          return (0,_jsxRuntime.jsx)(_Button.default, {onClick:onCancel, children:localeText.cancelButtonLabel}, actionType);
        case "accept":
          return (0,_jsxRuntime.jsx)(_Button.default, {onClick:onAccept, children:localeText.okButtonLabel}, actionType);
        case "today":
          return (0,_jsxRuntime.jsx)(_Button.default, {onClick:onSetToday, children:localeText.todayButtonLabel}, actionType);
        default:
          return null;
      }
    });
    return (0,_jsxRuntime.jsx)(_DialogActions.default, (0,_extends2.default)({}, props, {children:buttons}));
  }
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.PickersActionBar = PickersActionBar;
  var _extends2 = global(require("module$node_modules$$babel$runtime$helpers$extends")), _objectWithoutPropertiesLoose2 = global(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose"));
  (function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  })(require("module$node_modules$react$index"));
  exports = global(require("module$node_modules$prop_types$index"));
  var _Button = global(require("module$node_modules$$mui$material$node$Button$index")), _DialogActions = global(require("module$node_modules$$mui$material$node$DialogActions$index")), _useUtils = require("module$node_modules$$mui$x_date_pickers$node$internals$hooks$useUtils"), _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  const _excluded = ["onAccept", "onClear", "onCancel", "onSetToday", "actions"];
  PickersActionBar.propTypes = {actions:exports.default.arrayOf(exports.default.oneOf(["accept", "cancel", "clear", "today"]).isRequired), disableSpacing:exports.default.bool, onAccept:exports.default.func.isRequired, onCancel:exports.default.func.isRequired, onClear:exports.default.func.isRequired, onSetToday:exports.default.func.isRequired, sx:exports.default.oneOfType([exports.default.arrayOf(exports.default.oneOfType([exports.default.func, exports.default.object, exports.default.bool])), exports.default.func, 
  exports.default.object])};
};

//# sourceMappingURL=module$node_modules$$mui$x_date_pickers$node$PickersActionBar$PickersActionBar.js.map
