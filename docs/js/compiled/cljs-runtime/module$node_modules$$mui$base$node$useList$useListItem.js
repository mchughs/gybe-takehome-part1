shadow$provide.module$node_modules$$mui$base$node$useList$useListItem = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  "use client";
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.useListItem = function(parameters) {
    const {handlePointerOverEvents = !1, item} = parameters;
    parameters = React.useContext(_ListContext.ListContext);
    if (!parameters) {
      throw Error("useListItem must be used within a ListProvider");
    }
    const {dispatch, getItemState} = parameters, {highlighted, selected, focusable} = getItemState(item), createHandleClick = React.useCallback(externalHandlers => event => {
      var _externalHandlers$onC;
      null == (_externalHandlers$onC = externalHandlers.onClick) || _externalHandlers$onC.call(externalHandlers, event);
      if (!event.defaultPrevented) {
        if (void 0 === item) {
          throw Error("MUI: The `item` provided to useListItem() is undefined.\nThis should happen only during server-side rendering under React 17.");
        }
        dispatch({type:_listActions.ListActionTypes.itemClick, item, event});
      }
    }, [dispatch, item]), createHandlePointerOver = React.useCallback(externalHandlers => event => {
      var _externalHandlers$onM;
      null == (_externalHandlers$onM = externalHandlers.onMouseOver) || _externalHandlers$onM.call(externalHandlers, event);
      if (!event.defaultPrevented) {
        if (void 0 === item) {
          throw Error("MUI: The `item` provided to useListItem() is undefined.\nThis should happen only during server-side rendering under React 17.");
        }
        dispatch({type:_listActions.ListActionTypes.itemHover, item, event});
      }
    }, [dispatch, item]);
    let tabIndex;
    focusable && (tabIndex = highlighted ? 0 : -1);
    return {getRootProps:(externalProps = {}) => {
      const externalEventHandlers = (0,_extractEventHandlers.extractEventHandlers)(externalProps);
      return (0,_extends2.default)({}, externalProps, {onClick:createHandleClick(externalEventHandlers), onPointerOver:handlePointerOverEvents ? createHandlePointerOver(externalEventHandlers) : void 0, tabIndex});
    }, highlighted, selected};
  };
  var _extends2 = global(require("module$node_modules$$babel$runtime$helpers$extends")), React = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index")), _extractEventHandlers = require("module$node_modules$$mui$base$node$utils$extractEventHandlers"), _listActions = require("module$node_modules$$mui$base$node$useList$listActions_types"), _ListContext = require("module$node_modules$$mui$base$node$useList$ListContext");
};

//# sourceMappingURL=module$node_modules$$mui$base$node$useList$useListItem.js.map
