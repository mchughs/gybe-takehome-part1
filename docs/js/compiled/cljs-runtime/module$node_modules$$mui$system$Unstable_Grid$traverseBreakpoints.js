shadow$provide.module$node_modules$$mui$system$Unstable_Grid$traverseBreakpoints = function(global, require, module, exports) {
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.traverseBreakpoints = exports.filterBreakpointKeys = void 0;
  const filterBreakpointKeys = (breakpointsKeys, responsiveKeys) => breakpointsKeys.filter(key => responsiveKeys.includes(key));
  exports.filterBreakpointKeys = filterBreakpointKeys;
  exports.traverseBreakpoints = (breakpoints, responsive, iterator) => {
    const smallestBreakpoint = breakpoints.keys[0];
    Array.isArray(responsive) ? responsive.forEach((breakpointValue, index) => {
      iterator((responsiveStyles, style) => {
        index <= breakpoints.keys.length - 1 && (0 === index ? Object.assign(responsiveStyles, style) : responsiveStyles[breakpoints.up(breakpoints.keys[index])] = style);
      }, breakpointValue);
    }) : responsive && "object" === typeof responsive ? (Object.keys(responsive).length > breakpoints.keys.length ? breakpoints.keys : filterBreakpointKeys(breakpoints.keys, Object.keys(responsive))).forEach(key => {
      if (-1 !== breakpoints.keys.indexOf(key)) {
        const breakpointValue = responsive[key];
        void 0 !== breakpointValue && iterator((responsiveStyles, style) => {
          smallestBreakpoint === key ? Object.assign(responsiveStyles, style) : responsiveStyles[breakpoints.up(key)] = style;
        }, breakpointValue);
      }
    }) : ("number" === typeof responsive || "string" === typeof responsive) && iterator((responsiveStyles, style) => {
      Object.assign(responsiveStyles, style);
    }, responsive);
  };
};

//# sourceMappingURL=module$node_modules$$mui$system$Unstable_Grid$traverseBreakpoints.js.map
