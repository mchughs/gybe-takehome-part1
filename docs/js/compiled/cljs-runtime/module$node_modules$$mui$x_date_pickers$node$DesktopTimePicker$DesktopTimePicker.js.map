{
"version":3,
"file":"module$node_modules$$mui$x_date_pickers$node$DesktopTimePicker$DesktopTimePicker.js",
"lineCount":54,
"mappings":"AAAAA,cAAA,CAAA,gFAAA,GAAqG,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAwB7IC,UAASA,yBAAwB,CAACC,CAAD,CAAI;AAAE,QAAI,UAAJ,IAAkB,MAAOC,QAAzB;AAAkC,aAAO,IAAP;AAAlC;AAAF,QAAqDC,IAAI,IAAID,OAAJ,EAAzD,EAAwEE,IAAI,IAAIF,OAAJ,EAA5E;AAA2F,WAAO,CAACF,wBAAD,GAA4BA,QAAS,CAACC,CAAD,CAAI;AAAE,aAAOA,CAAA,GAAIG,CAAJ,GAAQD,CAAf;AAAF,KAAzC,EAAgEF,CAAhE,CAAP;AAA3F;AArBjCI,QAAAA,GAAyBR,OAAA,CAAQ,kEAAR,CAAzBQ;AACJC,QAAOC,CAAAA,cAAP,CAAsBR,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CS,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAT,SAAQU,CAAAA,iBAAR,GAA4B,IAAK,EAAjC;AACA,MAAIC,YAAYL,MAAA,CAAuBR,OAAA,CAAQ,oDAAR,CAAvB,CAAhB;AACIc,QAAAA,GAgBJC,QAAgC,CAACX,CAAD,EAAIE,CAAJ,CAAO;AAAE,QAAI,CAACA,CAAL,IAAUF,CAAV,IAAeA,CAAEY,CAAAA,UAAjB;AAA6B,aAAOZ,CAAP;AAA7B;AAAuC,QAAI,IAAJ,KAAaA,CAAb,IAAkB,QAAlB,IAA8B,MAAOA,EAArC,IAA0C,UAA1C,IAAwD,MAAOA,EAA/D;AAAkE,aAAO,CAAEa,QAASb,CAAX,CAAP;AAAlE;AAA8H,SAAjCG,CAAiC,GAA7BJ,wBAAA,CAAyBG,CAAzB,CAA6B,KAASC,CAAEW,CAAAA,GAAF,CAAMd,CAAN,CAAT;AAAmB,aAAOG,CAAEY,CAAAA,GAAF,CAAMf,CAAN,CAAP;AAAnB;AAAvK,QAA+MgB,IAAI,CAAEC,UAAW,IAAb,CAAnN,EAAwOC,IAAIb,MAAOC,CAAAA,cAAXY,IAA6Bb,MAAOc,CAAAA,wBAA5Q,EAA+SC,CAA/S;AAAsS,SAASA,CAAT,GAAcpB,EAAd;AAAiB,UAAI,SAAJ,KAAkBoB,CAAlB,IAAuBf,MAAOgB,CAAAA,SAAUC,CAAAA,cAAeC,CAAAA,IAAhC,CAAqCvB,CAArC,EAAwCoB,CAAxC,CAAvB,CAAmE;AAAE,YAAII,IAAIN,CAAA,GAAIb,MAAOc,CAAAA,wBAAP,CAAgCnB,CAAhC,EAAmCoB,CAAnC,CAAJ,GAA4C,IAApD;AAA0DI,SAAA,KAAMA,CAAET,CAAAA,GAAR,IAAeS,CAAEC,CAAAA,GAAjB,IAAwBpB,MAAOC,CAAAA,cAAP,CAAsBU,CAAtB,EAAyBI,CAAzB,EAA4BI,CAA5B,CAAxB,GAAyDR,CAAA,CAAEI,CAAF,CAAzD,GAAgEpB,CAAA,CAAEoB,CAAF,CAAhE;AAA5D;AAApF;AAAwN,WAAOJ,CAAEH,CAAAA,OAAF,GAAYb,CAAZ,EAAeG,CAAf,IAAoBA,CAAEsB,CAAAA,GAAF,CAAMzB,CAAN,EAASgB,CAAT,CAApB,EAAiCA,CAAxC;AAA9f,GAhB3B,CAAwBpB,OAAA,CAAQ,iCAAR,CAAxB,CAARc;AACAgB,QAAAA,GAAatB,MAAA,CAAuBR,OAAA,CAAQ,sCAAR,CAAvB,CAAb8B;AACJ,MAAIC,SAAS/B,OAAA,CAAQ,gDAAR,CAAb,EACIgC,UAAUhC,OAAA,CAAQ,2CAAR,CADd,EAEIiC,iBAAiBjC,OAAA,CAAQ,4EAAR,CAFrB,EAGIkC,aAAalC,OAAA,CAAQ,8DAAR,CAHjB,EAIImC,UAAUnC,OAAA,CAAQ,gEAAR,CAJd,EAKIoC,YAAYpC,OAAA,CAAQ,uEAAR,CALhB;AAMIqC,kBAAgBrC,OAAA,CAAQ,sFAAR,CANpB,EAOIsC,SAAStC,OAAA,CAAQ,0DAAR,CAPb,EAQIuC,oBAAoBvC,OAAA,CAAQ,qFAAR,CARxB,EASIwC,0BAA0BxC,OAAA,CAAQ,gGAAR,CAT9B,EAUIyC,qBAAqBzC,OAAA,CAAQ,sEAAR,CAVzB;AAWI0C,eAAa1C,OAAA,CAAQ,yEAAR,CAXjB,EAYI2C,iBAAiB3C,OAAA,CAAQ,8EAAR,CAZrB;AAsFkB4C,GA7DQ1C,OAAQU,CAAAA,iBA6DhBgC,GA7DiD9B,MAAM+B,CAAAA,UAAN,CAAiBjC,QAA0B,CAACkC,OAAD,EAAUC,GAAV,CAAe;AAC3H,QAAMC,aAAa,GAAIZ,SAAUa,CAAAA,aAAd,GAAnB,EACMC,QAAQ,GAAId,SAAUe,CAAAA,QAAd,GADd;AAIA,UAAMC,mBAAmB,GAAIjB,OAAQkB,CAAAA,6BAAZ,EAA2CP,OAA3C,EAAoD,sBAApD,CAAzB,EACM,CACJQ,+BADI,EAEJ,MAAOC,aAFH,EAGJC,SAHI,CAAA,GAIF,GAAIb,cAAec,CAAAA,wBAAnB,EAA6CL,gBAA7C,CALJ;AAMMM,WAAAA,GAAiBJ,+BAAA,GAAkCb,kBAAmBkB,CAAAA,0BAArD,GAAkFlB,kBAAmBmB,CAAAA,sCAAtHF;AACAG,WAAAA,GAAgB,GAAIhD,SAAUI,CAAAA,OAAd,EAAuB,CAC3C6C,MAAOJ,OADoC,EAE3CK,QAASL,OAFkC,EAG3CM,QAASN,OAHkC,EAI3CO,SAAUP,OAJiC,CAAvB,EAKnBN,gBAAiBS,CAAAA,aALE,CAAhBA;AAMN,UAAMK,cAAcd,gBAAiBc,CAAAA,WAA/BA,IAA8C,CAAA,CAApD,EACMC,mBAAmBb,+BAAA,GAAkC,EAAlC,GAAuC,CAAC,QAAD,CADhE,EAIMc,QADyCP,OAAcC,CAAAA,KAAOO,EAAAA,IACtD,KAD+D5B,kBAAmBmB,CAAAA,sCAAuCS,CAAAA,IACzH,GAA0Cd,aAAce,CAAAA,MAAd,CAAqBC,IAAA,IAAiB,UAAjB,KAAQA,IAA7B,CAA1C,GAA8FhB,aAJ5G;AAOMiB,SAAAA,GAAQ,GAAI3D,SAAUI,CAAAA,OAAd,EAAuB,EAAvB,EAA2BmC,gBAA3B,EAA6C,CACzDc,WADyD,EAEzDV,SAFyD,EAGzDK,cAAAA,OAHyD,EAIzDY,OAAQ,GAAI/B,UAAWgC,CAAAA,iBAAf,EAAkCxB,KAAlC,EAAyCE,gBAAzC,CAJiD,EAOzDgB,MAAOd,+BAAA,GAAkC,CAAC,OAAD,CAAlC,GAA8Cc,KAPI,EAQzDO,MAAO,GAAI9D,SAAUI,CAAAA,OAAd,EAAuB,CAC5B2D,MAAO1C,UAAW2C,CAAAA,SADU,EAE5BC,eAAgBxC,MAAOyC,CAAAA,SAFK,CAAvB,EAGJ3B,gBAAiBuB,CAAAA,KAHb,CARkD,EAYzDK,UAAW,GAAInE,SAAUI,CAAAA,OAAd,EAAuB,EAAvB,EAA2BmC,gBAAiB4B,CAAAA,SAA5C,EAAuD,CAChEJ,MAAOK,UAAAL,IAAc,GAAI/D,SAAUI,CAAAA,OAAd,EAAuB,EAAvB,EAA2B,GAAIc,MAAOmD,CAAAA,qBAAX,EAAkC9B,gBAAiB4B,CAAAA,SAAWJ,EAAAA,KAA9D;AAAqEK,cAArE,CAA3B,EAA6G,GAAIzC,uBAAwB2C,CAAAA,sBAA5B,EAAoD/B,gBAApD,CAA7G,EAAoL,CACvML,GADuM,CAApL,CAD2C,EAIhEqC,QAAS,GAAIvE,SAAUI,CAAAA,OAAd,EAAuB,CAC9BoE,OAAQ,CAAA,CADsB,EAE9BnB,WAF8B,CAAvB,EAGNd,gBAAiB4B,CAAAA,SAAWI,EAAAA,OAHtB,CAJuD,EAQhEE,UAAW,GAAIzE,SAAUI,CAAAA,OAAd,EAAuB,CAChCsE,QAASpB,gBADuB,CAAvB,EAERf,gBAAiB4B,CAAAA,SAAWM,EAAAA,SAFpB,CARqD,CAAvD,CAZ8C,CAA7C,CAARd;AAyBN,KAAM,CACJ,aAAAgB,UADI,CAAN,GAEI,GAAIjD,iBAAkBkD,CAAAA,gBAAtB,EAAwC,CAC1CjB,MAAAA,KAD0C,EAE1CkB,aAAczD,cAAe0D,CAAAA,sBAFa,EAG1CC,UAAW,MAH+B,EAI1CC,sBAAuBrB,KAAMxB,CAAAA,UAAY8C,EAAAA,sBAAzCD,IAAmE7C,UAAW8C,CAAAA,sBAJpC,EAK1CC,UAAW1D,aAAc2D,CAAAA,YALiB,CAAxC,CAFJ;AASA,WAAOR,UAAA,EAAP;AA3D2H,GAA1D,CA6DjD5C,EAAAA,SAAlB,GAA8B,CAS5BqD,KAAMnE,MAAWb,CAAAA,OAAQiF,CAAAA,IATG,EAc5BhC,YAAapC,MAAWb,CAAAA,OAAQiF,CAAAA,IAdJ,EAqB5BC,UAAWrE,MAAWb,CAAAA,OAAQiF,CAAAA,IArBF,EAsB5BE,UAAWtE,MAAWb,CAAAA,OAAQoF,CAAAA,MAtBF,EA2B5BC,cAAexE,MAAWb,CAAAA,OAAQiF,CAAAA,IA3BN,EAgC5BK,aAAczE,MAAWb,CAAAA,OAAQuF,CAAAA,MAhCL,EAqC5BC,SAAU3E,MAAWb,CAAAA,OAAQiF,CAAAA,IArCD,EA0C5BQ,cAAe5E,MAAWb,CAAAA,OAAQiF,CAAAA,IA1CN,EA+C5BS,yCAA0C7E,MAAWb,CAAAA,OAAQiF,CAAAA,IA/CjC,EAoD5BU,kBAAmB9E,MAAWb,CAAAA,OAAQiF,CAAAA,IApDV,EAyD5BW,YAAa/E,MAAWb,CAAAA,OAAQiF,CAAAA,IAzDJ,EA6D5BY,kCAAmChF,MAAWb,CAAAA,OAAQ8F,CAAAA,GA7D1B,EAkE5BtC,OAAQ3C,MAAWb,CAAAA,OAAQoF,CAAAA,MAlEC,EAwE5BW,cAAelF,MAAWb,CAAAA,OAAQgG,CAAAA,KAAnB,CAAyB,CAAC,OAAD;AAAU,YAAV,CAAzB,CAxEa,EA4E5BC,SAAUlF,OAAQmF,CAAAA,OA5EU,EAgF5BC,MAAOtF,MAAWb,CAAAA,OAAQoG,CAAAA,IAhFE,EAqF5BrE,WAAYlB,MAAWb,CAAAA,OAAQuF,CAAAA,MArFH,EA0F5Bc,QAASxF,MAAWb,CAAAA,OAAQuF,CAAAA,MA1FA,EA+F5Be,QAASzF,MAAWb,CAAAA,OAAQuF,CAAAA,MA/FA,EAoG5BgB,YAAa1F,MAAWb,CAAAA,OAAQwG,CAAAA,MApGJ,EAwG5BpD,KAAMvC,MAAWb,CAAAA,OAAQoF,CAAAA,MAxGG,EA8G5BqB,SAAU5F,MAAWb,CAAAA,OAAQ0G,CAAAA,IA9GD,EAsH5BC,SAAU9F,MAAWb,CAAAA,OAAQ0G,CAAAA,IAtHD,EA2H5BE,QAAS/F,MAAWb,CAAAA,OAAQ0G,CAAAA,IA3HA,EAqI5BG,QAAShG,MAAWb,CAAAA,OAAQ0G,CAAAA,IArIA,EA0I5BI,OAAQjG,MAAWb,CAAAA,OAAQ0G,CAAAA,IA1IC,EA+I5BK,yBAA0BlG,MAAWb,CAAAA,OAAQ0G,CAAAA,IA/IjB,EAqJ5BM,aAAcnG,MAAWb,CAAAA,OAAQ0G,CAAAA,IArJL,EA0J5BO,KAAMpG,MAAWb,CAAAA,OAAQiF,CAAAA,IA1JG,EAgK5BiC,OAAQrG,MAAWb,CAAAA,OAAQgG,CAAAA,KAAnB,CAAyB,CAAC,OAAD;AAAU,YAAV,EAAsB,SAAtB,EAAiC,SAAjC,CAAzB,CAhKoB,EAoK5BmB,YAAatG,MAAWb,CAAAA,OAAQgG,CAAAA,KAAnB,CAAyB,CAAC,WAAD,EAAc,UAAd,CAAzB,CApKe,EAqK5BoB,SAAUvG,MAAWb,CAAAA,OAAQiF,CAAAA,IArKD,EA0K5BoC,iBAAkBxG,MAAWb,CAAAA,OAAQiF,CAAAA,IA1KT,EA+K5BqC,cAAezG,MAAWb,CAAAA,OAAQuF,CAAAA,MA/KN,EAyL5BgC,iBAAkB1G,MAAWb,CAAAA,OAAQwH,CAAAA,SAAnB,CAA6B,CAAC3G,MAAWb,CAAAA,OAAQgG,CAAAA,KAAnB,CAAyB,iEAAA,CAAA,KAAA,CAAA,GAAA,CAAzB,CAAD,EAA2HnF,MAAWb,CAAAA,OAAQwG,CAAAA,MAA9I,CAA7B,CAzLU,EAiM5BiB,kBAAmB5G,MAAWb,CAAAA,OAAQ0G,CAAAA,IAjMV,EAsM5BgB,aAAc7G,MAAWb,CAAAA,OAAQiF,CAAAA,IAtML,EA2M5BlB,UAAWlD,MAAWb,CAAAA,OAAQuF,CAAAA,MA3MF,EAgN5B7B,MAAO7C,MAAWb,CAAAA,OAAQuF,CAAAA,MAhNE;AAoN5BoC,KAAI9G,MAAWb,CAAAA,OAAQwH,CAAAA,SAAnB,CAA6B,CAAC3G,MAAWb,CAAAA,OAAQ4H,CAAAA,OAAnB,CAA2B/G,MAAWb,CAAAA,OAAQwH,CAAAA,SAAnB,CAA6B,CAAC3G,MAAWb,CAAAA,OAAQ0G,CAAAA,IAApB,EAA0B7F,MAAWb,CAAAA,OAAQuF,CAAAA,MAA7C,EAAqD1E,MAAWb,CAAAA,OAAQiF,CAAAA,IAAxE,CAA7B,CAA3B,CAAD,EAA0IpE,MAAWb,CAAAA,OAAQ0G,CAAAA,IAA7J,EAAmK7F,MAAWb,CAAAA,OAAQuF,CAAAA,MAAtL,CAA7B,CApNwB,EAyN5BsC,qCAAsChH,MAAWb,CAAAA,OAAQwG,CAAAA,MAzN7B,EAgO5BjE,UAAW1B,MAAWb,CAAAA,OAAQ8H,CAAAA,KAAnB,CAAyB,CAClCjF,MAAOhC,MAAWb,CAAAA,OAAQwG,CAAAA,MADQ,EAElC1D,QAASjC,MAAWb,CAAAA,OAAQwG,CAAAA,MAFM,EAGlCzD,QAASlC,MAAWb,CAAAA,OAAQwG,CAAAA,MAHM,CAAzB,CAhOiB,EA4O5BuB,SAAUlH,MAAWb,CAAAA,OAAQoF,CAAAA,MA5OD,EAiP5B1F,MAAOmB,MAAWb,CAAAA,OAAQuF,CAAAA,MAjPE,EAuP5BjC,KAAMzC,MAAWb,CAAAA,OAAQgG,CAAAA,KAAnB,CAAyB,CAAC,OAAD,EAAU,UAAV,EAAsB,SAAtB,EAAiC,SAAjC,CAAzB,CAvPsB;AA6P5BpD,gBAAe/B,MAAWb,CAAAA,OAAQ8H,CAAAA,KAAnB,CAAyB,CACtCjF,MAAOhC,MAAWb,CAAAA,OAAQ0G,CAAAA,IADY,EAEtC1D,SAAUnC,MAAWb,CAAAA,OAAQ0G,CAAAA,IAFS,EAGtC5D,QAASjC,MAAWb,CAAAA,OAAQ0G,CAAAA,IAHU,EAItC3D,QAASlC,MAAWb,CAAAA,OAAQ0G,CAAAA,IAJU,CAAzB,CA7Pa,EAsQ5BvD,MAAOtC,MAAWb,CAAAA,OAAQ4H,CAAAA,OAAnB,CAA2B/G,MAAWb,CAAAA,OAAQgG,CAAAA,KAAnB,CAAyB,CAAC,OAAD,EAAU,SAAV,EAAqB,SAArB,CAAzB,CAA0DgC,CAAAA,UAArF,CAtQqB,CAA9B;AAjG6I,CAA7I;;",
"sources":["node_modules/@mui/x-date-pickers/node/DesktopTimePicker/DesktopTimePicker.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$x_date_pickers$node$DesktopTimePicker$DesktopTimePicker\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DesktopTimePicker = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _utils = require(\"@mui/base/utils\");\nvar _utils2 = require(\"@mui/utils\");\nvar _valueManagers = require(\"../internals/utils/valueManagers\");\nvar _TimeField = require(\"../TimeField\");\nvar _shared = require(\"../TimePicker/shared\");\nvar _useUtils = require(\"../internals/hooks/useUtils\");\nvar _validateTime = require(\"../internals/utils/validation/validateTime\");\nvar _icons = require(\"../icons\");\nvar _useDesktopPicker = require(\"../internals/hooks/useDesktopPicker\");\nvar _extractValidationProps = require(\"../internals/utils/validation/extractValidationProps\");\nvar _timeViewRenderers = require(\"../timeViewRenderers\");\nvar _timeUtils = require(\"../internals/utils/time-utils\");\nvar _dateTimeUtils = require(\"../internals/utils/date-time-utils\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n/**\n * Demos:\n *\n * - [TimePicker](https://mui.com/x/react-date-pickers/time-picker/)\n * - [Validation](https://mui.com/x/react-date-pickers/validation/)\n *\n * API:\n *\n * - [DesktopTimePicker API](https://mui.com/x/api/date-pickers/desktop-time-picker/)\n */\nconst DesktopTimePicker = exports.DesktopTimePicker = /*#__PURE__*/React.forwardRef(function DesktopTimePicker(inProps, ref) {\n  const localeText = (0, _useUtils.useLocaleText)();\n  const utils = (0, _useUtils.useUtils)();\n\n  // Props with the default values common to all time pickers\n  const defaultizedProps = (0, _shared.useTimePickerDefaultizedProps)(inProps, 'MuiDesktopTimePicker');\n  const {\n    shouldRenderTimeInASingleColumn,\n    views: resolvedViews,\n    timeSteps\n  } = (0, _dateTimeUtils.resolveTimeViewsResponse)(defaultizedProps);\n  const renderTimeView = shouldRenderTimeInASingleColumn ? _timeViewRenderers.renderDigitalClockTimeView : _timeViewRenderers.renderMultiSectionDigitalClockTimeView;\n  const viewRenderers = (0, _extends2.default)({\n    hours: renderTimeView,\n    minutes: renderTimeView,\n    seconds: renderTimeView,\n    meridiem: renderTimeView\n  }, defaultizedProps.viewRenderers);\n  const ampmInClock = defaultizedProps.ampmInClock ?? true;\n  const actionBarActions = shouldRenderTimeInASingleColumn ? [] : ['accept'];\n  // Need to avoid adding the `meridiem` view when unexpected renderer is specified\n  const shouldHoursRendererContainMeridiemView = viewRenderers.hours?.name === _timeViewRenderers.renderMultiSectionDigitalClockTimeView.name;\n  const views = !shouldHoursRendererContainMeridiemView ? resolvedViews.filter(view => view !== 'meridiem') : resolvedViews;\n\n  // Props with the default values specific to the desktop variant\n  const props = (0, _extends2.default)({}, defaultizedProps, {\n    ampmInClock,\n    timeSteps,\n    viewRenderers,\n    format: (0, _timeUtils.resolveTimeFormat)(utils, defaultizedProps),\n    // Setting only `hours` time view in case of single column time picker\n    // Allows for easy view lifecycle management\n    views: shouldRenderTimeInASingleColumn ? ['hours'] : views,\n    slots: (0, _extends2.default)({\n      field: _TimeField.TimeField,\n      openPickerIcon: _icons.ClockIcon\n    }, defaultizedProps.slots),\n    slotProps: (0, _extends2.default)({}, defaultizedProps.slotProps, {\n      field: ownerState => (0, _extends2.default)({}, (0, _utils.resolveComponentProps)(defaultizedProps.slotProps?.field, ownerState), (0, _extractValidationProps.extractValidationProps)(defaultizedProps), {\n        ref\n      }),\n      toolbar: (0, _extends2.default)({\n        hidden: true,\n        ampmInClock\n      }, defaultizedProps.slotProps?.toolbar),\n      actionBar: (0, _extends2.default)({\n        actions: actionBarActions\n      }, defaultizedProps.slotProps?.actionBar)\n    })\n  });\n  const {\n    renderPicker\n  } = (0, _useDesktopPicker.useDesktopPicker)({\n    props,\n    valueManager: _valueManagers.singleItemValueManager,\n    valueType: 'time',\n    getOpenDialogAriaText: props.localeText?.openTimePickerDialogue ?? localeText.openTimePickerDialogue,\n    validator: _validateTime.validateTime\n  });\n  return renderPicker();\n});\nDesktopTimePicker.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * 12h/24h view for hour selection clock.\n   * @default `utils.is12HourCycleInCurrentLocale()`\n   */\n  ampm: _propTypes.default.bool,\n  /**\n   * Display ampm controls under the clock (instead of in the toolbar).\n   * @default true on desktop, false on mobile\n   */\n  ampmInClock: _propTypes.default.bool,\n  /**\n   * If `true`, the main element is focused during the first mount.\n   * This main element is:\n   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).\n   * - the `input` element if there is a field rendered.\n   */\n  autoFocus: _propTypes.default.bool,\n  className: _propTypes.default.string,\n  /**\n   * If `true`, the popover or modal will close after submitting the full date.\n   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).\n   */\n  closeOnSelect: _propTypes.default.bool,\n  /**\n   * The default value.\n   * Used when the component is not controlled.\n   */\n  defaultValue: _propTypes.default.object,\n  /**\n   * If `true`, the picker and text field are disabled.\n   * @default false\n   */\n  disabled: _propTypes.default.bool,\n  /**\n   * If `true`, disable values after the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disableFuture: _propTypes.default.bool,\n  /**\n   * Do not ignore date part when validating min/max time.\n   * @default false\n   */\n  disableIgnoringDatePartForTimeValidation: _propTypes.default.bool,\n  /**\n   * If `true`, the open picker button will not be rendered (renders only the field).\n   * @default false\n   */\n  disableOpenPicker: _propTypes.default.bool,\n  /**\n   * If `true`, disable values before the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disablePast: _propTypes.default.bool,\n  /**\n   * @default false\n   */\n  enableAccessibleFieldDOMStructure: _propTypes.default.any,\n  /**\n   * Format of the date when rendered in the input(s).\n   * Defaults to localized format based on the used `views`.\n   */\n  format: _propTypes.default.string,\n  /**\n   * Density of the format when rendered in the input.\n   * Setting `formatDensity` to `\"spacious\"` will add a space before and after each `/`, `-` and `.` character.\n   * @default \"dense\"\n   */\n  formatDensity: _propTypes.default.oneOf(['dense', 'spacious']),\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: _utils2.refType,\n  /**\n   * The label content.\n   */\n  label: _propTypes.default.node,\n  /**\n   * Locale for components texts.\n   * Allows overriding texts coming from `LocalizationProvider` and `theme`.\n   */\n  localeText: _propTypes.default.object,\n  /**\n   * Maximal selectable time.\n   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.\n   */\n  maxTime: _propTypes.default.object,\n  /**\n   * Minimal selectable time.\n   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.\n   */\n  minTime: _propTypes.default.object,\n  /**\n   * Step over minutes.\n   * @default 1\n   */\n  minutesStep: _propTypes.default.number,\n  /**\n   * Name attribute used by the `input` element in the Field.\n   */\n  name: _propTypes.default.string,\n  /**\n   * Callback fired when the value is accepted.\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @param {TValue} value The value that was just accepted.\n   */\n  onAccept: _propTypes.default.func,\n  /**\n   * Callback fired when the value changes.\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.\n   * @param {TValue} value The new value.\n   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.\n   */\n  onChange: _propTypes.default.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see `open`).\n   */\n  onClose: _propTypes.default.func,\n  /**\n   * Callback fired when the error associated to the current value changes.\n   * If the error has a non-null value, then the `TextField` will be rendered in `error` state.\n   *\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.\n   * @param {TError} error The new error describing why the current value is not valid.\n   * @param {TValue} value The value associated to the error.\n   */\n  onError: _propTypes.default.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see `open`).\n   */\n  onOpen: _propTypes.default.func,\n  /**\n   * Callback fired when the selected sections change.\n   * @param {FieldSelectedSections} newValue The new selected sections.\n   */\n  onSelectedSectionsChange: _propTypes.default.func,\n  /**\n   * Callback fired on view change.\n   * @template TView\n   * @param {TView} view The new view.\n   */\n  onViewChange: _propTypes.default.func,\n  /**\n   * Control the popup or dialog open state.\n   * @default false\n   */\n  open: _propTypes.default.bool,\n  /**\n   * The default visible view.\n   * Used when the component view is not controlled.\n   * Must be a valid option from `views` list.\n   */\n  openTo: _propTypes.default.oneOf(['hours', 'meridiem', 'minutes', 'seconds']),\n  /**\n   * Force rendering in particular orientation.\n   */\n  orientation: _propTypes.default.oneOf(['landscape', 'portrait']),\n  readOnly: _propTypes.default.bool,\n  /**\n   * If `true`, disable heavy animations.\n   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13\n   */\n  reduceAnimations: _propTypes.default.bool,\n  /**\n   * The date used to generate the new value when both `value` and `defaultValue` are empty.\n   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.\n   */\n  referenceDate: _propTypes.default.object,\n  /**\n   * The currently selected sections.\n   * This prop accepts four formats:\n   * 1. If a number is provided, the section at this index will be selected.\n   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.\n   * 3. If `\"all\"` is provided, all the sections will be selected.\n   * 4. If `null` is provided, no section will be selected.\n   * If not provided, the selected sections will be handled internally.\n   */\n  selectedSections: _propTypes.default.oneOfType([_propTypes.default.oneOf(['all', 'day', 'empty', 'hours', 'meridiem', 'minutes', 'month', 'seconds', 'weekDay', 'year']), _propTypes.default.number]),\n  /**\n   * Disable specific time.\n   * @template TDate\n   * @param {TDate} value The value to check.\n   * @param {TimeView} view The clock type of the timeValue.\n   * @returns {boolean} If `true` the time will be disabled.\n   */\n  shouldDisableTime: _propTypes.default.func,\n  /**\n   * If `true`, disabled digital clock items will not be rendered.\n   * @default false\n   */\n  skipDisabled: _propTypes.default.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: _propTypes.default.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: _propTypes.default.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object, _propTypes.default.bool])), _propTypes.default.func, _propTypes.default.object]),\n  /**\n   * Amount of time options below or at which the single column time renderer is used.\n   * @default 24\n   */\n  thresholdToRenderTimeInASingleColumn: _propTypes.default.number,\n  /**\n   * The time steps between two time unit options.\n   * For example, if `timeStep.minutes = 8`, then the available minute options will be `[0, 8, 16, 24, 32, 40, 48, 56]`.\n   * When single column time renderer is used, only `timeStep.minutes` will be used.\n   * @default{ hours: 1, minutes: 5, seconds: 5 }\n   */\n  timeSteps: _propTypes.default.shape({\n    hours: _propTypes.default.number,\n    minutes: _propTypes.default.number,\n    seconds: _propTypes.default.number\n  }),\n  /**\n   * Choose which timezone to use for the value.\n   * Example: \"default\", \"system\", \"UTC\", \"America/New_York\".\n   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.\n   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.\n   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.\n   */\n  timezone: _propTypes.default.string,\n  /**\n   * The selected value.\n   * Used when the component is controlled.\n   */\n  value: _propTypes.default.object,\n  /**\n   * The visible view.\n   * Used when the component view is controlled.\n   * Must be a valid option from `views` list.\n   */\n  view: _propTypes.default.oneOf(['hours', 'meridiem', 'minutes', 'seconds']),\n  /**\n   * Define custom view renderers for each section.\n   * If `null`, the section will only have field editing.\n   * If `undefined`, internally defined view will be the used.\n   */\n  viewRenderers: _propTypes.default.shape({\n    hours: _propTypes.default.func,\n    meridiem: _propTypes.default.func,\n    minutes: _propTypes.default.func,\n    seconds: _propTypes.default.func\n  }),\n  /**\n   * Available views.\n   */\n  views: _propTypes.default.arrayOf(_propTypes.default.oneOf(['hours', 'minutes', 'seconds']).isRequired)\n};\n};"],
"names":["shadow$provide","global","require","module","exports","_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireDefault","Object","defineProperty","value","DesktopTimePicker","_extends2","React","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_propTypes","_utils","_utils2","_valueManagers","_TimeField","_shared","_useUtils","_validateTime","_icons","_useDesktopPicker","_extractValidationProps","_timeViewRenderers","_timeUtils","_dateTimeUtils","propTypes","forwardRef","inProps","ref","localeText","useLocaleText","utils","useUtils","defaultizedProps","useTimePickerDefaultizedProps","shouldRenderTimeInASingleColumn","resolvedViews","timeSteps","resolveTimeViewsResponse","renderTimeView","renderDigitalClockTimeView","renderMultiSectionDigitalClockTimeView","viewRenderers","hours","minutes","seconds","meridiem","ampmInClock","actionBarActions","views","name","filter","view","props","format","resolveTimeFormat","slots","field","TimeField","openPickerIcon","ClockIcon","slotProps","ownerState","resolveComponentProps","extractValidationProps","toolbar","hidden","actionBar","actions","renderPicker","useDesktopPicker","valueManager","singleItemValueManager","valueType","getOpenDialogAriaText","openTimePickerDialogue","validator","validateTime","ampm","bool","autoFocus","className","string","closeOnSelect","defaultValue","object","disabled","disableFuture","disableIgnoringDatePartForTimeValidation","disableOpenPicker","disablePast","enableAccessibleFieldDOMStructure","any","formatDensity","oneOf","inputRef","refType","label","node","maxTime","minTime","minutesStep","number","onAccept","func","onChange","onClose","onError","onOpen","onSelectedSectionsChange","onViewChange","open","openTo","orientation","readOnly","reduceAnimations","referenceDate","selectedSections","oneOfType","shouldDisableTime","skipDisabled","sx","arrayOf","thresholdToRenderTimeInASingleColumn","shape","timezone","isRequired"]
}
