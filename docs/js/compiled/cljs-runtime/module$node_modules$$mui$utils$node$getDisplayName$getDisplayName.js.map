{
"version":3,
"file":"module$node_modules$$mui$utils$node$getDisplayName$getDisplayName.js",
"lineCount":35,
"mappings":"AAAAA,cAAA,CAAA,iEAAA,GAAsF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAY9HC,UAASA,gBAAe,CAACC,EAAD,CAAK;AAG3B,YAFMC,EAEN,GAFe,GAAED,EAAF,EAAOC,CAAAA,KAAP,CAAaC,gBAAb,CAEf,KADsBD,EAAA,CAAM,CAAN,CACtB,IAAe,EAAf;AAH2B;AAK7BE,UAASA,yBAAwB,CAACC,SAAD,EAAYC,QAAA,GAAW,EAAvB,CAA2B;AAC1D,WAAOD,SAAUE,CAAAA,WAAjB,IAAgCF,SAAUG,CAAAA,IAA1C,IAAkDR,eAAA,CAAgBK,SAAhB,CAAlD,IAAgFC,QAAhF;AAD0D;AAG5DG,UAASA,eAAc,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,WAAvB,CAAoC;AACnDC,aAAAA,GAAeT,wBAAA,CAAyBO,SAAzB,CAAfE;AACN,WAAOH,SAAUH,CAAAA,WAAjB,KAAkD,EAAjB,KAAAM,SAAA,GAAuB,GAAED,WAAF,IAAiBC,SAAjB,GAAvB,GAA0DD,WAA3F;AAFyD;AAjB3DE,QAAOC,CAAAA,cAAP,CAAsBhB,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CiB,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAjB,SAAQkB,CAAAA,OAAR,GAwBAC,QAAuB,CAACb,SAAD,CAAY;AACjC,QAAiB,IAAjB,IAAIA,SAAJ,CAAA;AAGA,UAAyB,QAAzB,KAAI,MAAOA,UAAX;AACE,eAAOA,SAAP;AADF;AAGA,UAAyB,UAAzB,KAAI,MAAOA,UAAX;AACE,eAAOD,wBAAA,CAAyBC,SAAzB,EAAoC,WAApC,CAAP;AADF;AAKA,UAAyB,QAAzB,KAAI,MAAOA,UAAX;AACE,eAAQA,SAAUc,CAAAA,QAAlB;AACE,eAAKC,QAASC,CAAAA,UAAd;AACE,mBAAOZ,cAAA,CAAeJ,SAAf,EAA0BA,SAAUiB,CAAAA,MAApC,EAA4C,YAA5C,CAAP;AACF,eAAKF,QAASG,CAAAA,IAAd;AACE,mBAAOd,cAAA,CAAeJ,SAAf,EAA0BA,SAAUmB,CAAAA,IAApC,EAA0C,MAA1C,CAAP;AAJJ;AADF;AAXA;AADiC,GAxBnC;AACAzB,SAAQC,CAAAA,eAAR,GAA0BA,eAA1B;AACA,MAAIoB,WAAWvB,OAAA,CAAQ,oCAAR,CAAf;AAGA,QAAMM,mBAAmB,mDAAzB;AAX8H,CAA9H;;",
"sources":["node_modules/@mui/utils/node/getDisplayName/getDisplayName.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$utils$node$getDisplayName$getDisplayName\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getDisplayName;\nexports.getFunctionName = getFunctionName;\nvar _reactIs = require(\"react-is\");\n// Simplified polyfill for IE11 support\n// https://github.com/JamesMGreene/Function.name/blob/58b314d4a983110c3682f1228f845d39ccca1817/Function.name.js#L3\nconst fnNameMatchRegex = /^\\s*function(?:\\s|\\s*\\/\\*.*\\*\\/\\s*)+([^(\\s/]*)\\s*/;\nfunction getFunctionName(fn) {\n  const match = `${fn}`.match(fnNameMatchRegex);\n  const name = match && match[1];\n  return name || '';\n}\nfunction getFunctionComponentName(Component, fallback = '') {\n  return Component.displayName || Component.name || getFunctionName(Component) || fallback;\n}\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  const functionName = getFunctionComponentName(innerType);\n  return outerType.displayName || (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName);\n}\n\n/**\n * cherry-pick from\n * https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js\n * originally forked from recompose/getDisplayName with added IE11 support\n */\nfunction getDisplayName(Component) {\n  if (Component == null) {\n    return undefined;\n  }\n  if (typeof Component === 'string') {\n    return Component;\n  }\n  if (typeof Component === 'function') {\n    return getFunctionComponentName(Component, 'Component');\n  }\n\n  // TypeScript can't have components as objects but they exist in the form of `memo` or `Suspense`\n  if (typeof Component === 'object') {\n    switch (Component.$$typeof) {\n      case _reactIs.ForwardRef:\n        return getWrappedName(Component, Component.render, 'ForwardRef');\n      case _reactIs.Memo:\n        return getWrappedName(Component, Component.type, 'memo');\n      default:\n        return undefined;\n    }\n  }\n  return undefined;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","getFunctionName","fn","match","fnNameMatchRegex","getFunctionComponentName","Component","fallback","displayName","name","getWrappedName","outerType","innerType","wrapperName","functionName","Object","defineProperty","value","default","getDisplayName","$$typeof","_reactIs","ForwardRef","render","Memo","type"]
}
