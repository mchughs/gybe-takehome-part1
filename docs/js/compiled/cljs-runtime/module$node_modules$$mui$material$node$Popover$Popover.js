shadow$provide.module$node_modules$$mui$material$node$Popover$Popover = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  function getOffsetTop(rect, vertical) {
    let offset = 0;
    "number" === typeof vertical ? offset = vertical : "center" === vertical ? offset = rect.height / 2 : "bottom" === vertical && (offset = rect.height);
    return offset;
  }
  function getOffsetLeft(rect, horizontal) {
    let offset = 0;
    "number" === typeof horizontal ? offset = horizontal : "center" === horizontal ? offset = rect.width / 2 : "right" === horizontal && (offset = rect.width);
    return offset;
  }
  function getTransformOriginValue(transformOrigin) {
    return [transformOrigin.horizontal, transformOrigin.vertical].map(n => "number" === typeof n ? `${n}px` : n).join(" ");
  }
  function resolveAnchorEl(anchorEl) {
    return "function" === typeof anchorEl ? anchorEl() : anchorEl;
  }
  "use client";
  var _interopRequireDefault = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = exports.PopoverRoot = exports.PopoverPaper = void 0;
  exports.getOffsetLeft = getOffsetLeft;
  exports.getOffsetTop = getOffsetTop;
  var _extends2 = _interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$extends")), _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")), React = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index"));
  global = _interopRequireDefault(require("module$node_modules$prop_types$index"));
  var _clsx = _interopRequireDefault(require("module$node_modules$clsx$dist$clsx")), _utils = require("module$node_modules$$mui$base$node$utils$index"), _composeClasses = _interopRequireDefault(require("module$node_modules$$mui$utils$node$composeClasses$index"));
  module = _interopRequireDefault(require("module$node_modules$$mui$utils$node$HTMLElementType$index"));
  var _refType = _interopRequireDefault(require("module$node_modules$$mui$utils$node$refType$index")), _elementTypeAcceptingRef = _interopRequireDefault(require("module$node_modules$$mui$utils$node$elementTypeAcceptingRef$index")), _integerPropType = _interopRequireDefault(require("module$node_modules$$mui$utils$node$integerPropType$index")), _chainPropTypes = _interopRequireDefault(require("module$node_modules$$mui$utils$node$chainPropTypes$index")), _styled = _interopRequireDefault(require("module$node_modules$$mui$material$node$styles$styled")), 
  _useThemeProps = _interopRequireDefault(require("module$node_modules$$mui$material$node$styles$useThemeProps")), _debounce = _interopRequireDefault(require("module$node_modules$$mui$material$node$utils$debounce")), _ownerDocument = _interopRequireDefault(require("module$node_modules$$mui$material$node$utils$ownerDocument")), _ownerWindow = _interopRequireDefault(require("module$node_modules$$mui$material$node$utils$ownerWindow")), _useForkRef = _interopRequireDefault(require("module$node_modules$$mui$material$node$utils$useForkRef")), 
  _Grow = _interopRequireDefault(require("module$node_modules$$mui$material$node$Grow$index")), _Modal = _interopRequireDefault(require("module$node_modules$$mui$material$node$Modal$index"));
  _interopRequireDefault = _interopRequireDefault(require("module$node_modules$$mui$material$node$Paper$index"));
  var _popoverClasses = require("module$node_modules$$mui$material$node$Popover$popoverClasses"), _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  const _excluded = ["onEntering"], _excluded2 = "action anchorEl anchorOrigin anchorPosition anchorReference children className container elevation marginThreshold open PaperProps slots slotProps transformOrigin TransitionComponent transitionDuration TransitionProps disableScrollLock".split(" "), _excluded3 = ["slotProps"], useUtilityClasses = ownerState => {
    ({classes:ownerState} = ownerState);
    return (0,_composeClasses.default)({root:["root"], paper:["paper"]}, _popoverClasses.getPopoverUtilityClass, ownerState);
  }, PopoverRoot = exports.PopoverRoot = (0,_styled.default)(_Modal.default, {name:"MuiPopover", slot:"Root", overridesResolver:(props, styles) => styles.root})({}), PopoverPaper = exports.PopoverPaper = (0,_styled.default)(_interopRequireDefault.default, {name:"MuiPopover", slot:"Paper", overridesResolver:(props, styles) => styles.paper})({position:"absolute", overflowY:"auto", overflowX:"hidden", minWidth:16, minHeight:16, maxWidth:"calc(100% - 32px)", maxHeight:"calc(100% - 32px)", outline:0});
  require = React.forwardRef(function(inProps, ref) {
    var _slotProps$paper, _slots$root, _slots$paper, props = (0,_useThemeProps.default)({props:inProps, name:"MuiPopover"});
    const {action, anchorEl, anchorOrigin = {vertical:"top", horizontal:"left"}, anchorPosition, anchorReference = "anchorEl", children, className, container:containerProp, elevation = 8, marginThreshold = 16, open, PaperProps:PaperPropsProp = {}, slots, slotProps, transformOrigin = {vertical:"top", horizontal:"left"}, TransitionComponent = _Grow.default, transitionDuration:transitionDurationProp = "auto", TransitionProps:{onEntering} = {}, disableScrollLock = !1} = props;
    inProps = (0,_objectWithoutPropertiesLoose2.default)(props.TransitionProps, _excluded);
    var other = (0,_objectWithoutPropertiesLoose2.default)(props, _excluded2);
    const externalPaperSlotProps = null != (_slotProps$paper = null == slotProps ? void 0 : slotProps.paper) ? _slotProps$paper : PaperPropsProp, paperRef = React.useRef(), handlePaperRef = (0,_useForkRef.default)(paperRef, externalPaperSlotProps.ref), ownerState = (0,_extends2.default)({}, props, {anchorOrigin, anchorReference, elevation, marginThreshold, externalPaperSlotProps, transformOrigin, TransitionComponent, transitionDuration:transitionDurationProp, TransitionProps:inProps}), classes = 
    useUtilityClasses(ownerState), getAnchorOffset = React.useCallback(() => {
      if ("anchorPosition" === anchorReference) {
        return anchorPosition || console.error('MUI: You need to provide a `anchorPosition` prop when using \x3cPopover anchorReference\x3d"anchorPosition" /\x3e.'), anchorPosition;
      }
      var resolvedAnchorEl = resolveAnchorEl(anchorEl), anchorElement = resolvedAnchorEl && 1 === resolvedAnchorEl.nodeType ? resolvedAnchorEl : (0,_ownerDocument.default)(paperRef.current).body;
      resolvedAnchorEl = anchorElement.getBoundingClientRect();
      anchorElement = anchorElement.getBoundingClientRect();
      0 === anchorElement.top && 0 === anchorElement.left && 0 === anchorElement.right && 0 === anchorElement.bottom && console.warn("MUI: The `anchorEl` prop provided to the component is invalid.\nThe anchor element should be part of the document layout.\nMake sure the element is present in the document or that it's not display none.");
      return {top:resolvedAnchorEl.top + getOffsetTop(resolvedAnchorEl, anchorOrigin.vertical), left:resolvedAnchorEl.left + getOffsetLeft(resolvedAnchorEl, anchorOrigin.horizontal)};
    }, [anchorEl, anchorOrigin.horizontal, anchorOrigin.vertical, anchorPosition, anchorReference]), getTransformOrigin = React.useCallback(elemRect => ({vertical:getOffsetTop(elemRect, transformOrigin.vertical), horizontal:getOffsetLeft(elemRect, transformOrigin.horizontal)}), [transformOrigin.horizontal, transformOrigin.vertical]), getPositioningStyle = React.useCallback(element => {
      var elemRect = {width:element.offsetWidth, height:element.offsetHeight};
      element = getTransformOrigin(elemRect);
      if ("none" === anchorReference) {
        return {top:null, left:null, transformOrigin:getTransformOriginValue(element)};
      }
      var anchorOffset = getAnchorOffset();
      let top = anchorOffset.top - element.vertical;
      anchorOffset = anchorOffset.left - element.horizontal;
      var bottom = top + elemRect.height;
      const right = anchorOffset + elemRect.width;
      var containerWindow = (0,_ownerWindow.default)(resolveAnchorEl(anchorEl));
      const heightThreshold = containerWindow.innerHeight - marginThreshold;
      containerWindow = containerWindow.innerWidth - marginThreshold;
      null !== marginThreshold && top < marginThreshold ? (bottom = top - marginThreshold, top -= bottom, element.vertical += bottom) : null !== marginThreshold && bottom > heightThreshold && (bottom -= heightThreshold, top -= bottom, element.vertical += bottom);
      elemRect.height > heightThreshold && elemRect.height && heightThreshold && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${elemRect.height - heightThreshold}px).`, "Please consider adding a `max-height` to improve the user-experience."].join("\n"));
      null !== marginThreshold && anchorOffset < marginThreshold ? (elemRect = anchorOffset - marginThreshold, anchorOffset -= elemRect, element.horizontal += elemRect) : right > containerWindow && (elemRect = right - containerWindow, anchorOffset -= elemRect, element.horizontal += elemRect);
      return {top:`${Math.round(top)}px`, left:`${Math.round(anchorOffset)}px`, transformOrigin:getTransformOriginValue(element)};
    }, [anchorEl, anchorReference, getAnchorOffset, getTransformOrigin, marginThreshold]), [isPositioned, setIsPositioned] = React.useState(open), setPositioningStyles = React.useCallback(() => {
      const element = paperRef.current;
      if (element) {
        var positioning = getPositioningStyle(element);
        null !== positioning.top && (element.style.top = positioning.top);
        null !== positioning.left && (element.style.left = positioning.left);
        element.style.transformOrigin = positioning.transformOrigin;
        setIsPositioned(!0);
      }
    }, [getPositioningStyle]);
    React.useEffect(() => {
      disableScrollLock && window.addEventListener("scroll", setPositioningStyles);
      return () => window.removeEventListener("scroll", setPositioningStyles);
    }, [anchorEl, disableScrollLock, setPositioningStyles]);
    React.useEffect(() => {
      open && setPositioningStyles();
    });
    React.useImperativeHandle(action, () => open ? {updatePosition:() => {
      setPositioningStyles();
    }} : null, [open, setPositioningStyles]);
    React.useEffect(() => {
      if (open) {
        var handleResize = (0,_debounce.default)(() => {
          setPositioningStyles();
        }), containerWindow = (0,_ownerWindow.default)(anchorEl);
        containerWindow.addEventListener("resize", handleResize);
        return () => {
          handleResize.clear();
          containerWindow.removeEventListener("resize", handleResize);
        };
      }
    }, [anchorEl, open, setPositioningStyles]);
    _slotProps$paper = transitionDurationProp;
    "auto" !== transitionDurationProp || TransitionComponent.muiSupportAuto || (_slotProps$paper = void 0);
    const container = containerProp || (anchorEl ? (0,_ownerDocument.default)(resolveAnchorEl(anchorEl)).body : void 0);
    props = null != (_slots$root = null == slots ? void 0 : slots.root) ? _slots$root : PopoverRoot;
    _slots$root = null != (_slots$paper = null == slots ? void 0 : slots.paper) ? _slots$paper : PopoverPaper;
    _slots$paper = (0,_utils.useSlotProps)({elementType:_slots$root, externalSlotProps:(0,_extends2.default)({}, externalPaperSlotProps, {style:isPositioned ? externalPaperSlotProps.style : (0,_extends2.default)({}, externalPaperSlotProps.style, {opacity:0})}), additionalProps:{elevation, ref:handlePaperRef}, ownerState, className:(0,_clsx.default)(classes.paper, null == externalPaperSlotProps ? void 0 : externalPaperSlotProps.className)});
    other = (0,_utils.useSlotProps)({elementType:props, externalSlotProps:(null == slotProps ? void 0 : slotProps.root) || {}, externalForwardedProps:other, additionalProps:{ref, slotProps:{backdrop:{invisible:!0}}, container, open}, ownerState, className:(0,_clsx.default)(classes.root, className)});
    ({slotProps:ref} = other);
    other = (0,_objectWithoutPropertiesLoose2.default)(other, _excluded3);
    return (0,_jsxRuntime.jsx)(props, (0,_extends2.default)({}, other, !(0,_utils.isHostComponent)(props) && {slotProps:ref, disableScrollLock}, {children:(0,_jsxRuntime.jsx)(TransitionComponent, (0,_extends2.default)({appear:!0, in:open, onEntering:(element, isAppearing) => {
      onEntering && onEntering(element, isAppearing);
      setPositioningStyles();
    }, onExited:() => {
      setIsPositioned(!1);
    }, timeout:_slotProps$paper}, inProps, {children:(0,_jsxRuntime.jsx)(_slots$root, (0,_extends2.default)({}, _slots$paper, {children}))}))}));
  });
  require.propTypes = {action:_refType.default, anchorEl:(0,_chainPropTypes.default)(global.default.oneOfType([module.default, global.default.func]), props => {
    if (props.open && (!props.anchorReference || "anchorEl" === props.anchorReference)) {
      if ((props = resolveAnchorEl(props.anchorEl)) && 1 === props.nodeType) {
        if (props = props.getBoundingClientRect(), 0 === props.top && 0 === props.left && 0 === props.right && 0 === props.bottom) {
          return Error("MUI: The `anchorEl` prop provided to the component is invalid.\nThe anchor element should be part of the document layout.\nMake sure the element is present in the document or that it's not display none.");
        }
      } else {
        return Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${props}\` instead.`].join("\n"));
      }
    }
    return null;
  }), anchorOrigin:global.default.shape({horizontal:global.default.oneOfType([global.default.oneOf(["center", "left", "right"]), global.default.number]).isRequired, vertical:global.default.oneOfType([global.default.oneOf(["bottom", "center", "top"]), global.default.number]).isRequired}), anchorPosition:global.default.shape({left:global.default.number.isRequired, top:global.default.number.isRequired}), anchorReference:global.default.oneOf(["anchorEl", "anchorPosition", "none"]), children:global.default.node, 
  classes:global.default.object, className:global.default.string, container:global.default.oneOfType([module.default, global.default.func]), disableScrollLock:global.default.bool, elevation:_integerPropType.default, marginThreshold:global.default.number, onClose:global.default.func, open:global.default.bool.isRequired, PaperProps:global.default.shape({component:_elementTypeAcceptingRef.default}), slotProps:global.default.shape({paper:global.default.oneOfType([global.default.func, global.default.object]), 
  root:global.default.oneOfType([global.default.func, global.default.object])}), slots:global.default.shape({paper:global.default.elementType, root:global.default.elementType}), sx:global.default.oneOfType([global.default.arrayOf(global.default.oneOfType([global.default.func, global.default.object, global.default.bool])), global.default.func, global.default.object]), transformOrigin:global.default.shape({horizontal:global.default.oneOfType([global.default.oneOf(["center", "left", "right"]), global.default.number]).isRequired, 
  vertical:global.default.oneOfType([global.default.oneOf(["bottom", "center", "top"]), global.default.number]).isRequired}), TransitionComponent:global.default.elementType, transitionDuration:global.default.oneOfType([global.default.oneOf(["auto"]), global.default.number, global.default.shape({appear:global.default.number, enter:global.default.number, exit:global.default.number})]), TransitionProps:global.default.object};
  exports.default = require;
};

//# sourceMappingURL=module$node_modules$$mui$material$node$Popover$Popover.js.map
