{
"version":3,
"file":"module$node_modules$$mui$x_date_pickers$node$internals$hooks$useField$useFieldV7TextField.js",
"lineCount":170,
"mappings":"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",
"sources":["node_modules/@mui/x-date-pickers/node/internals/hooks/useField/useFieldV7TextField.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$x_date_pickers$node$internals$hooks$useField$useFieldV7TextField\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useFieldV7TextField = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useForkRef = _interopRequireDefault(require(\"@mui/utils/useForkRef\"));\nvar _useEventCallback = _interopRequireDefault(require(\"@mui/utils/useEventCallback\"));\nvar _useEnhancedEffect = _interopRequireDefault(require(\"@mui/utils/useEnhancedEffect\"));\nvar _useId = _interopRequireDefault(require(\"@mui/utils/useId\"));\nvar _useField = require(\"./useField.utils\");\nvar _utils = require(\"../../utils/utils\");\nvar _useUtils = require(\"../useUtils\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nconst useFieldV7TextField = params => {\n  const {\n    internalProps: {\n      disabled,\n      readOnly = false\n    },\n    forwardedProps: {\n      sectionListRef: inSectionListRef,\n      onBlur,\n      onClick,\n      onFocus,\n      onInput,\n      onPaste,\n      focused: focusedProp,\n      autoFocus = false\n    },\n    fieldValueManager,\n    applyCharacterEditing,\n    resetCharacterQuery,\n    setSelectedSections,\n    parsedSelectedSections,\n    state,\n    clearActiveSection,\n    clearValue,\n    updateSectionValue,\n    updateValueFromValueStr,\n    sectionOrder,\n    areAllSectionsEmpty,\n    sectionsValueBoundaries\n  } = params;\n  const sectionListRef = React.useRef(null);\n  const handleSectionListRef = (0, _useForkRef.default)(inSectionListRef, sectionListRef);\n  const localeText = (0, _useUtils.useLocaleText)();\n  const utils = (0, _useUtils.useUtils)();\n  const id = (0, _useId.default)();\n  const [focused, setFocused] = React.useState(false);\n  const interactions = React.useMemo(() => ({\n    syncSelectionToDOM: () => {\n      if (!sectionListRef.current) {\n        return;\n      }\n      const selection = document.getSelection();\n      if (!selection) {\n        return;\n      }\n      if (parsedSelectedSections == null) {\n        // If the selection contains an element inside the field, we reset it.\n        if (selection.rangeCount > 0 && sectionListRef.current.getRoot().contains(selection.getRangeAt(0).startContainer)) {\n          selection.removeAllRanges();\n        }\n        if (focused) {\n          sectionListRef.current.getRoot().blur();\n        }\n        return;\n      }\n\n      // On multi input range pickers we want to update selection range only for the active input\n      if (!sectionListRef.current.getRoot().contains((0, _utils.getActiveElement)(document))) {\n        return;\n      }\n      const range = new window.Range();\n      let target;\n      if (parsedSelectedSections === 'all') {\n        target = sectionListRef.current.getRoot();\n      } else {\n        const section = state.sections[parsedSelectedSections];\n        if (section.type === 'empty') {\n          target = sectionListRef.current.getSectionContainer(parsedSelectedSections);\n        } else {\n          target = sectionListRef.current.getSectionContent(parsedSelectedSections);\n        }\n      }\n      range.selectNodeContents(target);\n      target.focus();\n      selection.removeAllRanges();\n      selection.addRange(range);\n    },\n    getActiveSectionIndexFromDOM: () => {\n      const activeElement = (0, _utils.getActiveElement)(document);\n      if (!activeElement || !sectionListRef.current || !sectionListRef.current.getRoot().contains(activeElement)) {\n        return null;\n      }\n      return sectionListRef.current.getSectionIndexFromDOMElement(activeElement);\n    },\n    focusField: (newSelectedSections = 0) => {\n      if (!sectionListRef.current) {\n        return;\n      }\n      const newParsedSelectedSections = (0, _useField.parseSelectedSections)(newSelectedSections, state.sections);\n      setFocused(true);\n      sectionListRef.current.getSectionContent(newParsedSelectedSections).focus();\n    },\n    setSelectedSections: newSelectedSections => {\n      if (!sectionListRef.current) {\n        return;\n      }\n      const newParsedSelectedSections = (0, _useField.parseSelectedSections)(newSelectedSections, state.sections);\n      const newActiveSectionIndex = newParsedSelectedSections === 'all' ? 0 : newParsedSelectedSections;\n      setFocused(newActiveSectionIndex !== null);\n      setSelectedSections(newSelectedSections);\n    },\n    isFieldFocused: () => {\n      const activeElement = (0, _utils.getActiveElement)(document);\n      return !!sectionListRef.current && sectionListRef.current.getRoot().contains(activeElement);\n    }\n  }), [parsedSelectedSections, setSelectedSections, state.sections, focused]);\n\n  /**\n   * If a section content has been updated with a value we don't want to keep,\n   * Then we need to imperatively revert it (we can't let React do it because the value did not change in his internal representation).\n   */\n  const revertDOMSectionChange = (0, _useEventCallback.default)(sectionIndex => {\n    if (!sectionListRef.current) {\n      return;\n    }\n    const section = state.sections[sectionIndex];\n    sectionListRef.current.getSectionContent(sectionIndex).innerHTML = section.value || section.placeholder;\n    interactions.syncSelectionToDOM();\n  });\n  const handleContainerClick = (0, _useEventCallback.default)((event, ...args) => {\n    // The click event on the clear button would propagate to the input, trigger this handler and result in a wrong section selection.\n    // We avoid this by checking if the call of `handleContainerClick` is actually intended, or a side effect.\n    if (event.isDefaultPrevented() || !sectionListRef.current) {\n      return;\n    }\n    setFocused(true);\n    onClick?.(event, ...args);\n    if (parsedSelectedSections === 'all') {\n      setTimeout(() => {\n        const cursorPosition = document.getSelection().getRangeAt(0).startOffset;\n        if (cursorPosition === 0) {\n          setSelectedSections(sectionOrder.startIndex);\n          return;\n        }\n        let sectionIndex = 0;\n        let cursorOnStartOfSection = 0;\n        while (cursorOnStartOfSection < cursorPosition && sectionIndex < state.sections.length) {\n          const section = state.sections[sectionIndex];\n          sectionIndex += 1;\n          cursorOnStartOfSection += `${section.startSeparator}${section.value || section.placeholder}${section.endSeparator}`.length;\n        }\n        setSelectedSections(sectionIndex - 1);\n      });\n    } else if (!focused) {\n      setFocused(true);\n      setSelectedSections(sectionOrder.startIndex);\n    } else {\n      const hasClickedOnASection = sectionListRef.current.getRoot().contains(event.target);\n      if (!hasClickedOnASection) {\n        setSelectedSections(sectionOrder.startIndex);\n      }\n    }\n  });\n  const handleContainerInput = (0, _useEventCallback.default)(event => {\n    onInput?.(event);\n    if (!sectionListRef.current || parsedSelectedSections !== 'all') {\n      return;\n    }\n    const target = event.target;\n    const keyPressed = target.textContent ?? '';\n    sectionListRef.current.getRoot().innerHTML = state.sections.map(section => `${section.startSeparator}${section.value || section.placeholder}${section.endSeparator}`).join('');\n    interactions.syncSelectionToDOM();\n    if (keyPressed.length === 0 || keyPressed.charCodeAt(0) === 10) {\n      resetCharacterQuery();\n      clearValue();\n      setSelectedSections('all');\n    } else if (keyPressed.length > 1) {\n      updateValueFromValueStr(keyPressed);\n    } else {\n      applyCharacterEditing({\n        keyPressed,\n        sectionIndex: 0\n      });\n    }\n  });\n  const handleContainerPaste = (0, _useEventCallback.default)(event => {\n    onPaste?.(event);\n    if (readOnly || parsedSelectedSections !== 'all') {\n      event.preventDefault();\n      return;\n    }\n    const pastedValue = event.clipboardData.getData('text');\n    event.preventDefault();\n    resetCharacterQuery();\n    updateValueFromValueStr(pastedValue);\n  });\n  const handleContainerFocus = (0, _useEventCallback.default)((...args) => {\n    onFocus?.(...args);\n    if (focused || !sectionListRef.current) {\n      return;\n    }\n    setFocused(true);\n    const isFocusInsideASection = sectionListRef.current.getSectionIndexFromDOMElement((0, _utils.getActiveElement)(document)) != null;\n    if (!isFocusInsideASection) {\n      setSelectedSections(sectionOrder.startIndex);\n    }\n  });\n  const handleContainerBlur = (0, _useEventCallback.default)((...args) => {\n    onBlur?.(...args);\n    setTimeout(() => {\n      if (!sectionListRef.current) {\n        return;\n      }\n      const activeElement = (0, _utils.getActiveElement)(document);\n      const shouldBlur = !sectionListRef.current.getRoot().contains(activeElement);\n      if (shouldBlur) {\n        setFocused(false);\n        setSelectedSections(null);\n      }\n    });\n  });\n  const getInputContainerClickHandler = (0, _useEventCallback.default)(sectionIndex => event => {\n    // The click event on the clear button would propagate to the input, trigger this handler and result in a wrong section selection.\n    // We avoid this by checking if the call to this function is actually intended, or a side effect.\n    if (event.isDefaultPrevented() || readOnly) {\n      return;\n    }\n    setSelectedSections(sectionIndex);\n  });\n  const handleInputContentMouseUp = (0, _useEventCallback.default)(event => {\n    // Without this, the browser will remove the selected when clicking inside an already-selected section.\n    event.preventDefault();\n  });\n  const getInputContentFocusHandler = (0, _useEventCallback.default)(sectionIndex => () => {\n    if (readOnly) {\n      return;\n    }\n    setSelectedSections(sectionIndex);\n  });\n  const handleInputContentPaste = (0, _useEventCallback.default)(event => {\n    // prevent default to avoid the input `onInput` handler being called\n    event.preventDefault();\n    if (readOnly || typeof parsedSelectedSections !== 'number') {\n      return;\n    }\n    const activeSection = state.sections[parsedSelectedSections];\n    const pastedValue = event.clipboardData.getData('text');\n    const lettersOnly = /^[a-zA-Z]+$/.test(pastedValue);\n    const digitsOnly = /^[0-9]+$/.test(pastedValue);\n    const digitsAndLetterOnly = /^(([a-zA-Z]+)|)([0-9]+)(([a-zA-Z]+)|)$/.test(pastedValue);\n    const isValidPastedValue = activeSection.contentType === 'letter' && lettersOnly || activeSection.contentType === 'digit' && digitsOnly || activeSection.contentType === 'digit-with-letter' && digitsAndLetterOnly;\n    if (isValidPastedValue) {\n      resetCharacterQuery();\n      updateSectionValue({\n        activeSection,\n        newSectionValue: pastedValue,\n        shouldGoToNextSection: true\n      });\n    }\n    // If the pasted value corresponds to a single section, but not the expected type, we skip the modification\n    else if (!lettersOnly && !digitsOnly) {\n      resetCharacterQuery();\n      updateValueFromValueStr(pastedValue);\n    }\n  });\n  const handleInputContentDragOver = (0, _useEventCallback.default)(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'none';\n  });\n  const handleInputContentInput = (0, _useEventCallback.default)(event => {\n    if (!sectionListRef.current) {\n      return;\n    }\n    const target = event.target;\n    const keyPressed = target.textContent ?? '';\n    const sectionIndex = sectionListRef.current.getSectionIndexFromDOMElement(target);\n    const section = state.sections[sectionIndex];\n    if (readOnly || !sectionListRef.current) {\n      revertDOMSectionChange(sectionIndex);\n      return;\n    }\n    if (keyPressed.length === 0) {\n      if (section.value === '') {\n        revertDOMSectionChange(sectionIndex);\n        return;\n      }\n      resetCharacterQuery();\n      clearActiveSection();\n      return;\n    }\n    applyCharacterEditing({\n      keyPressed,\n      sectionIndex\n    });\n\n    // The DOM value needs to remain the one React is expecting.\n    revertDOMSectionChange(sectionIndex);\n  });\n  (0, _useEnhancedEffect.default)(() => {\n    if (!focused || !sectionListRef.current) {\n      return;\n    }\n    if (parsedSelectedSections === 'all') {\n      sectionListRef.current.getRoot().focus();\n    } else if (typeof parsedSelectedSections === 'number') {\n      const domElement = sectionListRef.current.getSectionContent(parsedSelectedSections);\n      if (domElement) {\n        domElement.focus();\n      }\n    }\n  }, [parsedSelectedSections, focused]);\n  const sectionBoundaries = React.useMemo(() => {\n    return state.sections.reduce((acc, next) => {\n      acc[next.type] = sectionsValueBoundaries[next.type]({\n        currentDate: null,\n        contentType: next.contentType,\n        format: next.format\n      });\n      return acc;\n    }, {});\n  }, [sectionsValueBoundaries, state.sections]);\n  const isContainerEditable = parsedSelectedSections === 'all';\n  const elements = React.useMemo(() => {\n    return state.sections.map((section, index) => {\n      const isEditable = !isContainerEditable && !disabled && !readOnly;\n      return {\n        container: {\n          'data-sectionindex': index,\n          onClick: getInputContainerClickHandler(index)\n        },\n        content: {\n          tabIndex: isContainerEditable || index > 0 ? -1 : 0,\n          contentEditable: !isContainerEditable && !disabled && !readOnly,\n          role: 'spinbutton',\n          id: `${id}-${section.type}`,\n          'aria-labelledby': `${id}-${section.type}`,\n          'aria-readonly': readOnly,\n          'aria-valuenow': (0, _useField.getSectionValueNow)(section, utils),\n          'aria-valuemin': sectionBoundaries[section.type].minimum,\n          'aria-valuemax': sectionBoundaries[section.type].maximum,\n          'aria-valuetext': section.value ? (0, _useField.getSectionValueText)(section, utils) : localeText.empty,\n          'aria-label': localeText[section.type],\n          'aria-disabled': disabled,\n          spellCheck: isEditable ? false : undefined,\n          autoCapitalize: isEditable ? 'off' : undefined,\n          autoCorrect: isEditable ? 'off' : undefined,\n          [parseInt(React.version, 10) >= 17 ? 'enterKeyHint' : 'enterkeyhint']: isEditable ? 'next' : undefined,\n          children: section.value || section.placeholder,\n          onInput: handleInputContentInput,\n          onPaste: handleInputContentPaste,\n          onFocus: getInputContentFocusHandler(index),\n          onDragOver: handleInputContentDragOver,\n          onMouseUp: handleInputContentMouseUp,\n          inputMode: section.contentType === 'letter' ? 'text' : 'numeric'\n        },\n        before: {\n          children: section.startSeparator\n        },\n        after: {\n          children: section.endSeparator\n        }\n      };\n    });\n  }, [state.sections, getInputContentFocusHandler, handleInputContentPaste, handleInputContentDragOver, handleInputContentInput, getInputContainerClickHandler, handleInputContentMouseUp, disabled, readOnly, isContainerEditable, localeText, utils, sectionBoundaries, id]);\n  const handleValueStrChange = (0, _useEventCallback.default)(event => {\n    updateValueFromValueStr(event.target.value);\n  });\n  const valueStr = React.useMemo(() => areAllSectionsEmpty ? '' : fieldValueManager.getV7HiddenInputValueFromSections(state.sections), [areAllSectionsEmpty, state.sections, fieldValueManager]);\n  React.useEffect(() => {\n    if (sectionListRef.current == null) {\n      throw new Error(['MUI X: The `sectionListRef` prop has not been initialized by `PickersSectionList`', 'You probably tried to pass a component to the `textField` slot that contains an `<input />` element instead of a `PickersSectionList`.', '', 'If you want to keep using an `<input />` HTML element for the editing, please remove the `enableAccessibleFieldDOMStructure` prop from your picker or field component:', '', '<DatePicker slots={{ textField: MyCustomTextField }} />', '', 'Learn more about the field accessible DOM structure on the MUI documentation: https://mui.com/x/react-date-pickers/fields/#fields-to-edit-a-single-element'].join('\\n'));\n    }\n    if (autoFocus && sectionListRef.current) {\n      sectionListRef.current.getSectionContent(sectionOrder.startIndex).focus();\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return {\n    interactions,\n    returnedValue: {\n      // Forwarded\n      autoFocus,\n      readOnly,\n      focused: focusedProp ?? focused,\n      sectionListRef: handleSectionListRef,\n      onBlur: handleContainerBlur,\n      onClick: handleContainerClick,\n      onFocus: handleContainerFocus,\n      onInput: handleContainerInput,\n      onPaste: handleContainerPaste,\n      // Additional\n      enableAccessibleFieldDOMStructure: true,\n      elements,\n      // TODO v7: Try to set to undefined when there is a section selected.\n      tabIndex: parsedSelectedSections === 0 ? -1 : 0,\n      contentEditable: isContainerEditable,\n      value: valueStr,\n      onChange: handleValueStrChange,\n      areAllSectionsEmpty\n    }\n  };\n};\nexports.useFieldV7TextField = useFieldV7TextField;\n};"],
"names":["shadow$provide","global","require","module","exports","_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireDefault","Object","defineProperty","value","useFieldV7TextField","React","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_useForkRef","_useEventCallback","_useEnhancedEffect","_useId","_useField","_utils","_useUtils","params","disabled","readOnly","inSectionListRef","onBlur","onClick","onFocus","onInput","onPaste","focusedProp","autoFocus","fieldValueManager","applyCharacterEditing","resetCharacterQuery","setSelectedSections","parsedSelectedSections","state","clearActiveSection","clearValue","updateSectionValue","updateValueFromValueStr","sectionOrder","areAllSectionsEmpty","sectionsValueBoundaries","sectionListRef","useRef","handleSectionListRef","localeText","useLocaleText","utils","useUtils","id","focused","setFocused","useState","interactions","useMemo","syncSelectionToDOM","current","selection","document","getSelection","rangeCount","getRoot","contains","getRangeAt","startContainer","removeAllRanges","blur","getActiveElement","range","window","Range","target","sections","section","type","getSectionContainer","getSectionContent","selectNodeContents","focus","addRange","getActiveSectionIndexFromDOM","activeElement","getSectionIndexFromDOMElement","focusField","newSelectedSections","newParsedSelectedSections","parseSelectedSections","newActiveSectionIndex","isFieldFocused","revertDOMSectionChange","sectionIndex","innerHTML","placeholder","handleContainerClick","event","args","isDefaultPrevented","setTimeout","cursorPosition","startOffset","startIndex","cursorOnStartOfSection","length","startSeparator","endSeparator","hasClickedOnASection","handleContainerInput","keyPressed","textContent","map","join","charCodeAt","handleContainerPaste","preventDefault","pastedValue","clipboardData","getData","handleContainerFocus","handleContainerBlur","shouldBlur","getInputContainerClickHandler","handleInputContentMouseUp","getInputContentFocusHandler","handleInputContentPaste","activeSection","lettersOnly","test","digitsOnly","digitsAndLetterOnly","contentType","newSectionValue","shouldGoToNextSection","handleInputContentDragOver","dataTransfer","dropEffect","handleInputContentInput","domElement","sectionBoundaries","reduce","acc","next","currentDate","format","isContainerEditable","elements","index","isEditable","container","content","tabIndex","contentEditable","role","getSectionValueNow","minimum","maximum","getSectionValueText","empty","spellCheck","undefined","autoCapitalize","autoCorrect","parseInt","version","children","onDragOver","onMouseUp","inputMode","before","after","handleValueStrChange","valueStr","getV7HiddenInputValueFromSections","useEffect","Error","returnedValue","enableAccessibleFieldDOMStructure","onChange"]
}
