shadow$provide.module$node_modules$$mui$base$node$ClickAwayListener$ClickAwayListener = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  function ClickAwayListener(props) {
    const {children, disableReactTree = !1, mouseEvent = "onClick", onClickAway, touchEvent = "onTouchEnd"} = props, movedRef = React.useRef(!1), nodeRef = React.useRef(null), activatedRef = React.useRef(!1), syntheticEventRef = React.useRef(!1);
    React.useEffect(() => {
      setTimeout(() => {
        activatedRef.current = !0;
      }, 0);
      return () => {
        activatedRef.current = !1;
      };
    }, []);
    var handleRef = (0,_utils.unstable_useForkRef)(children.ref, nodeRef);
    const handleClickAway = (0,_utils.unstable_useEventCallback)(event => {
      const insideReactTree = syntheticEventRef.current;
      syntheticEventRef.current = !1;
      const doc = (0,_utils.unstable_ownerDocument)(nodeRef.current);
      !activatedRef.current || !nodeRef.current || "clientX" in event && (doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY) || (movedRef.current ? movedRef.current = !1 : (event.composedPath ? -1 < event.composedPath().indexOf(nodeRef.current) : !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target)) || !disableReactTree && insideReactTree || onClickAway(event));
    });
    props = handlerName => event => {
      syntheticEventRef.current = !0;
      const childrenPropsHandler = children.props[handlerName];
      childrenPropsHandler && childrenPropsHandler(event);
    };
    handleRef = {ref:handleRef};
    !1 !== touchEvent && (handleRef[touchEvent] = props(touchEvent));
    React.useEffect(() => {
      if (!1 !== touchEvent) {
        const mappedTouchEvent = touchEvent.substring(2).toLowerCase(), doc = (0,_utils.unstable_ownerDocument)(nodeRef.current), handleTouchMove = () => {
          movedRef.current = !0;
        };
        doc.addEventListener(mappedTouchEvent, handleClickAway);
        doc.addEventListener("touchmove", handleTouchMove);
        return () => {
          doc.removeEventListener(mappedTouchEvent, handleClickAway);
          doc.removeEventListener("touchmove", handleTouchMove);
        };
      }
    }, [handleClickAway, touchEvent]);
    !1 !== mouseEvent && (handleRef[mouseEvent] = props(mouseEvent));
    React.useEffect(() => {
      if (!1 !== mouseEvent) {
        const mappedMouseEvent = mouseEvent.substring(2).toLowerCase(), doc = (0,_utils.unstable_ownerDocument)(nodeRef.current);
        doc.addEventListener(mappedMouseEvent, handleClickAway);
        return () => {
          doc.removeEventListener(mappedMouseEvent, handleClickAway);
        };
      }
    }, [handleClickAway, mouseEvent]);
    return (0,_jsxRuntime.jsx)(React.Fragment, {children:React.cloneElement(children, handleRef)});
  }
  "use client";
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.ClickAwayListener = ClickAwayListener;
  var React = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index"));
  exports = global(require("module$node_modules$prop_types$index"));
  var _utils = require("module$node_modules$$mui$utils$node$index"), _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  ClickAwayListener.propTypes = {children:_utils.elementAcceptingRef.isRequired, disableReactTree:exports.default.bool, mouseEvent:exports.default.oneOf(["onClick", "onMouseDown", "onMouseUp", "onPointerDown", "onPointerUp", !1]), onClickAway:exports.default.func.isRequired, touchEvent:exports.default.oneOf(["onTouchEnd", "onTouchStart", !1])};
  ClickAwayListener.propTypes = (0,_utils.exactProp)(ClickAwayListener.propTypes);
};

//# sourceMappingURL=module$node_modules$$mui$base$node$ClickAwayListener$ClickAwayListener.js.map
