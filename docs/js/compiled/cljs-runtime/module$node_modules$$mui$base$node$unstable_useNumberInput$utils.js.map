{
"version":3,
"file":"module$node_modules$$mui$base$node$unstable_useNumberInput$utils.js",
"lineCount":16,
"mappings":"AAAAA,cAAA,CAAA,gEAAA,GAAqF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAG7HC,QAAOC,CAAAA,cAAP,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAH,SAAQI,CAAAA,aAAR,GAGAA,QAAsB,CAACC,GAAD,EAAMC,GAAA,GAAMC,MAAOC,CAAAA,gBAAnB,EAAqCC,GAAA,GAAMF,MAAOG,CAAAA,gBAAlD,EAAoEC,QAAA,GAAWC,GAA/E,CAAoF;AACxG,QAAIL,MAAOM,CAAAA,KAAP,CAAaF,QAAb,CAAJ;AACE,aAAO,GAAIG,MAAOC,CAAAA,KAAX,EAAkBV,GAAlB,EAAuBC,GAAvB,EAA4BG,GAA5B,CAAP;AADF;AAGMO,YAAAA,GAAOL,QAAPK,IAAmB,CAAnBA;AACN,UAAMC,YAAYZ,GAAZY,GAAkBD,QAAxB,EACME,aAAaC,IAAKC,CAAAA,IAAL,CAAUH,SAAV,CADnB;AAEA,WAAIE,IAAKE,CAAAA,GAAL,CAASJ,SAAT,CAAJ,GAA0BD,QAA1B,GAAiC,CAAjC,GACS,GAAIF,MAAOC,CAAAA,KAAX,EAAkBV,GAAlB,GAAwBa,UAAxB,IAAsCF,QAAtC,GAA6CG,IAAKE,CAAAA,GAAL,CAASJ,SAAT,CAA7C,GAAmEX,GAAnE,EAAwEG,GAAxE,CADT,GAGO,GAAIK,MAAOC,CAAAA,KAAX,EAAkBV,GAAlB,GAAwBa,UAAxB,GAAqCC,IAAKE,CAAAA,GAAL,CAASJ,SAAT,CAArC,EAA0DX,GAA1D,EAA+DG,GAA/D,CAHP;AAPwG,GAH1G;AACAT,SAAQsB,CAAAA,QAAR,GAcAA,QAAiB,CAACjB,GAAD,CAAM;AACrB,WAAsB,QAAtB,KAAO,MAAOA,IAAd,IAAkC,CAACE,MAAOM,CAAAA,KAAP,CAAaR,GAAb,CAAnC,IAAwDE,MAAOgB,CAAAA,QAAP,CAAgBlB,GAAhB,CAAxD;AADqB,GAdvB;AACA,MAAIS,SAAShB,OAAA,CAAQ,2CAAR,CAAb;AAR6H,CAA7H;;",
"sources":["node_modules/@mui/base/node/unstable_useNumberInput/utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$base$node$unstable_useNumberInput$utils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clampStepwise = clampStepwise;\nexports.isNumber = isNumber;\nvar _utils = require(\"@mui/utils\");\nfunction clampStepwise(val, min = Number.MIN_SAFE_INTEGER, max = Number.MAX_SAFE_INTEGER, stepProp = NaN) {\n  if (Number.isNaN(stepProp)) {\n    return (0, _utils.clamp)(val, min, max);\n  }\n  const step = stepProp || 1;\n  const remainder = val % step;\n  const positivity = Math.sign(remainder);\n  if (Math.abs(remainder) > step / 2) {\n    return (0, _utils.clamp)(val + positivity * (step - Math.abs(remainder)), min, max);\n  }\n  return (0, _utils.clamp)(val - positivity * Math.abs(remainder), min, max);\n}\nfunction isNumber(val) {\n  return typeof val === 'number' && !Number.isNaN(val) && Number.isFinite(val);\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","clampStepwise","val","min","Number","MIN_SAFE_INTEGER","max","MAX_SAFE_INTEGER","stepProp","NaN","isNaN","_utils","clamp","step","remainder","positivity","Math","sign","abs","isNumber","isFinite"]
}
