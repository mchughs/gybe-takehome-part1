shadow$provide.module$node_modules$$mui$x_date_pickers$node$internals$components$PickersPopper = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  function useClickAwayListener(active, onClickAway) {
    const movedRef = React.useRef(!1), syntheticEventRef = React.useRef(!1), nodeRef = React.useRef(null), activatedRef = React.useRef(!1);
    React.useEffect(() => {
      function armClickAwayListener() {
        activatedRef.current = !0;
      }
      if (active) {
        return document.addEventListener("mousedown", armClickAwayListener, !0), document.addEventListener("touchstart", armClickAwayListener, !0), () => {
          document.removeEventListener("mousedown", armClickAwayListener, !0);
          document.removeEventListener("touchstart", armClickAwayListener, !0);
          activatedRef.current = !1;
        };
      }
    }, [active]);
    const handleClickAway = (0,_utils2.unstable_useEventCallback)(event => {
      if (activatedRef.current) {
        var insideReactTree = syntheticEventRef.current;
        syntheticEventRef.current = !1;
        var doc = (0,_utils2.unstable_ownerDocument)(nodeRef.current);
        !nodeRef.current || "clientX" in event && (doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY) || (movedRef.current ? movedRef.current = !1 : (event.composedPath ? -1 < event.composedPath().indexOf(nodeRef.current) : !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target)) || insideReactTree || onClickAway(event));
      }
    }), handleSynthetic = () => {
      syntheticEventRef.current = !0;
    };
    React.useEffect(() => {
      if (active) {
        const doc = (0,_utils2.unstable_ownerDocument)(nodeRef.current), handleTouchMove = () => {
          movedRef.current = !0;
        };
        doc.addEventListener("touchstart", handleClickAway);
        doc.addEventListener("touchmove", handleTouchMove);
        return () => {
          doc.removeEventListener("touchstart", handleClickAway);
          doc.removeEventListener("touchmove", handleTouchMove);
        };
      }
    }, [active, handleClickAway]);
    React.useEffect(() => {
      if (active) {
        const doc = (0,_utils2.unstable_ownerDocument)(nodeRef.current);
        doc.addEventListener("click", handleClickAway);
        return () => {
          doc.removeEventListener("click", handleClickAway);
          syntheticEventRef.current = !1;
        };
      }
    }, [active, handleClickAway]);
    return [nodeRef, handleSynthetic, handleSynthetic];
  }
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.PickersPopper = function(inProps) {
    const props = (0,_styles.useThemeProps)({props:inProps, name:"MuiPickersPopper"}), {anchorEl, children, containerRef = null, shouldRestoreFocus, onBlur, onDismiss, open, role, placement, slots, slotProps, reduceAnimations:inReduceAnimations} = props;
    React.useEffect(() => {
      function handleKeyDown(nativeEvent) {
        open && "Escape" === nativeEvent.key && onDismiss();
      }
      document.addEventListener("keydown", handleKeyDown);
      return () => {
        document.removeEventListener("keydown", handleKeyDown);
      };
    }, [onDismiss, open]);
    const lastFocusedElementRef = React.useRef(null);
    React.useEffect(() => {
      "tooltip" === role || shouldRestoreFocus && !shouldRestoreFocus() || (open ? lastFocusedElementRef.current = (0,_utils3.getActiveElement)(document) : lastFocusedElementRef.current && lastFocusedElementRef.current instanceof HTMLElement && setTimeout(() => {
        lastFocusedElementRef.current instanceof HTMLElement && lastFocusedElementRef.current.focus();
      }));
    }, [open, role, shouldRestoreFocus]);
    const [clickAwayRef, onPaperClick, onPaperTouchStart] = useClickAwayListener(open, onBlur ?? onDismiss);
    inProps = React.useRef(null);
    inProps = (0,_utils2.unstable_useForkRef)(inProps, containerRef);
    const handlePaperRef = (0,_utils2.unstable_useForkRef)(inProps, clickAwayRef), classes = useUtilityClasses(props);
    inProps = (0,_useDefaultReduceAnimations.useDefaultReduceAnimations)();
    const Transition = slots?.desktopTransition ?? inReduceAnimations ?? inProps ? _Fade.default : _Grow.default, FocusTrap = slots?.desktopTrapFocus ?? _Unstable_TrapFocus.default, Paper = slots?.desktopPaper ?? PickersPopperPaper;
    inProps = slots?.popper ?? PickersPopperRoot;
    const popperProps = (0,_utils.useSlotProps)({elementType:inProps, externalSlotProps:slotProps?.popper, additionalProps:{transition:!0, role, open, anchorEl, placement, onKeyDown:event => {
      "Escape" === event.key && (event.stopPropagation(), onDismiss());
    }}, className:classes.root, ownerState:props});
    return (0,_jsxRuntime.jsx)(inProps, (0,_extends2.default)({}, popperProps, {children:({TransitionProps, placement:popperPlacement}) => (0,_jsxRuntime.jsx)(FocusTrap, (0,_extends2.default)({open, disableAutoFocus:!0, disableRestoreFocus:!0, disableEnforceFocus:"tooltip" === role, isEnabled:() => !0}, slotProps?.desktopTrapFocus, {children:(0,_jsxRuntime.jsx)(Transition, (0,_extends2.default)({}, TransitionProps, slotProps?.desktopTransition, {children:(0,_jsxRuntime.jsx)(PickersPopperPaperWrapper, 
    {PaperComponent:Paper, ownerState:props, popperPlacement, ref:handlePaperRef, onPaperClick, onPaperTouchStart, paperClasses:classes.paper, paperSlotProps:slotProps?.desktopPaper, children})}))}))}));
  };
  var _objectWithoutPropertiesLoose2 = global(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")), _extends2 = global(require("module$node_modules$$babel$runtime$helpers$extends")), React = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index")), _utils = require("module$node_modules$$mui$base$node$utils$index"), _Grow = global(require("module$node_modules$$mui$material$node$Grow$index")), _Fade = global(require("module$node_modules$$mui$material$node$Fade$index"));
  exports = global(require("module$node_modules$$mui$material$node$Paper$index"));
  module = global(require("module$node_modules$$mui$material$node$Popper$index"));
  var _Unstable_TrapFocus = global(require("module$node_modules$$mui$material$node$Unstable_TrapFocus$index")), _utils2 = require("module$node_modules$$mui$utils$node$index"), _styles = require("module$node_modules$$mui$material$node$styles$index"), _pickersPopperClasses = require("module$node_modules$$mui$x_date_pickers$node$internals$components$pickersPopperClasses"), _utils3 = require("module$node_modules$$mui$x_date_pickers$node$internals$utils$utils"), _useDefaultReduceAnimations = require("module$node_modules$$mui$x_date_pickers$node$internals$hooks$useDefaultReduceAnimations"), 
  _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  const _excluded = "PaperComponent popperPlacement ownerState children paperSlotProps paperClasses onPaperClick onPaperTouchStart".split(" "), useUtilityClasses = ownerState => {
    ({classes:ownerState} = ownerState);
    return (0,_utils2.unstable_composeClasses)({root:["root"], paper:["paper"]}, _pickersPopperClasses.getPickersPopperUtilityClass, ownerState);
  }, PickersPopperRoot = (0,_styles.styled)(module.default, {name:"MuiPickersPopper", slot:"Root", overridesResolver:(_, styles) => styles.root})(({theme}) => ({zIndex:theme.zIndex.modal})), PickersPopperPaper = (0,_styles.styled)(exports.default, {name:"MuiPickersPopper", slot:"Paper", overridesResolver:(_, styles) => styles.paper})(({ownerState}) => (0,_extends2.default)({outline:0, transformOrigin:"top center"}, ownerState.placement.includes("top") && {transformOrigin:"bottom center"})), PickersPopperPaperWrapper = 
  React.forwardRef((props, ref) => {
    const {PaperComponent, popperPlacement, ownerState:inOwnerState, children, paperSlotProps, paperClasses, onPaperClick, onPaperTouchStart} = props;
    props = (0,_objectWithoutPropertiesLoose2.default)(props, _excluded);
    const ownerState = (0,_extends2.default)({}, inOwnerState, {placement:popperPlacement}), paperProps = (0,_utils.useSlotProps)({elementType:PaperComponent, externalSlotProps:paperSlotProps, additionalProps:{tabIndex:-1, elevation:8, ref}, className:paperClasses, ownerState});
    return (0,_jsxRuntime.jsx)(PaperComponent, (0,_extends2.default)({}, props, paperProps, {onClick:event => {
      onPaperClick(event);
      paperProps.onClick?.(event);
    }, onTouchStart:event => {
      onPaperTouchStart(event);
      paperProps.onTouchStart?.(event);
    }, ownerState, children}));
  });
};

//# sourceMappingURL=module$node_modules$$mui$x_date_pickers$node$internals$components$PickersPopper.js.map
