{
"version":3,
"file":"module$node_modules$$mui$x_date_pickers$node$internals$hooks$useField$useFieldCharacterEditing.js",
"lineCount":127,
"mappings":"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",
"sources":["node_modules/@mui/x-date-pickers/node/internals/hooks/useField/useFieldCharacterEditing.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$x_date_pickers$node$internals$hooks$useField$useFieldCharacterEditing\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useFieldCharacterEditing = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useEventCallback = _interopRequireDefault(require(\"@mui/utils/useEventCallback\"));\nvar _useUtils = require(\"../useUtils\");\nvar _useField = require(\"./useField.utils\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n/**\n * The letter editing and the numeric editing each define a `CharacterEditingApplier`.\n * This function decides what the new section value should be and if the focus should switch to the next section.\n *\n * If it returns `null`, then the section value is not updated and the focus does not move.\n */\n\n/**\n * Function called by `applyQuery` which decides:\n * - what is the new section value ?\n * - should the query used to get this value be stored for the next key press ?\n *\n * If it returns `{ sectionValue: string; shouldGoToNextSection: boolean }`,\n * Then we store the query and update the section with the new value.\n *\n * If it returns `{ saveQuery: true` },\n * Then we store the query and don't update the section.\n *\n * If it returns `{ saveQuery: false },\n * Then we do nothing.\n */\n\nconst QUERY_LIFE_DURATION_MS = 5000;\nconst isQueryResponseWithoutValue = response => response.saveQuery != null;\n\n/**\n * Update the active section value when the user pressed a key that is not a navigation key (arrow key for example).\n * This hook has two main editing behaviors\n *\n * 1. The numeric editing when the user presses a digit\n * 2. The letter editing when the user presses another key\n */\nconst useFieldCharacterEditing = ({\n  sections,\n  updateSectionValue,\n  sectionsValueBoundaries,\n  localizedDigits,\n  setTempAndroidValueStr,\n  timezone\n}) => {\n  const utils = (0, _useUtils.useUtils)();\n  const [query, setQuery] = React.useState(null);\n  const resetQuery = (0, _useEventCallback.default)(() => setQuery(null));\n  React.useEffect(() => {\n    if (query != null && sections[query.sectionIndex]?.type !== query.sectionType) {\n      resetQuery();\n    }\n  }, [sections, query, resetQuery]);\n  React.useEffect(() => {\n    if (query != null) {\n      const timeout = setTimeout(() => resetQuery(), QUERY_LIFE_DURATION_MS);\n      return () => {\n        clearTimeout(timeout);\n      };\n    }\n    return () => {};\n  }, [query, resetQuery]);\n  const applyQuery = ({\n    keyPressed,\n    sectionIndex\n  }, getFirstSectionValueMatchingWithQuery, isValidQueryValue) => {\n    const cleanKeyPressed = keyPressed.toLowerCase();\n    const activeSection = sections[sectionIndex];\n\n    // The current query targets the section being editing\n    // We can try to concatenate the value\n    if (query != null && (!isValidQueryValue || isValidQueryValue(query.value)) && query.sectionIndex === sectionIndex) {\n      const concatenatedQueryValue = `${query.value}${cleanKeyPressed}`;\n      const queryResponse = getFirstSectionValueMatchingWithQuery(concatenatedQueryValue, activeSection);\n      if (!isQueryResponseWithoutValue(queryResponse)) {\n        setQuery({\n          sectionIndex,\n          value: concatenatedQueryValue,\n          sectionType: activeSection.type\n        });\n        return queryResponse;\n      }\n    }\n    const queryResponse = getFirstSectionValueMatchingWithQuery(cleanKeyPressed, activeSection);\n    if (isQueryResponseWithoutValue(queryResponse) && !queryResponse.saveQuery) {\n      resetQuery();\n      return null;\n    }\n    setQuery({\n      sectionIndex,\n      value: cleanKeyPressed,\n      sectionType: activeSection.type\n    });\n    if (isQueryResponseWithoutValue(queryResponse)) {\n      return null;\n    }\n    return queryResponse;\n  };\n  const applyLetterEditing = params => {\n    const findMatchingOptions = (format, options, queryValue) => {\n      const matchingValues = options.filter(option => option.toLowerCase().startsWith(queryValue));\n      if (matchingValues.length === 0) {\n        return {\n          saveQuery: false\n        };\n      }\n      return {\n        sectionValue: matchingValues[0],\n        shouldGoToNextSection: matchingValues.length === 1\n      };\n    };\n    const testQueryOnFormatAndFallbackFormat = (queryValue, activeSection, fallbackFormat, formatFallbackValue) => {\n      const getOptions = format => (0, _useField.getLetterEditingOptions)(utils, timezone, activeSection.type, format);\n      if (activeSection.contentType === 'letter') {\n        return findMatchingOptions(activeSection.format, getOptions(activeSection.format), queryValue);\n      }\n\n      // When editing a digit-format month / weekDay and the user presses a letter,\n      // We can support the letter editing by using the letter-format month / weekDay and re-formatting the result.\n      // We just have to make sure that the default month / weekDay format is a letter format,\n      if (fallbackFormat && formatFallbackValue != null && (0, _useField.getDateSectionConfigFromFormatToken)(utils, fallbackFormat).contentType === 'letter') {\n        const fallbackOptions = getOptions(fallbackFormat);\n        const response = findMatchingOptions(fallbackFormat, fallbackOptions, queryValue);\n        if (isQueryResponseWithoutValue(response)) {\n          return {\n            saveQuery: false\n          };\n        }\n        return (0, _extends2.default)({}, response, {\n          sectionValue: formatFallbackValue(response.sectionValue, fallbackOptions)\n        });\n      }\n      return {\n        saveQuery: false\n      };\n    };\n    const getFirstSectionValueMatchingWithQuery = (queryValue, activeSection) => {\n      switch (activeSection.type) {\n        case 'month':\n          {\n            const formatFallbackValue = fallbackValue => (0, _useField.changeSectionValueFormat)(utils, fallbackValue, utils.formats.month, activeSection.format);\n            return testQueryOnFormatAndFallbackFormat(queryValue, activeSection, utils.formats.month, formatFallbackValue);\n          }\n        case 'weekDay':\n          {\n            const formatFallbackValue = (fallbackValue, fallbackOptions) => fallbackOptions.indexOf(fallbackValue).toString();\n            return testQueryOnFormatAndFallbackFormat(queryValue, activeSection, utils.formats.weekday, formatFallbackValue);\n          }\n        case 'meridiem':\n          {\n            return testQueryOnFormatAndFallbackFormat(queryValue, activeSection);\n          }\n        default:\n          {\n            return {\n              saveQuery: false\n            };\n          }\n      }\n    };\n    return applyQuery(params, getFirstSectionValueMatchingWithQuery);\n  };\n  const applyNumericEditing = params => {\n    const getNewSectionValue = (queryValue, section) => {\n      const cleanQueryValue = (0, _useField.removeLocalizedDigits)(queryValue, localizedDigits);\n      const queryValueNumber = Number(cleanQueryValue);\n      const sectionBoundaries = sectionsValueBoundaries[section.type]({\n        currentDate: null,\n        format: section.format,\n        contentType: section.contentType\n      });\n      if (queryValueNumber > sectionBoundaries.maximum) {\n        return {\n          saveQuery: false\n        };\n      }\n\n      // If the user types `0` on a month section,\n      // It is below the minimum, but we want to store the `0` in the query,\n      // So that when he pressed `1`, it will store `01` and move to the next section.\n      if (queryValueNumber < sectionBoundaries.minimum) {\n        return {\n          saveQuery: true\n        };\n      }\n      const shouldGoToNextSection = queryValueNumber * 10 > sectionBoundaries.maximum || cleanQueryValue.length === sectionBoundaries.maximum.toString().length;\n      const newSectionValue = (0, _useField.cleanDigitSectionValue)(utils, queryValueNumber, sectionBoundaries, localizedDigits, section);\n      return {\n        sectionValue: newSectionValue,\n        shouldGoToNextSection\n      };\n    };\n    const getFirstSectionValueMatchingWithQuery = (queryValue, activeSection) => {\n      if (activeSection.contentType === 'digit' || activeSection.contentType === 'digit-with-letter') {\n        return getNewSectionValue(queryValue, activeSection);\n      }\n\n      // When editing a letter-format month and the user presses a digit,\n      // We can support the numeric editing by using the digit-format month and re-formatting the result.\n      if (activeSection.type === 'month') {\n        const hasLeadingZerosInFormat = (0, _useField.doesSectionFormatHaveLeadingZeros)(utils, timezone, 'digit', 'month', 'MM');\n        const response = getNewSectionValue(queryValue, {\n          type: activeSection.type,\n          format: 'MM',\n          hasLeadingZerosInFormat,\n          hasLeadingZerosInInput: true,\n          contentType: 'digit',\n          maxLength: 2\n        });\n        if (isQueryResponseWithoutValue(response)) {\n          return response;\n        }\n        const formattedValue = (0, _useField.changeSectionValueFormat)(utils, response.sectionValue, 'MM', activeSection.format);\n        return (0, _extends2.default)({}, response, {\n          sectionValue: formattedValue\n        });\n      }\n\n      // When editing a letter-format weekDay and the user presses a digit,\n      // We can support the numeric editing by returning the nth day in the week day array.\n      if (activeSection.type === 'weekDay') {\n        const response = getNewSectionValue(queryValue, activeSection);\n        if (isQueryResponseWithoutValue(response)) {\n          return response;\n        }\n        const formattedValue = (0, _useField.getDaysInWeekStr)(utils, timezone, activeSection.format)[Number(response.sectionValue) - 1];\n        return (0, _extends2.default)({}, response, {\n          sectionValue: formattedValue\n        });\n      }\n      return {\n        saveQuery: false\n      };\n    };\n    return applyQuery(params, getFirstSectionValueMatchingWithQuery, queryValue => (0, _useField.isStringNumber)(queryValue, localizedDigits));\n  };\n  const applyCharacterEditing = (0, _useEventCallback.default)(params => {\n    const activeSection = sections[params.sectionIndex];\n    const isNumericEditing = (0, _useField.isStringNumber)(params.keyPressed, localizedDigits);\n    const response = isNumericEditing ? applyNumericEditing((0, _extends2.default)({}, params, {\n      keyPressed: (0, _useField.applyLocalizedDigits)(params.keyPressed, localizedDigits)\n    })) : applyLetterEditing(params);\n    if (response == null) {\n      setTempAndroidValueStr(null);\n      return;\n    }\n    updateSectionValue({\n      activeSection,\n      newSectionValue: response.sectionValue,\n      shouldGoToNextSection: response.shouldGoToNextSection\n    });\n  });\n  return {\n    applyCharacterEditing,\n    resetCharacterQuery: resetQuery\n  };\n};\nexports.useFieldCharacterEditing = useFieldCharacterEditing;\n};"],
"names":["shadow$provide","global","require","module","exports","_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireDefault","Object","defineProperty","value","useFieldCharacterEditing","_extends2","React","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_useEventCallback","_useUtils","_useField","sections","updateSectionValue","sectionsValueBoundaries","localizedDigits","setTempAndroidValueStr","timezone","utils","useUtils","query","setQuery","useState","resetQuery","useEffect","sectionIndex","type","sectionType","timeout","setTimeout","QUERY_LIFE_DURATION_MS","clearTimeout","applyQuery","keyPressed","getFirstSectionValueMatchingWithQuery","isValidQueryValue","cleanKeyPressed","toLowerCase","activeSection","concatenatedQueryValue","queryResponse","saveQuery","applyLetterEditing","params","findMatchingOptions","format","options","queryValue","matchingValues","filter","option","startsWith","length","sectionValue","shouldGoToNextSection","testQueryOnFormatAndFallbackFormat","fallbackFormat","formatFallbackValue","contentType","getLetterEditingOptions","getDateSectionConfigFromFormatToken","fallbackOptions","response","formats","month","fallbackValue","changeSectionValueFormat","weekday","indexOf","toString","applyNumericEditing","getNewSectionValue","section","cleanQueryValue","removeLocalizedDigits","queryValueNumber","Number","sectionBoundaries","currentDate","maximum","minimum","newSectionValue","cleanDigitSectionValue","hasLeadingZerosInFormat","doesSectionFormatHaveLeadingZeros","hasLeadingZerosInInput","maxLength","formattedValue","getDaysInWeekStr","isStringNumber","applyCharacterEditing","isNumericEditing","applyLocalizedDigits","resetCharacterQuery"]
}
