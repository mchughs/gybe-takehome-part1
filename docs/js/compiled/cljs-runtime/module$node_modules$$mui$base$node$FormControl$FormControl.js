shadow$provide.module$node_modules$$mui$base$node$FormControl$FormControl = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  function useUtilityClasses(ownerState) {
    const {disabled, error, filled, focused, required} = ownerState;
    return (0,_composeClasses.unstable_composeClasses)({root:["root", disabled && "disabled", focused && "focused", error && "error", filled && "filled", required && "required"]}, (0,_ClassNameConfigurator.useClassNamesOverride)(_formControlClasses.getFormControlUtilityClass));
  }
  "use client";
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.FormControl = void 0;
  var _extends2 = global(require("module$node_modules$$babel$runtime$helpers$extends")), _objectWithoutPropertiesLoose2 = global(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")), React = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index"));
  module = global(require("module$node_modules$prop_types$index"));
  var _useControlled = global(require("module$node_modules$$mui$utils$node$useControlled$index")), _FormControlContext = require("module$node_modules$$mui$base$node$FormControl$FormControlContext"), _formControlClasses = require("module$node_modules$$mui$base$node$FormControl$formControlClasses"), _utils = require("module$node_modules$$mui$base$node$utils$index"), _composeClasses = require("module$node_modules$$mui$base$node$composeClasses$index"), _ClassNameConfigurator = require("module$node_modules$$mui$base$node$utils$ClassNameConfigurator"), 
  _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  const _excluded = "defaultValue children disabled error onChange required slotProps slots value".split(" ");
  (exports.FormControl = React.forwardRef(function(props, forwardedRef) {
    var _slots$root;
    const {defaultValue, children, disabled = !1, error = !1, onChange, required = !1, slotProps = {}, slots = {}, value:incomingValue} = props, other = (0,_objectWithoutPropertiesLoose2.default)(props, _excluded), [value, setValue] = (0,_useControlled.default)({controlled:incomingValue, default:defaultValue, name:"FormControl", state:"value"}), filled = null != value && !(Array.isArray(value) && 0 === value.length) && "" !== value, [focusedState, setFocused] = React.useState(!1), focused = focusedState && 
    !disabled;
    React.useEffect(() => setFocused(isFocused => disabled ? !1 : isFocused), [disabled]);
    const ownerState = (0,_extends2.default)({}, props, {disabled, error, filled, focused, required});
    props = React.useMemo(() => ({disabled, error, filled, focused, onBlur:() => {
      setFocused(!1);
    }, onChange:event => {
      setValue(event.target.value);
      null == onChange || onChange(event);
    }, onFocus:() => {
      setFocused(!0);
    }, required, value:null != value ? value : ""}), [disabled, error, filled, focused, onChange, required, setValue, value]);
    const classes = useUtilityClasses(ownerState), Root = null != (_slots$root = slots.root) ? _slots$root : "div";
    _slots$root = _utils.useSlotProps;
    var JSCompiler_temp_const = slotProps.root;
    var JSCompiler_inline_result = "function" === typeof children ? children(props) : children;
    forwardedRef = _slots$root.call(_utils, {elementType:Root, externalSlotProps:JSCompiler_temp_const, externalForwardedProps:other, additionalProps:{ref:forwardedRef, children:JSCompiler_inline_result}, ownerState, className:classes.root});
    return (0,_jsxRuntime.jsx)(_FormControlContext.FormControlContext.Provider, {value:props, children:(0,_jsxRuntime.jsx)(Root, (0,_extends2.default)({}, forwardedRef))});
  })).propTypes = {children:module.default.oneOfType([module.default.node, module.default.func]), className:module.default.string, defaultValue:module.default.any, disabled:module.default.bool, error:module.default.bool, onChange:module.default.func, required:module.default.bool, slotProps:module.default.shape({root:module.default.oneOfType([module.default.func, module.default.object])}), slots:module.default.shape({root:module.default.elementType}), value:module.default.any};
};

//# sourceMappingURL=module$node_modules$$mui$base$node$FormControl$FormControl.js.map
