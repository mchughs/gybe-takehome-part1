shadow$provide.module$node_modules$$mui$base$node$utils$useControllableReducer = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  function areEqual(a, b) {
    return a === b;
  }
  function getControlledState(internalState, controlledProps) {
    const augmentedState = (0,_extends2.default)({}, internalState);
    Object.keys(controlledProps).forEach(key => {
      void 0 !== controlledProps[key] && (augmentedState[key] = controlledProps[key]);
    });
    return augmentedState;
  }
  function useStateChangeDetection(parameters) {
    const {nextState, initialState, stateComparers, onStateChange, controlledProps, lastActionRef} = parameters, internalPreviousStateRef = React.useRef(initialState);
    React.useEffect(() => {
      if (null !== lastActionRef.current) {
        var previousState = getControlledState(internalPreviousStateRef.current, controlledProps);
        Object.keys(nextState).forEach(key => {
          var _stateComparers$key;
          const stateComparer = null != (_stateComparers$key = stateComparers[key]) ? _stateComparers$key : areEqual;
          _stateComparers$key = nextState[key];
          const previousStateItem = previousState[key];
          if (null == previousStateItem && null != _stateComparers$key || null != previousStateItem && null == _stateComparers$key || null != previousStateItem && null != _stateComparers$key && !stateComparer(_stateComparers$key, previousStateItem)) {
            var _event, _type;
            null == onStateChange || onStateChange(null != (_event = lastActionRef.current.event) ? _event : null, key, _stateComparers$key, null != (_type = lastActionRef.current.type) ? _type : "", nextState);
          }
        });
        internalPreviousStateRef.current = nextState;
        lastActionRef.current = null;
      }
    }, [internalPreviousStateRef, nextState, lastActionRef, onStateChange, stateComparers, controlledProps]);
  }
  "use client";
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.useControllableReducer = function(parameters) {
    const lastActionRef = React.useRef(null), {reducer, initialState, controlledProps = EMPTY_OBJECT, stateComparers = EMPTY_OBJECT, onStateChange = NOOP, actionContext, componentName = ""} = parameters, controlledPropsRef = React.useRef(controlledProps);
    React.useEffect(() => {
      Object.keys(controlledProps).forEach(key => {
        void 0 !== controlledPropsRef.current[key] && void 0 === controlledProps[key] && console.error(`useControllableReducer: ${componentName ? `The ${componentName} component` : "A component"} is changing a controlled prop to be uncontrolled: ${key}`);
        void 0 === controlledPropsRef.current[key] && void 0 !== controlledProps[key] && console.error(`useControllableReducer: ${componentName ? `The ${componentName} component` : "A component"} is changing an uncontrolled prop to be controlled: ${key}`);
      });
    }, [controlledProps, componentName]);
    parameters = React.useCallback((state, action) => {
      lastActionRef.current = action;
      state = getControlledState(state, controlledProps);
      return reducer(state, action);
    }, [controlledProps, reducer]);
    const [nextState, dispatch] = React.useReducer(parameters, initialState);
    parameters = React.useCallback(action => {
      dispatch((0,_extends2.default)({}, action, {context:actionContext}));
    }, [actionContext]);
    useStateChangeDetection({nextState, initialState, stateComparers:null != stateComparers ? stateComparers : EMPTY_OBJECT, onStateChange:null != onStateChange ? onStateChange : NOOP, controlledProps, lastActionRef});
    return [getControlledState(nextState, controlledProps), parameters];
  };
  var _extends2 = global(require("module$node_modules$$babel$runtime$helpers$extends")), React = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index"));
  const EMPTY_OBJECT = {}, NOOP = () => {
  };
};

//# sourceMappingURL=module$node_modules$$mui$base$node$utils$useControllableReducer.js.map
