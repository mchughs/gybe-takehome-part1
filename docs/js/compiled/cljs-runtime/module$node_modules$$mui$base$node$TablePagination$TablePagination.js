shadow$provide.module$node_modules$$mui$base$node$TablePagination$TablePagination = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  function defaultLabelDisplayedRows({from, to, count}) {
    return `${from}â€“${to} of ${-1 !== count ? count : `more than ${to}`}`;
  }
  function defaultGetAriaLabel(type) {
    return `Go to ${type} page`;
  }
  "use client";
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.TablePagination = void 0;
  var _extends2 = global(require("module$node_modules$$babel$runtime$helpers$extends")), _objectWithoutPropertiesLoose2 = global(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")), _react = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index"));
  global = global(require("module$node_modules$prop_types$index"));
  var _utils = require("module$node_modules$$mui$utils$node$index"), _utils2 = require("module$node_modules$$mui$base$node$utils$index"), _composeClasses = require("module$node_modules$$mui$base$node$composeClasses$index"), _isHostComponent = require("module$node_modules$$mui$base$node$utils$isHostComponent"), _TablePaginationActions = require("module$node_modules$$mui$base$node$TablePagination$TablePaginationActions"), _tablePaginationClasses = require("module$node_modules$$mui$base$node$TablePagination$tablePaginationClasses"), 
  _ClassNameConfigurator = require("module$node_modules$$mui$base$node$utils$ClassNameConfigurator"), _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  const _excluded = "colSpan count getItemAriaLabel labelDisplayedRows labelId labelRowsPerPage onPageChange onRowsPerPageChange page rowsPerPage rowsPerPageOptions selectId slotProps slots".split(" ");
  (exports.TablePagination = _react.forwardRef(function(props, forwardedRef) {
    var _slots$root, _slots$select, _slots$actions, _slots$menuItem, _slots$selectLabel, _slots$displayedRows, _slots$toolbar, _slots$spacer;
    const {colSpan:colSpanProp, count, getItemAriaLabel = defaultGetAriaLabel, labelDisplayedRows = defaultLabelDisplayedRows, labelId:labelIdProp, labelRowsPerPage = "Rows per page:", onPageChange, onRowsPerPageChange, page, rowsPerPage, rowsPerPageOptions = [10, 25, 50, 100], selectId:selectIdProp, slotProps = {}, slots = {}} = props;
    var other = (0,_objectWithoutPropertiesLoose2.default)(props, _excluded), classes = (0,_composeClasses.unstable_composeClasses)({root:["root"], toolbar:["toolbar"], spacer:["spacer"], selectLabel:["selectLabel"], select:["select"], input:["input"], selectIcon:["selectIcon"], menuItem:["menuItem"], displayedRows:["displayedRows"], actions:["actions"]}, (0,_ClassNameConfigurator.useClassNamesOverride)(_tablePaginationClasses.getTablePaginationUtilityClass)), colSpan;
    const Root = null != (_slots$root = slots.root) ? _slots$root : "td";
    "td" !== Root && (0,_isHostComponent.isHostComponent)(Root) || (colSpan = colSpanProp || 1000);
    _slots$root = (0,_utils.unstable_useId)(selectIdProp);
    var labelId = (0,_utils.unstable_useId)(labelIdProp);
    forwardedRef = (0,_utils2.useSlotProps)({elementType:Root, externalSlotProps:slotProps.root, externalForwardedProps:other, additionalProps:{colSpan, ref:forwardedRef}, ownerState:props, className:classes.root});
    other = null != (_slots$select = slots.select) ? _slots$select : "select";
    _slots$root = (0,_utils2.useSlotProps)({elementType:other, externalSlotProps:slotProps.select, additionalProps:{value:rowsPerPage, id:_slots$root, onChange:event => onRowsPerPageChange && onRowsPerPageChange(event), "aria-label":rowsPerPage.toString(), "aria-labelledby":[labelId, _slots$root].filter(Boolean).join(" ") || void 0}, ownerState:props, className:classes.select});
    _slots$select = null != (_slots$actions = slots.actions) ? _slots$actions : _TablePaginationActions.TablePaginationActions;
    _slots$actions = (0,_utils2.useSlotProps)({elementType:_slots$select, externalSlotProps:slotProps.actions, additionalProps:{page, rowsPerPage, count, onPageChange, getItemAriaLabel}, ownerState:props, className:classes.actions});
    const MenuItem = null != (_slots$menuItem = slots.menuItem) ? _slots$menuItem : "option", menuItemProps = (0,_utils2.useSlotProps)({elementType:MenuItem, externalSlotProps:slotProps.menuItem, additionalProps:{value:void 0}, ownerState:props, className:classes.menuItem});
    colSpan = null != (_slots$selectLabel = slots.selectLabel) ? _slots$selectLabel : "p";
    labelId = (0,_utils2.useSlotProps)({elementType:colSpan, externalSlotProps:slotProps.selectLabel, additionalProps:{id:labelId}, ownerState:props, className:classes.selectLabel});
    _slots$selectLabel = null != (_slots$displayedRows = slots.displayedRows) ? _slots$displayedRows : "p";
    _slots$displayedRows = (0,_utils2.useSlotProps)({elementType:_slots$selectLabel, externalSlotProps:slotProps.displayedRows, ownerState:props, className:classes.displayedRows});
    _slots$menuItem = null != (_slots$toolbar = slots.toolbar) ? _slots$toolbar : "div";
    _slots$toolbar = (0,_utils2.useSlotProps)({elementType:_slots$menuItem, externalSlotProps:slotProps.toolbar, ownerState:props, className:classes.toolbar});
    var Spacer = null != (_slots$spacer = slots.spacer) ? _slots$spacer : "div", spacerProps = (0,_utils2.useSlotProps)({elementType:Spacer, externalSlotProps:slotProps.spacer, ownerState:props, className:classes.spacer});
    props = _jsxRuntime.jsx;
    _slots$spacer = _extends2.default;
    classes = _jsxRuntime.jsxs;
    var JSCompiler_temp_const = _extends2.default;
    Spacer = (0,_jsxRuntime.jsx)(Spacer, (0,_extends2.default)({}, spacerProps));
    colSpan = 1 < rowsPerPageOptions.length && (0,_jsxRuntime.jsx)(colSpan, (0,_extends2.default)({}, labelId, {children:labelRowsPerPage}));
    other = 1 < rowsPerPageOptions.length && (0,_jsxRuntime.jsx)(other, (0,_extends2.default)({}, _slots$root, {children:rowsPerPageOptions.map(rowsPerPageOption => (0,_react.createElement)(MenuItem, (0,_extends2.default)({}, menuItemProps, {key:"number" !== typeof rowsPerPageOption && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption, value:"number" !== typeof rowsPerPageOption && rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption}), "number" !== typeof rowsPerPageOption && 
    rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))}));
    _slots$root = _jsxRuntime.jsx;
    labelId = _extends2.default;
    spacerProps = -1 === count ? (page + 1) * rowsPerPage : -1 === rowsPerPage ? count : Math.min(count, (page + 1) * rowsPerPage);
    return props.call(_jsxRuntime, Root, _slots$spacer.call(_extends2, {}, forwardedRef, {children:classes.call(_jsxRuntime, _slots$menuItem, JSCompiler_temp_const.call(_extends2, {}, _slots$toolbar, {children:[Spacer, colSpan, other, _slots$root.call(_jsxRuntime, _slots$selectLabel, labelId.call(_extends2, {}, _slots$displayedRows, {children:labelDisplayedRows({from:0 === count ? 0 : page * rowsPerPage + 1, to:spacerProps, count:-1 === count ? -1 : count, page})})), (0,_jsxRuntime.jsx)(_slots$select, 
    (0,_extends2.default)({}, _slots$actions))]}))}));
  })).propTypes = {colSpan:global.default.number, count:global.default.number.isRequired, getItemAriaLabel:global.default.func, labelDisplayedRows:global.default.func, labelId:global.default.string, labelRowsPerPage:global.default.node, onPageChange:global.default.func.isRequired, onRowsPerPageChange:global.default.func, page:(0,_utils.chainPropTypes)(_utils.integerPropType.isRequired, props => {
    const {count, page, rowsPerPage} = props;
    if (-1 === count) {
      return null;
    }
    props = Math.max(0, Math.ceil(count / rowsPerPage) - 1);
    return 0 > page || page > props ? Error("MUI: The page prop of a TablePagination is out of range " + `(0 to ${props}, but page is ${page}).`) : null;
  }), rowsPerPage:_utils.integerPropType.isRequired, rowsPerPageOptions:global.default.arrayOf(global.default.oneOfType([global.default.number, global.default.shape({label:global.default.string.isRequired, value:global.default.number.isRequired})]).isRequired), selectId:global.default.string, slotProps:global.default.shape({actions:global.default.oneOfType([global.default.func, global.default.object]), displayedRows:global.default.oneOfType([global.default.func, global.default.object]), menuItem:global.default.oneOfType([global.default.func, 
  global.default.object]), root:global.default.oneOfType([global.default.func, global.default.object]), select:global.default.oneOfType([global.default.func, global.default.object]), selectLabel:global.default.oneOfType([global.default.func, global.default.object]), spacer:global.default.oneOfType([global.default.func, global.default.object]), toolbar:global.default.oneOfType([global.default.func, global.default.object])}), slots:global.default.shape({actions:global.default.elementType, displayedRows:global.default.elementType, 
  menuItem:global.default.elementType, root:global.default.elementType, select:global.default.elementType, selectLabel:global.default.elementType, spacer:global.default.elementType, toolbar:global.default.elementType})};
};

//# sourceMappingURL=module$node_modules$$mui$base$node$TablePagination$TablePagination.js.map
