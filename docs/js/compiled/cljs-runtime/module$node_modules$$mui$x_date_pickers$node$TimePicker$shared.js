shadow$provide.module$node_modules$$mui$x_date_pickers$node$TimePicker$shared = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.useTimePickerDefaultizedProps = function(props, name) {
    const utils = (0,_useUtils.useUtils)(), themeProps = (0,_styles.useThemeProps)({props, name});
    props = themeProps.ampm ?? utils.is12HourCycleInCurrentLocale();
    name = React.useMemo(() => null == themeProps.localeText?.toolbarTitle ? themeProps.localeText : (0,_extends2.default)({}, themeProps.localeText, {timePickerToolbarTitle:themeProps.localeText.toolbarTitle}), [themeProps.localeText]);
    return (0,_extends2.default)({}, themeProps, {ampm:props, localeText:name}, (0,_views.applyDefaultViewProps)({views:themeProps.views, openTo:themeProps.openTo, defaultViews:["hours", "minutes"], defaultOpenTo:"hours"}), {disableFuture:themeProps.disableFuture ?? !1, disablePast:themeProps.disablePast ?? !1, slots:(0,_extends2.default)({toolbar:_TimePickerToolbar.TimePickerToolbar}, themeProps.slots), slotProps:(0,_extends2.default)({}, themeProps.slotProps, {toolbar:(0,_extends2.default)({ampm:props, 
    ampmInClock:themeProps.ampmInClock}, themeProps.slotProps?.toolbar)})});
  };
  var _extends2 = global(require("module$node_modules$$babel$runtime$helpers$extends")), React = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index")), _styles = require("module$node_modules$$mui$material$node$styles$index"), _useUtils = require("module$node_modules$$mui$x_date_pickers$node$internals$hooks$useUtils"), _TimePickerToolbar = require("module$node_modules$$mui$x_date_pickers$node$TimePicker$TimePickerToolbar"), _views = require("module$node_modules$$mui$x_date_pickers$node$internals$utils$views");
};

//# sourceMappingURL=module$node_modules$$mui$x_date_pickers$node$TimePicker$shared.js.map
