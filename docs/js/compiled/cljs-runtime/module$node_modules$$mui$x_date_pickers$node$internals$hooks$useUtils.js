shadow$provide.module$node_modules$$mui$x_date_pickers$node$internals$hooks$useUtils = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.useUtils = exports.useNow = exports.useLocalizationContext = exports.useLocaleText = exports.useDefaultDates = void 0;
  var _extends2 = global(require("module$node_modules$$babel$runtime$helpers$extends")), React = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index")), _LocalizationProvider = require("module$node_modules$$mui$x_date_pickers$node$LocalizationProvider$LocalizationProvider"), _enUS = require("module$node_modules$$mui$x_date_pickers$node$locales$enUS");
  const useLocalizationContext = () => {
    const localization = React.useContext(_LocalizationProvider.MuiPickersAdapterContext);
    if (null === localization) {
      throw Error("MUI X: Can not find the date and time pickers localization context.\nIt looks like you forgot to wrap your component in LocalizationProvider.\nThis can also happen if you are bundling multiple versions of the `@mui/x-date-pickers` package");
    }
    if (null === localization.utils) {
      throw Error("MUI X: Can not find the date and time pickers adapter from its localization context.\nIt looks like you forgot to pass a `dateAdapter` to your LocalizationProvider.");
    }
    const localeText = React.useMemo(() => (0,_extends2.default)({}, _enUS.DEFAULT_LOCALE, localization.localeText), [localization.localeText]);
    return React.useMemo(() => (0,_extends2.default)({}, localization, {localeText}), [localization, localeText]);
  };
  exports.useLocalizationContext = useLocalizationContext;
  exports.useUtils = () => useLocalizationContext().utils;
  exports.useDefaultDates = () => useLocalizationContext().defaultDates;
  exports.useLocaleText = () => useLocalizationContext().localeText;
  exports.useNow = timezone => {
    const utils = useLocalizationContext().utils, now = React.useRef();
    void 0 === now.current && (now.current = utils.date(void 0, timezone));
    return now.current;
  };
};

//# sourceMappingURL=module$node_modules$$mui$x_date_pickers$node$internals$hooks$useUtils.js.map
