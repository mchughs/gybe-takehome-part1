shadow$provide.module$node_modules$$mui$base$node$useSnackbar$useSnackbar = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  "use client";
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.useSnackbar = function(parameters = {}) {
    const {autoHideDuration = null, disableWindowBlurListener = !1, onClose, open, resumeHideDuration} = parameters, timerAutoHide = (0,_utils.unstable_useTimeout)();
    React.useEffect(() => {
      function handleKeyDown(nativeEvent) {
        nativeEvent.defaultPrevented || "Escape" !== nativeEvent.key && "Esc" !== nativeEvent.key || null == onClose || onClose(nativeEvent, "escapeKeyDown");
      }
      if (open) {
        return document.addEventListener("keydown", handleKeyDown), () => {
          document.removeEventListener("keydown", handleKeyDown);
        };
      }
    }, [open, onClose]);
    const handleClose = (0,_utils.unstable_useEventCallback)((event, reason) => {
      null == onClose || onClose(event, reason);
    }), setAutoHideTimer = (0,_utils.unstable_useEventCallback)(autoHideDurationParam => {
      onClose && null != autoHideDurationParam && timerAutoHide.start(autoHideDurationParam, () => {
        handleClose(null, "timeout");
      });
    });
    React.useEffect(() => {
      open && setAutoHideTimer(autoHideDuration);
      return timerAutoHide.clear;
    }, [open, autoHideDuration, setAutoHideTimer, timerAutoHide]);
    const handlePause = timerAutoHide.clear, handleResume = React.useCallback(() => {
      null != autoHideDuration && setAutoHideTimer(null != resumeHideDuration ? resumeHideDuration : 0.5 * autoHideDuration);
    }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]), createHandleBlur = otherHandlers => event => {
      const onBlurCallback = otherHandlers.onBlur;
      null == onBlurCallback || onBlurCallback(event);
      handleResume();
    }, createHandleFocus = otherHandlers => event => {
      const onFocusCallback = otherHandlers.onFocus;
      null == onFocusCallback || onFocusCallback(event);
      handlePause();
    }, createMouseEnter = otherHandlers => event => {
      const onMouseEnterCallback = otherHandlers.onMouseEnter;
      null == onMouseEnterCallback || onMouseEnterCallback(event);
      handlePause();
    }, createMouseLeave = otherHandlers => event => {
      const onMouseLeaveCallback = otherHandlers.onMouseLeave;
      null == onMouseLeaveCallback || onMouseLeaveCallback(event);
      handleResume();
    };
    React.useEffect(() => {
      if (!disableWindowBlurListener && open) {
        return window.addEventListener("focus", handleResume), window.addEventListener("blur", handlePause), () => {
          window.removeEventListener("focus", handleResume);
          window.removeEventListener("blur", handlePause);
        };
      }
    }, [disableWindowBlurListener, open, handleResume, handlePause]);
    return {getRootProps:(externalProps = {}) => {
      const externalEventHandlers = (0,_extends2.default)({}, (0,_extractEventHandlers.extractEventHandlers)(parameters), (0,_extractEventHandlers.extractEventHandlers)(externalProps));
      return (0,_extends2.default)({role:"presentation"}, externalProps, externalEventHandlers, {onBlur:createHandleBlur(externalEventHandlers), onFocus:createHandleFocus(externalEventHandlers), onMouseEnter:createMouseEnter(externalEventHandlers), onMouseLeave:createMouseLeave(externalEventHandlers)});
    }, onClickAway:event => {
      null == onClose || onClose(event, "clickaway");
    }};
  };
  var _extends2 = global(require("module$node_modules$$babel$runtime$helpers$extends")), React = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index")), _utils = require("module$node_modules$$mui$utils$node$index"), _extractEventHandlers = require("module$node_modules$$mui$base$node$utils$extractEventHandlers");
};

//# sourceMappingURL=module$node_modules$$mui$base$node$useSnackbar$useSnackbar.js.map
