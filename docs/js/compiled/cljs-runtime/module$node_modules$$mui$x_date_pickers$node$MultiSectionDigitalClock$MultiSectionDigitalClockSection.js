shadow$provide.module$node_modules$$mui$x_date_pickers$node$MultiSectionDigitalClock$MultiSectionDigitalClockSection = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.MultiSectionDigitalClockSection = void 0;
  var _extends2 = global(require("module$node_modules$$babel$runtime$helpers$extends")), _objectWithoutPropertiesLoose2 = global(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")), React = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index")), _clsx = global(require("module$node_modules$clsx$dist$clsx")), _styles = require("module$node_modules$$mui$material$node$styles$index"), _composeClasses = global(require("module$node_modules$$mui$utils$node$composeClasses$index"));
  module = global(require("module$node_modules$$mui$material$node$MenuList$index"));
  var _MenuItem = global(require("module$node_modules$$mui$material$node$MenuItem$index")), _useForkRef = global(require("module$node_modules$$mui$utils$node$useForkRef$index")), _multiSectionDigitalClockSectionClasses = require("module$node_modules$$mui$x_date_pickers$node$MultiSectionDigitalClock$multiSectionDigitalClockSectionClasses"), _dimensions = require("module$node_modules$$mui$x_date_pickers$node$internals$constants$dimensions"), _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  const _excluded = "autoFocus onChange className disabled readOnly items active slots slotProps skipDisabled".split(" "), useUtilityClasses = ownerState => {
    ({classes:ownerState} = ownerState);
    return (0,_composeClasses.default)({root:["root"], item:["item"]}, _multiSectionDigitalClockSectionClasses.getMultiSectionDigitalClockSectionUtilityClass, ownerState);
  }, MultiSectionDigitalClockSectionRoot = (0,_styles.styled)(module.default, {name:"MuiMultiSectionDigitalClockSection", slot:"Root", overridesResolver:(_, styles) => styles.root})(({theme, ownerState}) => ({maxHeight:_dimensions.DIGITAL_CLOCK_VIEW_HEIGHT, width:56, padding:0, overflow:"hidden", "@media (prefers-reduced-motion: no-preference)":{scrollBehavior:ownerState.alreadyRendered ? "smooth" : "auto"}, "@media (pointer: fine)":{"\x26:hover":{overflowY:"auto"}}, "@media (pointer: none), (pointer: coarse)":{overflowY:"auto"}, 
  "\x26:not(:first-of-type)":{borderLeft:`1px solid ${(theme.vars || theme).palette.divider}`}, "\x26::after":{display:"block", content:'""', height:"calc(100% - 40px - 6px)"}})), MultiSectionDigitalClockSectionItem = (0,_styles.styled)(_MenuItem.default, {name:"MuiMultiSectionDigitalClockSection", slot:"Item", overridesResolver:(_, styles) => styles.item})(({theme}) => ({padding:8, margin:"2px 4px", width:_dimensions.MULTI_SECTION_CLOCK_SECTION_WIDTH, justifyContent:"center", "\x26:first-of-type":{marginTop:4}, 
  "\x26:hover":{backgroundColor:theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : (0,_styles.alpha)(theme.palette.primary.main, theme.palette.action.hoverOpacity)}, "\x26.Mui-selected":{backgroundColor:(theme.vars || theme).palette.primary.main, color:(theme.vars || theme).palette.primary.contrastText, "\x26:focus-visible, \x26:hover":{backgroundColor:(theme.vars || theme).palette.primary.dark}}, "\x26.Mui-focusVisible":{backgroundColor:theme.vars ? 
  `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.focusOpacity})` : (0,_styles.alpha)(theme.palette.primary.main, theme.palette.action.focusOpacity)}}));
  exports.MultiSectionDigitalClockSection = React.forwardRef(function(inProps, ref) {
    const containerRef = React.useRef(null);
    ref = (0,_useForkRef.default)(ref, containerRef);
    const previousActive = React.useRef(null), props = (0,_styles.useThemeProps)({props:inProps, name:"MuiMultiSectionDigitalClockSection"}), {autoFocus, onChange, className, disabled, readOnly, items, active, slots, slotProps, skipDisabled} = props;
    inProps = (0,_objectWithoutPropertiesLoose2.default)(props, _excluded);
    const ownerState = React.useMemo(() => (0,_extends2.default)({}, props, {alreadyRendered:!!containerRef.current}), [props]), classes = useUtilityClasses(ownerState), DigitalClockSectionItem = slots?.digitalClockSectionItem ?? MultiSectionDigitalClockSectionItem;
    React.useEffect(() => {
      if (null !== containerRef.current) {
        var activeItem = containerRef.current.querySelector('[role\x3d"option"][tabindex\x3d"0"], [role\x3d"option"][aria-selected\x3d"true"]');
        active && autoFocus && activeItem && activeItem.focus();
        activeItem && previousActive.current !== activeItem && (previousActive.current = activeItem, containerRef.current.scrollTop = activeItem.offsetTop - 4);
      }
    });
    const focusedOptionIndex = items.findIndex(item => item.isFocused(item.value));
    return (0,_jsxRuntime.jsx)(MultiSectionDigitalClockSectionRoot, (0,_extends2.default)({ref, className:(0,_clsx.default)(classes.root, className), ownerState, autoFocusItem:autoFocus && active, role:"listbox"}, inProps, {children:items.map((option, index) => {
      var isItemDisabled = option.isDisabled?.(option.value);
      isItemDisabled = disabled || isItemDisabled;
      if (skipDisabled && isItemDisabled) {
        return null;
      }
      const isSelected = option.isSelected(option.value);
      return (0,_jsxRuntime.jsx)(DigitalClockSectionItem, (0,_extends2.default)({onClick:() => !readOnly && onChange(option.value), selected:isSelected, disabled:isItemDisabled, disableRipple:readOnly, role:"option", "aria-disabled":readOnly || isItemDisabled || void 0, "aria-label":option.ariaLabel, "aria-selected":isSelected, tabIndex:focusedOptionIndex === index || -1 === focusedOptionIndex && 0 === index ? 0 : -1, className:classes.item}, slotProps?.digitalClockSectionItem, {children:option.label}), 
      option.label);
    })}));
  });
};

//# sourceMappingURL=module$node_modules$$mui$x_date_pickers$node$MultiSectionDigitalClock$MultiSectionDigitalClockSection.js.map
