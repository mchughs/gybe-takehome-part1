{
"version":3,
"file":"module$node_modules$timezone_soft$builds$timezone_soft_cjs.js",
"lineCount":323,
"mappings":"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",
"sources":["node_modules/timezone-soft/builds/timezone-soft.cjs"],
"sourcesContent":["shadow$provide[\"module$node_modules$timezone_soft$builds$timezone_soft_cjs\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.timezoneSoft = factory());\n})(this, (function () { 'use strict';\n\n  const BASE = 36;\n  const seq = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n  const cache = seq.split('').reduce(function (h, c, i) {\n    h[c] = i;\n    return h\n  }, {});\n\n  // 0, 1, 2, ..., A, B, C, ..., 00, 01, ... AA, AB, AC, ..., AAA, AAB, ...\n  const toAlphaCode = function (n) {\n    if (seq[n] !== undefined) {\n      return seq[n]\n    }\n    let places = 1;\n    let range = BASE;\n    let s = '';\n    for (; n >= range; n -= range, places++, range *= BASE) {}\n    while (places--) {\n      const d = n % BASE;\n      s = String.fromCharCode((d < 10 ? 48 : 55) + d) + s;\n      n = (n - d) / BASE;\n    }\n    return s\n  };\n\n  const fromAlphaCode = function (s) {\n    if (cache[s] !== undefined) {\n      return cache[s]\n    }\n    let n = 0;\n    let places = 1;\n    let range = BASE;\n    let pow = 1;\n    for (; places < s.length; n += range, places++, range *= BASE) {}\n    for (let i = s.length - 1; i >= 0; i--, pow *= BASE) {\n      let d = s.charCodeAt(i) - 48;\n      if (d > 10) {\n        d -= 7;\n      }\n      n += d * pow;\n    }\n    return n\n  };\n\n  var encoding = {\n    toAlphaCode,\n    fromAlphaCode\n  };\n\n  const symbols = function (t) {\n    //... process these lines\n    const reSymbol = new RegExp('([0-9A-Z]+):([0-9A-Z]+)');\n    for (let i = 0; i < t.nodes.length; i++) {\n      const m = reSymbol.exec(t.nodes[i]);\n      if (!m) {\n        t.symCount = i;\n        break\n      }\n      t.syms[encoding.fromAlphaCode(m[1])] = encoding.fromAlphaCode(m[2]);\n    }\n    //remove from main node list\n    t.nodes = t.nodes.slice(t.symCount, t.nodes.length);\n  };\n  var parseSymbols = symbols;\n\n  // References are either absolute (symbol) or relative (1 - based)\n  const indexFromRef = function (trie, ref, index) {\n    const dnode = encoding.fromAlphaCode(ref);\n    if (dnode < trie.symCount) {\n      return trie.syms[dnode]\n    }\n    return index + dnode + 1 - trie.symCount\n  };\n\n  const toArray = function (trie) {\n    const all = [];\n    const crawl = (index, pref) => {\n      let node = trie.nodes[index];\n      if (node[0] === '!') {\n        all.push(pref);\n        node = node.slice(1); //ok, we tried. remove it.\n      }\n      const matches = node.split(/([A-Z0-9,]+)/g);\n      for (let i = 0; i < matches.length; i += 2) {\n        const str = matches[i];\n        const ref = matches[i + 1];\n        if (!str) {\n          continue\n        }\n        const have = pref + str;\n        //branch's end\n        if (ref === ',' || ref === undefined) {\n          all.push(have);\n          continue\n        }\n        const newIndex = indexFromRef(trie, ref, index);\n        crawl(newIndex, have);\n      }\n    };\n    crawl(0, '');\n    return all\n  };\n\n  //PackedTrie - Trie traversal of the Trie packed-string representation.\n  const unpack$2 = function (str) {\n    const trie = {\n      nodes: str.split(';'),\n      syms: [],\n      symCount: 0\n    };\n    //process symbols, if they have them\n    if (str.match(':')) {\n      parseSymbols(trie);\n    }\n    return toArray(trie)\n  };\n\n  var traverse = unpack$2;\n\n  const unpack = function (str) {\n    if (!str) {\n      return {}\n    }\n    //turn the weird string into a key-value object again\n    const obj = str.split('|').reduce((h, s) => {\n      const arr = s.split('\u00a6');\n      h[arr[0]] = arr[1];\n      return h\n    }, {});\n    const all = {};\n    Object.keys(obj).forEach(function (cat) {\n      const arr = traverse(obj[cat]);\n      //special case, for botched-boolean\n      if (cat === 'true') {\n        cat = true;\n      }\n      for (let i = 0; i < arr.length; i++) {\n        const k = arr[i];\n        if (all.hasOwnProperty(k) === true) {\n          if (Array.isArray(all[k]) === false) {\n            all[k] = [all[k], cat];\n          } else {\n            all[k].push(cat);\n          }\n        } else {\n          all[k] = cat;\n        }\n      }\n    });\n    return all\n  };\n\n  var unpack$1 = unpack;\n\n  // these are the folk heuristics that timezones use to set their dst change dates\n  // for example, the US changes:\n  // the second Sunday of March -> first Sunday of November\n  // http://www.webexhibits.org/daylightsaving/g.html\n  let patterns = {\n    usa: '2nd-sun-mar-2h|1st-sun-nov-2h',// (From 1987 to 2006)\n    // mexico\n    mex: '1st-sun-apr-2h|last-sun-oct-2h',\n\n    // European Union zone\n    eu0: 'last-sun-mar-0h|last-sun-oct-1h',\n    eu1: 'last-sun-mar-1h|last-sun-oct-2h',\n    eu2: 'last-sun-mar-2h|last-sun-oct-3h',\n    eu3: 'last-sun-mar-3h|last-sun-oct-4h',\n    //greenland\n    green: 'last-sat-mar-22h|last-sat-oct-23h',\n\n    // australia\n    aus: '1st-sun-apr-3h|1st-sun-oct-2h',\n    //lord howe australia\n    lhow: '1st-sun-apr-2h|1st-sun-oct-2h',\n    // new zealand\n    chat: '1st-sun-apr-3h|last-sun-sep-2h', //technically 3:45h -> 2:45h\n    // new Zealand, antarctica \n    nz: '1st-sun-apr-3h|last-sun-sep-2h',\n    // casey - antarctica\n    ant: '2nd-sun-mar-0h|1st-sun-oct-0h',\n    // troll - antarctica\n    troll: '3rd-sun-mar-1h|last-sun-oct-3h',\n\n    //jordan\n    jord: 'last-fri-feb-0h|last-fri-oct-1h',\n    // lebanon\n    leb: 'last-sun-mar-0h|last-sun-oct-0h',\n    // syria\n    syr: 'last-fri-mar-0h|last-fri-oct-0h',\n    //israel\n    // Start: Last Friday before April 2 -> The Sunday between Rosh Hashana and Yom Kippur\n    isr: 'last-fri-mar-2h|last-sun-oct-2h',\n    //palestine\n    pal: 'last-sun-mar-0h|last-fri-oct-1h',\n\n    // el aaiun\n    //this one seems to be on arabic calendar?\n    saha: 'last-sun-mar-3h|1st-sun-may-2h',\n\n    // paraguay\n    par: 'last-sun-mar-0h|1st-sun-oct-0h',\n    //cuba\n    cuba: '2nd-sun-mar-0h|1st-sun-nov-1h',\n    //chile\n    chile: '1st-sun-apr-0h|1st-sun-sep-0h',\n    //easter island\n    east: '1st-sat-apr-22h|1st-sat-sep-22h',\n    //fiji\n    fiji: '3rd-sun-jan-3h|2nd-sun-nov-2h',\n  };\n\n  var dstPatterns = patterns;\n\n  var pcked = {\"Africa\":{\"Abidjan\":[\"true\u00a6a5bouake,coordinated universal4daloa,g1san ped0utc,yamoussouk0zulu;ro;h0mt,reenwich mean2;!a0;!na; ti3;b4frica0tlantic/st_helena;!/0;accra,ba1conakry,dakar,freetown,lo0nouakchott,ouagadougou,timbuktu;me;mako,njul;idjan,obo\",\"Greenwich Mean\",\"n\"],\"Algiers\":[\"true\u00a6a8b6c3dz2or5s1t0;ebessa,iaret;etif,idi bel abbes;!a;e0hlef,onstantine;ntral europe0t;an;a0iskra,lida,oumerdas;b ezzouar,tna;frica,lg0nnaba;eria,iers\",\"Central European\",\"n\"],\"Bissau\":[\"true\u00a6africa,b2coordinated universal1g0utc,zulu;mt,nb,reenwich mean0uinea b1w; time;issau\",\"Greenwich Mean\",\"n\"],\"Cairo\":[\"true\u00a6a6bani suwayf,c5damanhur,e2giza,halw8i1kafr ad dawwar,luxor,new c5port said,qina,s0tanta,zagazig;hibin al kawm,ohag,uez;dku,smail8;astern europe5et,g0;!y0;!pt;airo;frica,l2s0;w0yut;an; 1exandr0;ia;fayyum,m0;a0inya;hallah al kubra,nsurah\",\"Eastern European\",\"n\"],\"Casablanca\":[\"true\u00a6aCcasablanDfBkenitAm6oujda angad,rabat,sa4t1we0;stern europe2t;angier,e0;ma7tou0;an;fi,le0;! al jadida;a1ekn4o0;hammedia,rocco;!r0;!rakesh;ra;es;fri0gadir,l hoceima;ca\",\"Morocco Standard\",\"n\",\"saha\"],\"Ceuta\":[\"true\u00a6africa,brussels,c0europe central,madrid,paris,romance;e0openhagen;ntral european,t,uta0;!melilla\",\"Central European\",\"n\",\"eu2\"],\"El_Aaiun\":[\"true\u00a6afri3casablan3e2laayoune,morocco,we0;stern 0t;european,sahara;h,l_aaiun,sh;ca\",\"Morocco Standard\",\"n\",\"saha\"],\"Johannesburg\":[\"true\u00a6africaIbEcAd9east londBharare,johannesHk7newcastDp6r5s3tembisa,uitenhage,v2w1za0;!f;elkom,itbank;anderbijlpark,ereeniging;ast,o0prings;uth africa,weto;andBichards bay,oodepoort;aarl,ietermaritzAort elizabeth,retoria;lerk0ruger0;sdorp;iepsloot,urb5;a1enturi0;on;pe town,rletonvil0;le;enoni,loemfontein,o1rakp0;an;ks0tshabelo;burg;! southern,/m0;aseru,babane\",\"South Africa\",\"s\"],\"Juba\":[\"true\u00a6a3c2juba,s0winejok;outh sudan,s0;!d;at,entral a0;frica\",\"Central Africa\",\"n\"],\"Khartoum\":[\"true\u00a6a7c6el 5k3ny4omdurm2port sud2s0wad medani;d0inga,ud1;!n;an;ass0hartoum,osti;ala;dae3fasher,obeid;at,entral af1;d damaz1f0l qadarif;rica;in\",\"Central Africa\",\"n\"],\"Lagos\":[\"true\u00a6aVbTcReQgPiLjKkaIlGmDnnewi,oAport harcourt,s9u7w0zar8; c3a2est0; 0ern3;a3c1;rBst,t;entral0; a0;frica;gep,muah0yo;ia;a7hagamu,okoto;kDn1w0yo;er3o;do,itsha;a0in5ubi;idugu0kurdi;ri;agos,ek0;ki;du0no,tsi0;na;imeLos;badan,jebu ode,k1l0seHwo;a orangun,eDor7;eHi8ot ekp0;ene;ombe,usau;bute ikorodu,fon alaaye,nugu;alabar,d,hakwama,o0;d,ngo;auchi,en0;in;b8do7frica1ku0tani;re;! western,/0;b2douala,kinsha1l0malabo,niamey,porto-novo;ibre2uanda;sa;angui,razza0;ville; ekiti;a,eoku1u0;ja;ta\",\"West Africa\",\"n\"],\"Maputo\":[\"true\u00a6africa7beiCc6ma4na2quelimaAwindhoek,z0;imbabwe,w0;!e;ca2m0;ibia,pu1;puto,to0;la;at,entral africa,himoio;! central,/0;b2gaboro1hara4kigali,lu0;bumbashi,saka;ne;lanty1ujumbu0;ra;re\",\"Central Africa\",\"s\"],\"Monrovia\":[\"true\u00a6africa,coordinated universal3g2l0monrov1utc,zulu;br,iber0r;ia;mt,reenwich mean0; time\",\"Greenwich Mean\",\"n\"],\"Nairobi\":[\"true\u00a6africa8e4indian/2kisumu,m1na0thika,yt;irobi,kuru;a1ombasa,yt;antananarivo,comoro,ma0;yotte; 2a0ldoret;st0t; 0ern 0;africa;! eastern,/0;a1d0kampala,mogadishu;ar_es_salaam,jibouti;ddis_ababa,sm0;a0e0;ra\",\"East Africa\",\"n\"],\"Ndjamena\":[\"true\u00a6africaAchad,n8t7w0; c3a2est0; 0ern3;a3c1;st,t;entral0; a0;frica;cd,d;'d0d0;jamena;! western\",\"West Africa\",\"n\"],\"Sao_Tome\":[\"true\u00a6africa,coordinated universal5g4s0utc,zulu;ao1t0;!p; 0_0;to2;mt,reenwich mean0; ti0;me\",\"Greenwich Mean\",\"n\"],\"Tripoli\":[\"true\u00a6a4benghazi,e3l1misrat5t0zawi2;arhuna,ripoli;by,ib0y;ya;astern european,et;frica,l khums,z zawiy0;ah\",\"Eastern European\",\"n\"],\"Tunis\":[\"true\u00a6africa,ce3sfax,t0;n,un0;!is0;!ia;ntral european,t\",\"Central European\",\"n\"],\"Windhoek\":[\"true\u00a6africa3c2na0windhoek;!m0;!ibia;at,entral africa;! central\",\"Central Africa\",\"s\"]},\"America\":{\"Adak\":[\"true\u00a6a1h0nwt,us/aleutian;awaii s3dt,st;dak,leutian0merica/atka;! 0;islands,s0;tandard time\",\"Aleutian Standard\",\"n\",\"usa\"],\"Anchorage\":[\"true\u00a6a0us/alaska;h6k5laska0merica,nchorage;! 1n0;! s1;s0t1;tandard t0;ime;dt,st,t;dt,st\",\"Alaska\",\"n\",\"usa\"],\"Araguaina\":[\"true\u00a6araguaina,br1e0palmas,tocantins; south america s4ast south america;a0t;silia0zil;! 0;s0t1;tandard t0;ime\",\"Brasilia\",\"n\"],\"Argentina/Buenos_Aires\":[\"true\u00a6a0buenos 4;merica/2r0;!g0;!e2;arge1buenos_0;aires;ntina\",\"Argentina\",\"s\"],\"Argentina/Catamarca\":[\"true\u00a6a0c2;merica/0rgentina;argentina/comodrivadavia,c0;atamarca\",\"Argentina\",\"s\"],\"Argentina/Cordoba\":[\"true\u00a6a0c2;merica/0rgentina;c0rosario;ordoba\",\"Argentina\",\"s\"],\"Argentina/Jujuy\":[\"true\u00a6a0j1;merica/j0rgentina;ujuy\",\"Argentina\",\"s\"],\"Argentina/La_Rioja\":[\"true\u00a6ar1b0city of b0la rioja;uenos aires;gentina0st,t;! 0;standard t0t0;ime\",\"Argentina\",\"s\"],\"Argentina/Mendoza\":[\"true\u00a6a0m1;merica/m0rgentina;endoza\",\"Argentina\",\"s\"],\"Argentina/Rio_Gallegos\":[\"true\u00a6ar1b0city of b0rio_gallegos;uenos aires;gentina0st,t;! 0;standard t0t0;ime\",\"Argentina\",\"s\"],\"Argentina/Salta\":[\"true\u00a6ar1b0city of b0salta;uenos aires;gentina0st,t;! 0;standard t0t0;ime\",\"Argentina\",\"s\"],\"Argentina/San_Juan\":[\"true\u00a6ar1b0city of b0san juan;uenos aires;gentina0st,t;! time\",\"Argentina\",\"s\"],\"Argentina/San_Luis\":[\"true\u00a6ar1b0city of b0san luis;uenos aires;gentina0st,t;! time\",\"Argentina\",\"s\"],\"Argentina/Tucuman\":[\"true\u00a6ar1b0city of b0tucuman;uenos aires;gentina0st,t;! time\",\"Argentina\",\"s\"],\"Argentina/Ushuaia\":[\"true\u00a6ar1b0city of b0ushuaia;uenos aires;gentina0st,t;! time\",\"Argentina\",\"s\"],\"Asuncion\":[\"true\u00a6asuncion,c3p0san lorenzo;araguay1ry,y0;!st,t;! time;apiata,iudad del este\",\"Paraguay\",\"s\",\"par\"],\"Bahia\":[\"true\u00a6b2camacari,e1feira de santa0itabu0salvador,vitoria da conquista;na; south america s5ast south america;ahia,r0;a0t;silia0zil;! 0;s0t1;tandard t0;ime\",\"Brasilia\",\"n\"],\"Bahia_Banderas\":[\"true\u00a6bah7c2guadalajara,m0;exico0onterrey;! city;entral 0st;mexic0standard 2;an,o0;! 0;time;ia_0\u00eda de 0;banderas\",\"Central Mexico\",\"n\",\"mex\"],\"Barbados\":[\"true\u00a6a1b0;arbados,b,rb;st,tlantic standard time\",\"Atlantic\",\"n\"],\"Belem\":[\"true\u00a6ananindeua,b2e1macapa,par0;auapebas,\u00e1 east amap\u00e1; south america s5ast south america;elem,r0;a0t;silia0zil;! 0;s0t1;tandard t0;ime\",\"Brasilia\",\"n\"],\"Belize\":[\"true\u00a6b1c0;entral standard time,st;elize,lz,z\",\"Central\",\"n\"],\"Boa_Vista\":[\"true\u00a6am3boa vista,c0roraima;entral brazil0uiaba;!ian0;! s3;azon0t;! 0;s0t1;tandard t0;ime\",\"Amazon\",\"n\"],\"Bogota\":[\"true\u00a6armenGbBc7dosquebradas,floridablanca,i6m5neiva,p3s1v0;alledupar,illavicencio;anta marCincelejo,o0;acha,ledad;a0erei9opayan;lmi8sto;anizales,edellin,onterA;bague,taguei;a2o0ucu6;!l0st,t;!omb6;li,rtagena;arran3ello,ogo2u0;caramanga,enaventu0;ra;ta;cabermeja,quilla;ia\",\"Colombia\",\"n\"],\"Boise\":[\"true\u00a6america4boise,idaho,m0;ountain0pt,st,t;! 0;id,standard t0t0;ime;! mountain\",\"Mountain\",\"n\",\"usa\"],\"Cambridge_Bay\":[\"true\u00a6america4cambridge bay,m0;ddt,ountain0st,t;! 0;standard t0t0;ime;! mountain\",\"Mountain\",\"n\",\"usa\"],\"Campo_Grande\":[\"true\u00a6am0brazil,campo grande,mato grosso do sul;azon standard time,t\",\"Amazon\",\"s\"],\"Cancun\":[\"true\u00a6cancun,e0mexico,quintana roo;astern standard time,st\",\"Eastern\",\"n\"],\"Caracas\":[\"true\u00a6alto barinKbarJcDguaBm8p7san6turmeFv0;alencia,e0;!n0t;!ezuela0;! 0n;standard t0t0;ime; cristobal,ta teresa del tuy;eta4uerto la cruz;a0ucumpiz;raca0turin;ibo,y;ren8ti0;re;a4iudad 2o1u0;a,m2;ro;bolivar,guay0;ana;bim1rac1;in0quisimeto,uta;as\",\"Venezuela\",\"n\"],\"Cayenne\":[\"true\u00a6cayenne,french guiana3g0;f1u0;f,iana;!t;! time\",\"French Guiana\",\"n\"],\"Chicago\":[\"true\u00a6aWbTcRdQfort worth,gPhOiMk00lJmCn8o7plano,s4t2us1wi0;chiGsconsW;/02a;ex0ulsa;!as;a0hreveport,ou4t 1;int 0n antonio;louGpaul;klahoXmaha,verland park;ashLe1or0;th dako7;braska,w 0;orleans,south me6;adisMe5i1o0;biHntgomery;lwaukee,nne1ss0;issippi,ouri;apol6so0;ta;mph4;aredo,i0ouisiana,ubb1;ncoln,ttle r0;ock;llino0owa,rving;is;oustAunts5;arland,rand prairie;allAes moines;dt,entral0hicago,orpus christi,st,t;! time;aton rouge,rowns0;vil0;le;laba8m5r1ust0;in;k1lingt0;on;ans0;as;arillo,erica0;! 0;central;ma\",\"Central\",\"n\",\"usa\"],\"Chihuahua\":[\"true\u00a6chihuahua,h5la paz,m0;azatlan,exic1ountain 0;mexico,standard time (mexico);an pacific1o0;! pacific;! time;ep0np0p0;mx\",\"Mexican Pacific\",\"n\",\"mex\"],\"Costa_Rica\":[\"true\u00a6c0sjmt;entral standard time,osta rica,r0st;!i\",\"Central\",\"n\"],\"Cuiaba\":[\"true\u00a6am0brazil,cuiaba,mato grosso,varzea grande;azon standard time,t\",\"Amazon\",\"s\"],\"Danmarkshavn\":[\"true\u00a6coordinated universal2d1g0utc,zulu;mt,reenwich mean1;anmarkshavn,enmark; time\",\"Greenwich Mean\",\"n\"],\"Dawson\":[\"true\u00a6canada,dawson,m2y0;d0pt,wt;dt,t;ountain standard time,st\",\"Mountain\",\"n\"],\"Dawson_Creek\":[\"true\u00a6canada,dawson creek,m1p0;pt,wt;ountain standard time,st,t\",\"Mountain\",\"n\"],\"Denver\":[\"true\u00a6a5colorado springs,denver,el paso,m1navajo,salt lake,us0;/6a;dt,ountain0st,t;! 0;standard t0t0;ime;lbuquerque,merica0urora;! 0/shiprock;mountain\",\"Mountain\",\"n\",\"usa\"],\"Detroit\":[\"true\u00a6america4detroit,e0grand rapids,us/michigan;astern0pt,st,t,wt;! 0;mi,standard t0t0;ime;! eastern\",\"Eastern\",\"n\",\"usa\"],\"Edmonton\":[\"true\u00a6a6ca4edmonton,m0;ountain0st,t;! 0;standard t0t0;ime;lgary,nada0;!/1;lberta,merica 0;mountain\",\"Mountain\",\"n\",\"usa\"],\"Eirunepe\":[\"true\u00a6a0brazil,eirunepe;c0mazonas west;re0t;! 0;standard t0t0;ime\",\"Acre\",\"n\"],\"El_Salvador\":[\"true\u00a6c2el1s0;an0lv,oyapango,v; salvador;entral standard time,st\",\"Central\",\"n\"],\"Fort_Nelson\":[\"true\u00a6british columbia,canada,fort nelson,m0;ountain standard time,st,t\",\"Mountain\",\"n\"],\"Fortaleza\":[\"true\u00a6br5ca4e3fortaleza,imperatriz,j2m0natal,sao luis,teresina;a0ossoro;picernpb,racanau;oao pessoa,uazeiro do norte; south america s5ast south america;mpina grande,ucaia;a0t;silia0zil;! 0;s0t1;tandard t0;ime\",\"Brasilia\",\"s\"],\"Glace_Bay\":[\"true\u00a6a1ca0glace_bay;nada,pe breton;st,t0;!lantic0;! 0;standard t0t0;ime\",\"Atlantic\",\"n\",\"usa\"],\"Goose_Bay\":[\"true\u00a6a0canada,goose_bay,labrador,npt;st,t0;!lantic0;! 0;standard t0t0;ime\",\"Atlantic\",\"n\",\"usa\"],\"Grand_Turk\":[\"true\u00a6america eastern,e2grand turk,kmt,t0;c0urks and caicos;!a;astern0st,t;! 0;standard t0t0;ime\",\"Eastern\",\"n\",\"usa\"],\"Guatemala\":[\"true\u00a6c2g0mixco,villa nueva;t0uatemala;!m;entral standard time,st\",\"Central\",\"n\"],\"Guayaquil\":[\"true\u00a6cuenca,ec2guayaquil,ma1q0santo domingo de los colorados;mt,uito;chala,nta;!t,u0;!ador0;! 0;mainland,time\",\"Ecuador\",\"n\"],\"Guyana\":[\"true\u00a6g0;eorgetown,uy1y0;!t;!ana0;! time\",\"Guyana\",\"n\"],\"Halifax\":[\"true\u00a6a4ca2halifax,n1p0;ei,rince edward island;ew brunswick,ova scotia;!nada0;!/atlantic;dt,st,t0;!lantic0;! 0;ns,standard t0t0;ime\",\"Atlantic\",\"n\",\"usa\"],\"Havana\":[\"true\u00a6arroyo naranjo,bBc3diez de octubre,guantanDh1las tunas,pinar del rio,sant0;a clara,iago de cuba;avana,cu,e0n0olguin;cu;amaguey,i5u0;!b0;!a0;! 0;standard t0t0;ime;e0udad camilo cie0;nfueg1;ay1oyer0;os;amo\",\"Cuba\",\"n\",\"cuba\"],\"Hermosillo\":[\"true\u00a6ciudad obregon,h1mexic0nogales,sonora;an pacific standard time,o;ermosillo,npmx\",\"Mexican Pacific\",\"n\"],\"Indiana/Indianapolis\":[\"true\u00a6america2crawford,dadukmn,eastern in,i4p0star1us/east-indiana;erry,i0ulaski;ke;!/0;fort_wayne,i0;ndiana0;!polis\",\"Eastern\",\"n\",\"usa\"],\"Indiana/Knox\":[\"true\u00a6america1c0indiana,knox,us/indiana-starke;entral standard time,st;!/knox_in\",\"Central\",\"n\",\"usa\"],\"Indiana/Marengo\":[\"true\u00a6america,e0indiana,marengo;astern standard time,st\",\"Eastern\",\"n\",\"usa\"],\"Indiana/Petersburg\":[\"true\u00a6america,e0indiana,petersburg;astern standard time,st\",\"Eastern\",\"n\",\"usa\"],\"Indiana/Tell_City\":[\"true\u00a6america,c0indiana,tell_city;entral standard time,st\",\"Central\",\"n\",\"usa\"],\"Indiana/Vevay\":[\"true\u00a6america,e0indiana,vevay;astern standard time,st\",\"Eastern\",\"n\",\"usa\"],\"Indiana/Vincennes\":[\"true\u00a6america,e0indiana,vincennes;astern standard time,st\",\"Eastern\",\"n\",\"usa\"],\"Indiana/Winamac\":[\"true\u00a6america,e0indiana,winamac;astern standard time,st\",\"Eastern\",\"n\",\"usa\"],\"Inuvik\":[\"true\u00a6america mountain,canada,inuvik,m0pddt;ountain0st,t;! 0;standard t0t0;ime\",\"Mountain\",\"n\",\"usa\"],\"Iqaluit\":[\"true\u00a6america eastern,canada,e0iqaluit;astern0ddt,st,t;! 0;standard t0t0;ime\",\"Eastern\",\"n\",\"usa\"],\"Jamaica\":[\"true\u00a6e3j1k0new k0;ingston;am0m;!aica;astern standard time,st\",\"Eastern\",\"n\"],\"Juneau\":[\"true\u00a6a0juneau;k5laska0merica;! 1n0;! s1;juneau area,s0t1;tandard t0;ime;st,t\",\"Alaska\",\"n\",\"usa\"],\"Kentucky/Louisville\":[\"true\u00a6america0eastern 4k3l2wayne;!/0;k1l0;ouisville;entuc0;ky\",\"Eastern\",\"n\",\"usa\"],\"Kentucky/Monticello\":[\"true\u00a6america,e0kentucky,monticello;astern standard time,st\",\"Eastern\",\"n\",\"usa\"],\"La_Paz\":[\"true\u00a6bo1cochabamba,la paz,oruro,s0;anta cruz de la sierra,ucre;!l0t;!ivia0;! time\",\"Bolivia\",\"s\"],\"Lima\":[\"true\u00a6arequiDc9huancCi8juliaca,lima,p2sant1t0;acna,rujillo;a anita   los ficus,iago de sur8;e0iura,ucallA;!r0t;!u0;! 0;standard t0t0;ime;ca,quitos;allao,hi1us0;co;cl0mbote;ayo;pa\",\"Peru\",\"s\"],\"Los_Angeles\":[\"true\u00a6a05ba03c00fWgarden grove,hTirviSlMmoJnIoFp9r8s1tacoma,us0washington state;/06a;a1eattle,f,p0tocktTunrise manor;okaPringH;cramenHn0; 1ta 0;aTclariV;bernardiRdiego,fran0jo4;!cisco;ancho cucamonga,ePiver7;a0dt,ort7st,t;cific1radi0;se;! 0;standard t0t0;ime;ak1cean0regFxnard;side;land;evada,orth las8;des1reno0; valley;to;a3o0;ng6s0; 0_0;angeles;!s0; vegas;ne;enders1untington0; beach;on;onta2re0;mont,s0;no;na;ali1hula vis0;ta;!f1;ja calif0kersfield;ornia;merica0naheim;! 0;pacific\",\"Pacific\",\"n\",\"usa\"],\"Maceio\":[\"true\u00a6a6br1e0maceio; south america s3ast south america;asilia0t;! 0;s0t1;tandard t0;ime;lagoassergipe,racaju\",\"Brasilia\",\"n\"],\"Managua\":[\"true\u00a6c3man2ni0;!c0;!ar0;agua;entral standard time,st\",\"Central\",\"n\"],\"Manaus\":[\"true\u00a6am4brazil3c0manaus;entral brazil0uiaba;!ian0;! s5;!/we2;azon0t;! 1as ea0;st;s0t1;tandard t0;ime\",\"Amazon\",\"s\"],\"Martinique\":[\"true\u00a6a3f1m0;a1q,tq;fmt,ort de france,rench ma0;rtinique;st,tlantic standard time\",\"Atlantic\",\"n\"],\"Matamoros\":[\"true\u00a6america central,c2heroica ma1m0nuevo laredo,reynosa;a0exico;tamoros;entral0st,t;! 0;standard t0t0;ime\",\"Central\",\"n\",\"usa\"],\"Mazatlan\":[\"true\u00a6cAh8l7m0tep4;azatlAexic1ountain 0;mexico,standard time (mexico);an pacific 2o0;! pacif0/bajasur;ic;standard t0t0;ime;a paz,os mochis;np0p0;mx;hihuahua,uliac0;an\",\"Mexican Pacific\",\"n\",\"mex\"],\"Menominee\":[\"true\u00a6america4c0menominee,wisconsin;entral0st,t;! 0;standard t0t0;ime;! central\",\"Central\",\"n\",\"usa\"],\"Merida\":[\"true\u00a6c3guadalajara,m0;e0onterrey;rida,xico0;! city;ampeche4entral 0st;mexic0standard 2;an,o0;! 0;time;!yucat\u00e1n\",\"Central Mexico\",\"n\",\"mex\"],\"Metlakatla\":[\"true\u00a6a0metlakatla;k5laska0merica;! 1n0;! s1;annette island,s0t1;tandard t0;ime;st,t\",\"Alaska\",\"n\",\"usa\"],\"Mexico_City\":[\"true\u00a6a0Lb0JcYduran0Cecatepec de morel0AguThSiQjalis0Nleon de los alda06mInHoGpEqDs9t4uruap04v2x1yucat04za0;catec0Cpop03;alapa de enriqu0Pi0Lochimil0L;e0illahermosa;nustiano carranza,racruz;a3e7la1o0uxt03;luUna02;huac,l0quepaque,xca01;nepant00pW;bas0Emaulip04pachuZ;an0oledad de graciano sanch0H; luis potosi,t0;a maria chimal0iago de q1;huQ;ueretaG;achuca de soIoza rica de7ue0;bSrto vallar04;axaJjo de agua;aucalpan07icolas romeCuevo le06;agdalena contrerUex4i2o0x;nterrey,rel0;ia,os;choHguel0; h5;!ico0;! 0/general,_0;city;rap5xtapalu9zta0;cUpalapa;idalJ;a1erre0stavo adolfo made0;ro;dalajara,naj0;ua0;to;ampeche,eFhiCiudad Ao3st,u0wt;au1ernava0;ca;htemoc,titlan izcalli;a4l2yo0;ac0;an;i0onia del valle;ma;cEhui0tzacoalc2;la;lopez mate0nezahualcoyotl;os;ap1lpancin0;go;as;laya,ntral 0;mexic0standard 2;an,o0;! 0;time;enito6uenavis0;ta;capulco3guascalientes,lvaro obreg2zcapotz0;al0;co;on; de0; juar0;ez\",\"Central Mexico\",\"n\",\"mex\"],\"Miquelon\":[\"true\u00a6hBmAp8s0;aint pierre2pm,t pierre 0;& miquelon 0a5;s2t3;! 0;a2s0;tandard t0;ime;nd1;ierre0m; m0;iquelon;npm,pm\",\"St. Pierre & Miquelon\",\"n\",\"usa\"],\"Moncton\":[\"true\u00a6a0canada,hepm,moncton,new brunswick;st,t0;!lantic0;! 0;standard t0t0;ime\",\"Atlantic\",\"n\",\"usa\"],\"Monterrey\":[\"true\u00a6c8g6m3sa1t0victoria de durango;ampico,orreon;ltillo,n0; nicolas de los garza,ta catarina;exico1on0;clova,terrey;! city;omez palacio,uadal0;ajara,upe;entral 1iudad 0st;apodaca,general escobedo,madero,victoria;mexic0standard 2;an,o0;! 0;time\",\"Central Mexico\",\"n\",\"mex\"],\"Montevideo\":[\"true\u00a6montevideo5u0;r1y0;!st,t;uguay0y;! 0;s1t2;! s0;tandard t0;ime\",\"Uruguay\",\"s\"],\"New_York\":[\"true\u00a6a0Rb0Oc0Hd0Ge0Bf07g05hialeah,i02j00kZlexingtonYmUnMoKpIquHrDsAt7u5v3w0yonkers;ashington1est 0inston salem,orcD;raEvirgin04;! dc;ermont,irginia0;! beach;nited states,s0;!/0Ma;a0enne1he bronx,oleD;llaha0mpa;ssee;outh 1t0; petersburg,aten3;bo0CcC;a2hode1ichmo06och0;ester; is03;lei2;eens,intana roo;ennsylvanNhiladelphNittsbur0rovidence;gh;hio,rlan0;do;ew3or1y0;!c;folk,th c0;aroliE; 1_yo0a0port news;rk;hampshiXje8york0;! staT;a1eads,i0;ami,chig1;ine,nhatt0ryMssachusetts;an;! fayetO;entucky,nox9;acks2e0;rsey;ndia1r0;on5;na;eorg0reensboro;ia;ayette1l0ort lauderda2;!orida;vil0;le;ast0dt,st,t; flatbush,ern0;! 0;standard t0t0;ime;elawa9urham;ape coral,h3incinnati,leve1o0;lumbus,nnecticut;la0;nd;a0esapeake;rlot0ttanooga;te;altimo1o0rooklyn,uffalo;st4;re;kr2merica0tlanta;! 0;eastern;on\",\"Eastern\",\"n\",\"usa\"],\"Nipigon\":[\"true\u00a6america eastern,canada,e0nipigon;astern0st,t;! 0;standard t0t0;ime\",\"Eastern\",\"n\",\"usa\"],\"Nome\":[\"true\u00a6a0no5;k5laska0merica;! 1n0;! s1;s0ti1west;tandard ti0;me;st,t\",\"Alaska\",\"n\",\"usa\"],\"Noronha\":[\"true\u00a6atlantic islands,brazil3f0n4;ernando de noronha 0nt;standard t0t0;ime;!/den0;oronha\",\"Fernando de Noronha\",\"n\"],\"North_Dakota/Beulah\":[\"true\u00a6america,beulah,c0north dakota;entral standard time,st\",\"Central\",\"n\",\"usa\"],\"North_Dakota/Center\":[\"true\u00a6america,c1merc0north dakota,oliv0;er;ent0st;er,ral standard time\",\"Central\",\"n\",\"usa\"],\"North_Dakota/New_Salem\":[\"true\u00a6america,c1n0;ew_salem,orth dakota;entral standard time,st\",\"Central\",\"n\",\"usa\"],\"Nuuk\":[\"true\u00a6america3g1nuuk,wg0;st,t;l,r0;eenland,l;!/godthab\",\"West Greenland\",\"n\",\"green\"],\"Ojinaga\":[\"true\u00a6america5c4m0ojinaga;ountain0st,t;! 0;standard t0t0;ime;hihuahua,iudad juarez;! mountain\",\"Mountain\",\"n\",\"usa\"],\"Panama\":[\"true\u00a6a3coral h,e2pa0san miguelito;!n0;!ama;astern standard time,st;merica/0t2;at1c0;aym1oral_harbour;ikok0;an\",\"Eastern\",\"n\"],\"Pangnirtung\":[\"true\u00a6a4baffin island,canada,e0nunavit,pangnirtung;astern0st,t;! 0;standard t0t0;ime;ddt,merica eastern\",\"Eastern\",\"n\",\"usa\"],\"Paramaribo\":[\"true\u00a6paramaribo,s0;r2ur0;!iname0;! time;!t\",\"Suriname\",\"n\"],\"Phoenix\":[\"true\u00a6aAc8g6idaho,m4n3phoenix,s2t1u0wyoming;s/arAtah;empe,ucsC;cottsd4inaloa,onora;ayarit,ew mexico;aryv2esa,o0st,t,wt;nta6untain standard time;ilbert,lend0;ale;h0olorado;andler,ihuahua;merica2r0;izo0;na;!/crest0;on\",\"Mountain\",\"n\"],\"Port-au-Prince\":[\"true\u00a6america eastern,cAe6h4p0;etionville,ort0; 0-au-1;au 0de paix;prince;aiti,t0;!i;astern0st,t;! 0;standard t0t0;ime;arrefour,roix des bouquets\",\"Eastern\",\"n\",\"usa\"],\"Porto_Velho\":[\"true\u00a6am5brazil,c2porto0rond\u00f4nia; 0_0;velho;entral brazil0uiaba;!ian0;! s3;azon0t;! 0;s0t1;tandard t0;ime\",\"Amazon\",\"n\"],\"Puerto_Rico\":[\"true\u00a6a2bayam9p0;r0uerto rico;!i;merica0st,tlantic standard time;!/0;a5blanc-sabl4curacao,dominica,g3kralendijk,lower_princes,m2port_of_spa1st_0torto7virg1;barthelemy,kitts,lucia,thomas,vincent;in;arigot,ontserrat;renada,uadeloupe;on;n0ruba;guil0tigua;la\",\"Atlantic\",\"n\"],\"Punta_Arenas\":[\"true\u00a6c0punta arenas,region of magallanes;hile0lt;! standard time\",\"Chile\",\"s\"],\"Rainy_River\":[\"true\u00a6america4c0ft frances,rainy river;entral0st,t;! 0;standard t0t0;ime;! central\",\"Central\",\"n\",\"usa\"],\"Rankin_Inlet\":[\"true\u00a6america4c0rankin inlet;ddt,entral0st,t;! 0;standard t0t0;ime;! central\",\"Central\",\"n\",\"usa\"],\"Recife\":[\"true\u00a6aAbr4caruaru,e3jaboatao2olinda,p0;aulista,e0;rnambuco,trolina;! dos guararapes; south america s4ast south a6;a0t;silia0zil;! 0;s0t1;tandard t0;ime;merica\",\"Brasilia\",\"n\"],\"Regina\":[\"true\u00a6c2regina,s0;askat0k;c2oon;anada0entral standard time,st;!/saskatc0;hewan\",\"Central\",\"n\"],\"Resolute\":[\"true\u00a6america4c0resolute;entral0st,t;! 0;standard t0t0;ime;! central\",\"Central\",\"n\",\"usa\"],\"Rio_Branco\":[\"true\u00a6a1brazil0rio branco;!/1;c1merica/porto_0;acre;re0t;! 0;standard t0t0;ime\",\"Acre\",\"s\"],\"Santarem\":[\"true\u00a6br1e0par\u00e1 west,santarem; south america s4ast south america;a0t;silia0zil;! 0;s0t1;tandard t0;ime\",\"Brasilia\",\"n\"],\"Santiago\":[\"true\u00a6aAc4iquique,la pintana,puente alto,rancagua,san3t1v0;alparaiso,ina del mar;alca0emuco;!huano; bernardo,tiago;h1l0oncepcion;!st,t;ile0l;! 0/continental;standard t0t0;ime;ntofagasta,rica\",\"Chile\",\"s\",\"chile\"],\"Santo_Domingo\":[\"true\u00a6a8bella vista,do6la romana,s0;an0dmt; pedro de macoris,t0;iago de los caballeros,o domingo0;! 0;e0oe0;ste;!m0;!inican republic;st,tlantic standard time\",\"Atlantic\",\"n\"],\"Sao_Paulo\":[\"true\u00a6a16b0Tc0Md0Je0Hf0Fg0Ahortol09i05j02l01mXnVosasco,pLriFs4ta3uber2v0;i0olta redon1A;amao,la velha,tor16;a0Ml06;boao da ser00uba10;a2e1oroNu0;maLzano;rXte lago0L;nt4o 0;bernardo do campo,carl03jo0leopolLpaulo,vicE;ao de meriti,se0;! do0; rio p8s camp00;a 1o0; andDs;barbara d'oes0Pluz0Tmar0T;beirao 3o0;! 0;cla0de janei0g6ver7;ro;das nev07p0;reto;asso fun8e7iraci6lanalti0Oo4r0;aia g1esidente prud0;en0G;ran0;de;nta grossa,rto aleg0;re;caW;lotYtro0F;do;iteroi,ov0;aJo hamburgo;a1o0;gi das cruzSntes clarD;ri0ua;l07n6;imei2ondri08;acarei,oinville,u0;iz de fo0ndi9;ra;ndaia2patin1ta0;bor6pevi,quaquece1;ga;tuG;andY;o3ravat2uaru0;ja,lh0;os;ai;iSvernador valadarC;loria5oz do0ran2; iguacu; south america sHast south ameri0mbu;ca;i0uque de caxi8;adema,vi0;noN;a1o0uriti2;ntagem,tK;choeiro de itapemirDmp1no3rapicui0scavel,xias do sul;ba;in1os dos goytacaz0;es;as;aBe7lumenau,r0;!a0st,t;!silia1zil0;!/east;! 0;s0t1;tandard t0;ime;l1t0;im;ford roxo,o horizon0;te;rueri,uru;lvora4merica3na2parecida de goi0;an0;ia;polis;na;da\",\"Brasilia\",\"s\"],\"Scoresbysund\":[\"true\u00a6e3greenland2h0ittoqqortoormiit,scoresbysund;e0neg;eg,g;! eastern;ast greenland1g0;st,t;! 0;standard t0t0;ime\",\"East Greenland\",\"n\",\"eu0\"],\"Sitka\":[\"true\u00a6a0sitka;k6laska0merica;! 1n0;! st2;s0t2;itka area,t0;andard t0;ime;st,t\",\"Alaska\",\"n\",\"usa\"],\"St_Johns\":[\"true\u00a6canada7h5n0st johns;d3ewfoundland0st,t;! 0;labrador,standard t0t0;ime;dt,t;e0n0tn;tn;!/newfoundland\",\"Newfoundland\",\"n\",\"usa\"],\"Swift_Current\":[\"true\u00a6c1s0;askatchewan,wift current;anada,entral standard time,st\",\"Central\",\"n\"],\"Tegucigalpa\":[\"true\u00a6c2h0san pedro sula,tegucigalpa;n0onduras;!d;entral standard time,st\",\"Central\",\"n\"],\"Thule\":[\"true\u00a6a0pituffik,thule;st,t0;!lantic0;! 0;standard t0t0;ime\",\"Atlantic\",\"n\",\"usa\"],\"Thunder_Bay\":[\"true\u00a6canada,e0thunder bay;astern0st,t;! time\",\"Eastern\",\"n\",\"usa\"],\"Tijuana\":[\"true\u00a6america8baja california,eAh6mexic4p0tijuana;acific0st,t;! 0;standard t0t0;ime;ali,o0;!/bajanorte;e0n0;nomx; pacific,/0;e0santa_isabel;nsenada\",\"Pacific\",\"n\",\"usa\"],\"Toronto\":[\"true\u00a6americaGbEcaBe7gatineIhamilFkitchener,l4m3nepe2o0quebec,richmond hill,toronto,vaugh2windsor;n5sh0tt0;awa;an;arkham,ississauga,oF;avFon0;don on0gueuil;tario;astern0st,t;! 0;standard t0t0;ime;!n0;!ada0;!/7;arrie,ramp0;ton; 4/0;mo1nass0;au;ntre0;al;eastern\",\"Eastern\",\"n\",\"usa\"],\"Vancouver\":[\"true\u00a6america 9b7ca5ladn4okanagan,p1surrey,v0yukon;ancouv3ictor7;acific0st,t;! 0;bc,standard time;er;!nada0;!/2;ritish columb0urnaby;ia;pacific\",\"Pacific\",\"n\",\"usa\"],\"Whitehorse\":[\"true\u00a6canada1m0whitehorse,yst;ountain standard time,st;!/yukon\",\"Mountain\",\"n\"],\"Winnipeg\":[\"true\u00a6america 7c2m1w0;est m0innipeg;anitoba;anada3entral0st,t;! 0;standard t0t0;ime;!/0;central\",\"Central\",\"n\",\"usa\"],\"Yakutat\":[\"true\u00a6a0y4;k6laska0merica;! 1n0;! s2;s1t2y0;akutat;tandard t0;ime;st,t\",\"Alaska\",\"n\",\"usa\"],\"Yellowknife\":[\"true\u00a6america mountain,canada,m0yellowknife;ountain0st,t;! 0;standard t0t0;ime\",\"Mountain\",\"n\",\"usa\"]},\"Antarctica\":{\"Casey\":[\"true\u00a6antarctica,cas0;ey,t\",\"Casey\",\"s\",\"ant\"],\"Davis\":[\"true\u00a6a1dav0;is,t;ntarctica,q,ta\",\"Davis\",\"s\"],\"Macquarie\":[\"true\u00a6a2canberra,eastern australia6m0sydney;acquarie0elbourne;! island;e4ntarctica,us0; east0tralia eastern;!ern0;! standard0; time;st,t\",\"Eastern Australia\",\"s\",\"aus\"],\"Mawson\":[\"true\u00a6antarctica,maw0;son,t\",\"Mawson\",\"s\"],\"Rothera\":[\"true\u00a6a1b0city of b0rothera;uenos aires;ntarctica1r0;gentina,st,t;!/palmer\",\"Argentina\",\"s\"],\"Troll\":[\"true\u00a6antarctica,g2troll0;! 0;research station,t1;mt,reenwich mean t0;ime\",\"Troll\",\"s\",\"troll\"],\"Vostok\":[\"true\u00a6antarctica,vost0;!ok\",\"Vostok\",\"s\"]},\"Asia\":{\"Almaty\":[\"true\u00a6a6central asia,east kazakhstan time,k2nur sultan,p1s0taraz,ust kamenogorsk;emey,hymkent;avlodar,etropavl;a0z;ragandy,z0;!akhstan0;! eastern;lm1s0;ia,tana;a0t; ata,ty\",\"East Kazakhstan\",\"n\"],\"Amman\":[\"true\u00a6a2eet,irbid,jo0russeifa,wadi as sir,zarqa;!r0;!d1;mm0sia;an\",\"Eastern European\",\"n\",\"jord\"],\"Anadyr\":[\"true\u00a6a0petropavlovsk kamchatsky;na0sia;dyr0t;! time\",\"Anadyr\",\"n\"],\"Aqtau\":[\"true\u00a6a1kazakhstan western,mangghysta\u016b/mankis3tashkent,west 0;asia,kazakhstan5;lm2q1s0;hgabat,ia;tau;a0t; ata,-ata0; time\",\"West Kazakhstan\",\"n\"],\"Aqtobe\":[\"true\u00a6a1kazakhstan western,tashkent,west 0;asia,kazakhstan5;kto5lm2qt1s0;hgabat,ia;o3\u00f63;a0t; ata,-ata0; time;be\",\"West Kazakhstan\",\"n\"],\"Ashgabat\":[\"true\u00a6as4t0;km,m2urkmen0;a4istan0;! time;!st,t;hga1ia0;!/ashkhabad;bat\",\"Turkmenistan\",\"n\"],\"Atyrau\":[\"true\u00a6a1gur'yev,kazakhstan western,tashkent,west 0;asia,kazakhstan6;lm3s2t0;irau,yra0;u,\u016b;hgabat,ia;a0t; ata,-ata0; time\",\"West Kazakhstan\",\"n\"],\"Baghdad\":[\"true\u00a6a6ba5dihok,erbil,i3k2mosul,na1r0;amadi,iyadh;jaf,sirC;arbala,irkuk,uwait;q,r0;aq,q;ghdad,sr9;bu ghurayb,d diw6l 5rab1s0; sulaym5ia,t;!i0;a0c;!n0;! time;amar2basrah al qadim2falluj2hill2kut,mawsil al jadid2;an0;iy0;ah\",\"Arabian\",\"n\"],\"Baku\":[\"true\u00a6a0baku,ganja,lankaran,sumqayit;sia,z0;!e0t;!rbaijan0;! time\",\"Azerbaijan\",\"n\"],\"Bangkok\":[\"true\u00a6asiaAbangkok,ch7h5i3jakarta,mueang nontha8na2pak kret,s0udon thani;amut prakan,e0i racha,outh east0; asia;khon ratchasima,m di9;ct,ndochina0;! time;a0ue;iphong,noi,t y2;iang m1on 0;buri;ai;!/0;phnom_pe0vientiane;nh\",\"Indochina\",\"n\"],\"Barnaul\":[\"true\u00a6a3b2kra0north a3;snoyarsk0t;! time;arnaul,iysk;sia\",\"Krasnoyarsk\",\"n\"],\"Beirut\":[\"true\u00a6asia,bei3e2l0ra's bay3;b0ebanon;!n;astern european time,et,urope eastern;rut\",\"Eastern European\",\"n\",\"leb\"],\"Bishkek\":[\"true\u00a6asia,bishkek,k0osh;g2yrgy0;stan,zstan0;! time;!t,z\",\"Kyrgyzstan\",\"n\"],\"Brunei\":[\"true\u00a6asia,b0;dt,n2r0;n,unei0;! darussalam time;!t\",\"Brunei Darussalam\",\"n\"],\"Chita\":[\"true\u00a6asia,chita,yak0;t,utsk0;! time\",\"Yakutsk\",\"n\"],\"Choibalsan\":[\"true\u00a6as2choibalsan,dornods\u00fckhbaatar,mongol2ula0;anbaatar0t;! time;ia\",\"Ulaanbaatar\",\"n\"],\"Colombo\":[\"true\u00a6as6c4dehiwala mount lavin6i2kolkata,lk1m0new delhi,sri lanka;oratuwa,umb4;!a;ndia0st;! time,n;henn0olombo;ai;ia\",\"India\",\"n\"],\"Damascus\":[\"true\u00a6a4d3eet,h2latak5sy0;!r0;!ia;am3oms;amascus,eir ez zor;leppo,r raqq1s0;ia;ah\",\"Eastern European\",\"n\",\"syr\"],\"Dhaka\":[\"true\u00a6asiaGbDcBd9jess8khul7mymensingh,na4pa3ra2s1t0;angail,ungi;aid8hib4ylhet;jshahi,ng7;b3ltan,r naogaon;gar5r0t3;ayan0singdi;ganj;na;ore;haka,inaj0;pur;hattogram,o0;milla,x's bazar;a0d,gd,ogra,st;gerhat,ngladesh0rishal;! time;!/dacca\",\"Bangladesh\",\"n\"],\"Dili\":[\"true\u00a6asia,dili,east timor1tl0;!s,t;! time\",\"East Timor\",\"s\"],\"Dubai\":[\"true\u00a6a5dubai,g3mus1om0ras al khaim2sharj2;!an,n;aff0c5;ah;st,ulf0;! time;bu dhabi,jm2rabi2sia0;!/musc0;at;an\",\"Gulf\",\"n\"],\"Dushanbe\":[\"true\u00a6asia,dushanbe,t0;ajikistan1j0;!k,t;! time\",\"Tajikistan\",\"n\"],\"Famagusta\":[\"true\u00a6asia,e0famagusta,northern cyprus;astern european time,et,urope eastern\",\"Eastern European\",\"n\",\"eu3\"],\"Gaza\":[\"true\u00a6asia,eet,gaza2p0;alestine,s0;!e;! strip\",\"Eastern European\",\"n\",\"pal\"],\"Hebron\":[\"true\u00a6asia,e0hebron,west bank;ast jerusalem,et\",\"Eastern European\",\"n\",\"pal\"],\"Ho_Chi_Minh\":[\"true\u00a6asia7bien hoa,can tho,da 5ho3nha tr6qui nh8rach gia,sa dec,thi xa phu my,v0;ietnam1n0ung tau;!m;! south; chi 0_chi_0;minh;lat,n0;ang;!/saig0;on\",\"Indochina\",\"n\"],\"Hong_Kong\":[\"true\u00a6asia,h0kowloon,tsuen wan;k3ong0; kong1_k0k0;ong;! time;!g,st,t\",\"Hong Kong\",\"n\"],\"Hovd\":[\"true\u00a6as4bayan-\u00f6lgiigovi-altaihovduvszavkhan,hov2west0; 0ern 0;mongol2;d0t;! time;ia\",\"Hovd\",\"n\"],\"Irkutsk\":[\"true\u00a6a2brat3irk0north asia east,ulan ude;t,utsk0;! time;ngar0sia;sk\",\"Irkutsk\",\"n\"],\"Jakarta\":[\"true\u00a6aZbTcRdepQiNjKkediri,lJmGpArengasdengklQs4t2w0yogyakM;est0ib; indoneXern indonesia time;a0egal;n4sikmal3;ema4itubondo,outh tan3u0;kabumi,medaSra0;b0kF;aya;ge0;raO;a4e1robolinggo,urw0;akAokerto;ka1ma0rcut;laKtangsiantar;long2nbaru;daIl3mulaIruI;a1ed0;an;diun,laF;embaE;a0ember;k0mbi,vasumatra;arta;d1ndonesia0;! western;!n;ok;i0urug;ampea,bino5leungsir,mahi,putat,rebon;a1e0injai,ogor;kasi,ngkulu;nd0tam;a0u1; aceh,r lampu0;ng;sia\",\"Western Indonesia\",\"s\"],\"Jayapura\":[\"true\u00a6a2east1indonesia eastern,jayapura,m0new guinea,wit;alukus,oluccas; indones1ern indonesia time;mbon,s0;ia\",\"Eastern Indonesia\",\"s\"],\"Jerusalem\":[\"true\u00a6as7beersheba,haifa,i2j0petah tiqwa,rishon leziyyon,tel 9west je1;e0mt;rusalem;d3l,s0;r0t;!ael0;! time;dt,t;hdod,ia0;!/tel_0;aviv\",\"Israel\",\"n\",\"isr\"],\"Kabul\":[\"true\u00a6a1herat,jalalabad,ka0mazar e sharif;bul,ndahar;f0sia;!g0t;!hanistan0;! time\",\"Afghanistan\",\"n\"],\"Kamchatka\":[\"true\u00a6a2kamchatka,pet0;ropavlovsk0t; kamchatsky,-kamchatski time;nadyr,sia\",\"Petropavlovsk-Kamchatski\",\"n\"],\"Karachi\":[\"true\u00a6asia,bLchiniKdera ghaziIfaisalHgujraGhyderHislamHjhang sadr,kElaDm8nawabshah,okaBp4quetta,ra3s0;a1h0ialkJukkN;ahkIekhupu9;ddiqEhiwal,rgodha;him yarEwalpindi;ak1eshawar,k0;!t;!istan0;! time;a3i1u0;lt9zaffar7;ngo0rpur khas;ra;lir cantonment,rd6;hore,rkana;a0otli;moke,rachi,s8;n5t;abad; kh0;an;ot;a1himber,ure0;wala;hawalp0ttagram;ur\",\"Pakistan\",\"n\"],\"Kathmandu\":[\"true\u00a6asia3biratnagar,kath4n1p0;atan,okhara;epal,p0;!l,t;!/kat0;mandu\",\"Nepal\",\"n\"],\"Khandyga\":[\"true\u00a6asia,khandyga,yak0;t,utsk0;! time\",\"Yakutsk\",\"n\"],\"Kolkata\":[\"true\u00a60:3D;1:3L;2:2D;3:3M;4:3J;a35b2Dc24d1We1Uf1Sg1Fh1Ci18j13k0Pl0Km0Cn05odis3KpVquthbull3DrNsFt9u8v5warang2Myamun1P;a6el1Ui5;jayawa2Vsakha0HzianagC;doda2Orana11;daip0jja23lhasn1ttar pradesh;a8eXh7iru5umk0;chirap0Mnelve2p5vottiy0;a39p0;ane,iruvananthapur0Noothuku2Yriss0;mb5njo1X;ar0L;aBecunder4h9i8lst,o7r1Fu5;jan37r5;at,endr1C;l2Znip2N;k3liguKngrau2rJ;ahj1Zi5ri2Oya0L;mo1Mvaji07;har1Xlem,mbh24ng2t04ug0Y;a6e0Eoh5;iItak;ebare2i9j7m5nc1Gtl0Aurke37;ag5g5p0;und08;a5kot;hmund26sth2A;ch0p0;a9imp8roddat0u5;ducher23n5rn17;a5e;sa;ri;li,n7rbha6t5;ia2Vna;ni;chku2Ti5;ha2Gp21;a7e6izam4o5;i1Vwrang2B;l0Sw del0Y;di2Kg7i0Ejaf2Fn5re2Oshik,vi mumb15;ded,g5;i,loi j1V;ercoil,p0;a8eerut,irz25o7u5yso0Y;lugu,mb10rwa1Izaffar5;n1p0;nghyr,rad4;chili7d6harasht1Fleg07n5thu1Fu;ga0Iip0;hya,ur0V;patnG;a7u5;cknow,dhia5;na;l bahadur5t0; n1;aDhaBo8u5;kat6lt5rno1P;a2i;pal2;l5rWta,zhikode;h1Nka1Kl5;am;nd5ragp0;wa;kina13l8marOnp0r5shmir,tih3;i6na5ol ba18;l,tV;mn1;lakuric03y11;a6han5odNunagadh;si;b0Rip0l6m5;mu,n1shedp0;andh3gGna;chalkaranji,mph0In5st;!d5;!ia5o00;! time,n;a6is3ospet,u5;b2g2;o0Hp0ridw3;aChazi4o9reater noi0Mu6wali5y04;or;jar0OlbarQnt0rg6wa5;ha12;aon;rak6sa5;ba;hp0;juw8n5ya;dh6g5;an1;in1;aka;ar5iroz4;id4rukh4;l5taw0M;loF;aAe8h6indigul,ombOurg5;!ap0;anb0Uul5;ia;hra dun,l5was;hi;rbhan5vange8;ga;a09h8o5uttack;ch6imbato5;re;in;a6enn5;ai;nd5pL;a5i0C;!nn1;aNeKhBi9or7rahm04u5;landshahr,rh5;anp0;iv2;li;d3har sharif,jZkan07l5;asp0imoC;aAi7op6u5;baneshw3sav5;al;l6wan5;di,i;ai,wa6;g6ratp0tpa5vn1yand3;ra;alp0;l5ngaluru;gaum,la5;ry;hAli,r6thin5;da;a6ddham5eilly;an;n1s5;at;a6rai5;gh;ramp0;gQhmLizawl,jmKkoRlHmDnantCrrBs6urang4va5;di;ans8ia5;!/ca5;lcut5;ta;ol;ah;ap0;arnath,batt0r5;ava5its3o9;ti;ur;appuz6i5lah4w3;garh;ha;er;adn1ed4;ab5;ad;ag3;ar;arta5ra;la\",\"India\",\"n\"],\"Krasnoyarsk\":[\"true\u00a6a2kra0north a2;snoyarsk0t;! time;sia\",\"Krasnoyarsk\",\"n\"],\"Kuala_Lumpur\":[\"true\u00a6aHbukit mertajGgeorge town,ipoh,johor bahFk8m4petali3s0taipiE;e1hah alFu0;ba1ngai petani;paBremb7;ng jaya;ala1y0;!s,t;cca,ysia0;! time;ampung baru suba5la5ota bha6ua0;la1nt0;an; 0_l1;l0terengganu;umpur;ng;ru;am;lor setar,sia\",\"Malaysia\",\"s\"],\"Kuching\":[\"true\u00a6asia,k4m2s0tawau;a0ibu;bahsarawak,ndakan;alaysia0iri,yt;! time;ota kinabalu,uching\",\"Malaysia\",\"n\"],\"Macau\":[\"true\u00a6asia6beiji5c2hong ko5m0urumqi;ac0o;!au;h0st;ina0ongqi1;! time;ng;!/macao\",\"China\",\"n\"],\"Magadan\":[\"true\u00a6asia,mag0;adan0t;! time\",\"Magadan\",\"n\"],\"Makassar\":[\"true\u00a6asiaBba8c5denpa4indonesia central,k3l2ma1palu,s0wita;amarinda,ulawesi;kas2nado,taram;abuan bajo,oa jan7;endari,up8;sar;e0ity of bal3;lebesbalinusa,ntral indonesia0;! time;l0njarmasin;ikpap0;an;!/ujung_pand0;ang\",\"Central Indonesia\",\"s\"],\"Manila\":[\"true\u00a6a04bWcRdaPgeneral santOiMlJmCnaBoAp4quezIsan1ta0zamboanga;clobZguig,rlac,ytE; 1t0;a ro2ol;fernando,jose del monte,pab02;a3h1uerto prince0;sa;!ilippine0l,st,t; time,s;gadiRnalanoy,s0;ay,ig;longapo,rmoc;ga,votQ;a0eycauayN;balacat,gugpo poblaci4kati,l3n0;da1ila,silingLtamp0;ay;luyong,ue;ingDol6;on;a1egaspi,i0ucena;bertad,pa;pu lapu,s p4;l0mus;igCoiI;os;smar0v5;inB;a0ebu,otabato;b1gayan de oro,in5l0;amba,ooc6;anatu5uy0;ao;a4inan2u0;d0tu2;ta;!gon0;an;co1guio,tang0;as;lod,or;n0sia;geles,tipo0;lo\",\"Philippine\",\"n\"],\"Nicosia\":[\"true\u00a6a5cy3e0n2;astern european time,et,urope0; eastern,/n0;ico2;!p0;!rus;sia\",\"Eastern European\",\"n\",\"eu3\"],\"Novokuznetsk\":[\"true\u00a6a5k2no0prokop'yev1;rth a4vokuznet0;sk;emerovo,ra0;snoyarsk0t;! time;sia\",\"Krasnoyarsk\",\"n\"],\"Novosibirsk\":[\"true\u00a6as3no0siber3;rth central as2v0;osibirsk0t;! time;ia\",\"Novosibirsk\",\"n\"],\"Omsk\":[\"true\u00a6asia,oms0;k0t;! time\",\"Omsk\",\"n\"],\"Oral\":[\"true\u00a6a2kazakhstan western,oral,tashkent,west 0;asia,kazakhstan0;! 4;lm1s0;hgabat,ia;a0t; ata,-ata 0;time\",\"West Kazakhstan\",\"n\"],\"Pontianak\":[\"true\u00a6asia,b2indonesia western,pontianak,tanjung pinang,w0;est0ib; b0ern indonesia time;orneo\",\"Western Indonesia\",\"n\"],\"Pyongyang\":[\"true\u00a6asia,chongjin,h7k4n3p2s0won8;ariw0eoul,inuiAunch'0;on;rk,yongya7;amp'o,orth korea;a1orea0p,st;!n time;eso3nggye;a1ungnam,ye0;san;e1mhu0;ng;ju\",\"Korean\",\"n\"],\"Qatar\":[\"true\u00a6a2doha,kuwait,qa0riyadh;!t0;!ar;r2s0;ia0t;!/bahrain; rayyan,ab0;!i0;a0c;!n0;! time\",\"Arabian\",\"n\"],\"Qostanay\":[\"true\u00a6a2central asia,east kazakhstan time,k0qo1;azakhstan eastern,o0;stanay;lmt,s0;ia,tana\",\"East Kazakhstan\",\"n\"],\"Qyzylorda\":[\"true\u00a6a4k1qy2tashkent,west 0;asia,kazakhstan7;azakhstan western,y0zyl-1;zyl0;orda;lm1s0;hgabat,ia;a0t; ata,-ata0; time\",\"West Kazakhstan\",\"n\"],\"Riyadh\":[\"true\u00a6a9burayd8dammam,ha7jedd8k6me5najran,riyadh,s4ta3y0;anbu,e0;!m0;!en;'if,buk;ultan3yot;cca,dina;hamis mush6uw6;'il,far al batin;ah;bha,l 8ntarctica/syowa,rab4s0;ia0t;!/0;aden,kuw0;ait;!i0;a0c;!n0;! time;hufuf,jubayl,kharj,mubarraz\",\"Arabian\",\"n\"],\"Sakhalin\":[\"true\u00a6asia,sak0yuzhno sakhalinsk;halin0t;! 0;island,time\",\"Sakhalin\",\"n\"],\"Samarkand\":[\"true\u00a6asia,bukhara,nukus,qarshi,samarkand,uz0;bekistan0t;! 0;time,west\",\"Uzbekistan\",\"n\"],\"Seoul\":[\"true\u00a6aPbuMchHdaeGgChwaseoRiBjeAk7m6pohaFrok,s2u1wonJy0;aCeosu;ijeongbuQlsL;e1outh korea,u0;nEwH;joAo0;ngnamMul;asGokpo;imhae,or0r,st,wangmyo7;!ea0;!n time;ju,on8;cCksBn6;angneu2oyaEu1wa0;ng5;mi,ns8riD;ng;gu,je4;angw3eon2in1un0;che2;ju;an,gju7;on;c1s0;an;heon3;n0sia;san1ya0;ng0; si\",\"Korean\",\"n\"],\"Shanghai\":[\"true\u00a60:3J;1:36;2:34;3:37;4:3D;a3Cb31c2Nd2He30f2Cg26h1Qji1Ek1Bl0Ym0Wn0Tordos,p0Pq0Lrizh10s08t01u3FwSxLyEz5;aoCh6i5ouc3unyi;bo,go0;a7en6ouk2u5; c3h31maWzh2;g2Vj1Izh2;b1Vng5o3E;jiakou5zh2;! shi xuanhua qu;ya0z27;an9i7u5;ci,e18n5;c3fu;b4c9n5ya0;cZgk2;c3g5ji,t2Q;j17qu1sh16zh2;i6uc5;ha0;a6n5uyi0;di,gt2Lh1Gi0pu,t2Lx13ya0;m17n5;!g5ni0t0Eya0;t1ya0;aBe9u5;h6so0w1Cx5zh2;i,ue;a5u;i,n;i0Hn5;sh1zh2;fang5nxi1;di1;a8i6ong5;chuans0XhDli02sh1;an5eli0;j4sh10;i6ng5;gu,sh1;an,hec1Wyu1zh2;anmi0hAi8u5;i5zh2;h5zh2;ua;c5pi0;hu1;a7en6i5uangya14;jiaz15qi,y1;gli,ya0zh0G;n6o5s0I;gu1xi0;g5t2;h1Pqiu,rKyu;i5uan1J;aFn5o14qih1Y;g5huangdH;dGh1L;an0Ting7rc,u5;ti1yang5;! H;ding0QxZ;an5eijYingbo;ch5ji0ni0to0ya0;a0o0;entoug2ianRuda5;njU;aEi8u5;anc3o6qi5;ao;he,ya0;a7jPn5upansh02;fTxia 5yi;chengguanI;n0Do5;c3y5;a0u1;i0Wn5ohek2;g5zh2;fa0;ai6un5;mi0sh1;fe0yu1;'1aAe9l4n6u5xi;jCt0U;an,c3g5i0zh2;de5li0zh2;zhE;ya0;musi,n8o5xi0;j6z5;uo;ia0;g5shG;m7xi;aGeCkt,oBu5;a6i0Dlan ergi,m5n1;en;i7ng5y4;ga0s5;hi;'1b9n1;hhot,ng ko0;bi,f7ga0ng5ze;sh5ya0;ui;ei;i7n5rb4;d1g5;u,zh2;c3k2l0F;a9u5;an6i5li;l4ya0zh2;g5k2;do0yu1zh2;nsu,opi0;en7o6u5;ji1shQx4zh2;sh1;d2g5;hua0;a6eNong5;gu1hR;d6lian5ndo0qi0to0;!g;o5uk2;nghN;angHh5n,st,t;aAen7i5n,oZuG;fe0na5;! time;g5zh2;d5zho0;e,u;ng6o5;ya0zh2;ch7de,sh6zh5;i,ou;a,u;un;zh2;a9e5;i6n5;gbu,xi;'1h5ji0;ai;i7o5yan nur;di0t2;ou;c3sh1y4;an;he0;nDsia5;!/5;ch8harb4kashg6u5;rumqi;ar;in;o5ungki0;ng5;qi0;da,qi0sh5ya0;an,un;ng\",\"China\",\"n\"],\"Singapore\":[\"true\u00a6asia,kuala lumpur,s0woodlands;g0ingapore;!p,t\",\"Singapore\",\"s\"],\"Srednekolymsk\":[\"true\u00a6asia,chokurdakh,sre0;dnekolymsk,t\",\"Srednekolymsk\",\"n\"],\"Taipei\":[\"true\u00a6asia,banqiao,cst,h7k5roc,t0;a1w0;!n;i0oyu1;ch2n0pei,w0;an;aohsi0eel0;ung;sinchu,ualien\",\"Taipei\",\"n\"],\"Tashkent\":[\"true\u00a6a3namangan,qo`q4tashkent,uz0;!b0t;!ekistan0;! east;ndij0sia;on\",\"Uzbekistan\",\"n\"],\"Tbilisi\":[\"true\u00a6asia,ge1kuta0tbil0;isi;!o0t;!rgia0;!n\",\"Georgia\",\"n\"],\"Tehran\":[\"true\u00a6aQbMgorgWhamViKkCmaBn8orumiy7pasragad branch,q4rasht,s2t1varam6yazd,za0;hedVnjV;abHehrU;a0hirRirjT;bzevar,nandEri,v3;a0om;rchak,zv0;in;eh;a0eyshabur;jaf0zar0;ab4;layer,shh3;a4erman3ho0;meyni sDrram0wy;ab0sC;ad;!shah;h1r0;aj;riz;r0sfahB;!an,dt,n,st;a2irjand,o0uk9;jnu0ruje0;rd;b3ndar abbas;b4hv3m2r1sia,zads0;hahr;ak,dabil;ol;az;ad0;an\",\"Iran\",\"n\"],\"Thimphu\":[\"true\u00a6asia2b0thimphu;hutan,t0;!n;!/thimbu\",\"Bhutan\",\"n\"],\"Tokyo\":[\"true\u00a60:11;1:1A;2:10;a18ch16fu0Zgifu14h0Oi0Ij0FkZmTnMoKsFt9u8waka05y3;a6o3;k3no;kaic1Co3;ha2su0;maKo;ji,tsun0F;aka7o3sukuba;k5makom05y3;a2o3;hOna0ta;oro03us0Qyo;m0Jrazu0sa1tsu1;a5end00hi4o0u3;i10zu0;monose1zuo0;ita2k3ppoLsebo;ai,u06;dawa05i0Wka3sa0t0E;ya2za1;a6eyaga0Qi3umazu;i4shi3; tokyo0Inomiya ha2;ga0R;g3ha,ra0G;a3oX;no,o0sa1;a5i3orio0;na3to,yaza1;mirinkOto;chiDeb4tsu3;do,m8ya2;as0J;aBi9o7u3y6;mam5r4shi3;ro;ashi1e,ume;oto;be,c0Dfu,ri3shigaK;ya2;shiwa3takyushu;da;gosVkogawacho honmKmirenjaku,na8s5wa3;g3sa1;oe,uc07;hi01u3;g3kabe;ai;zaY;ap4dt,oetJp3st;!n;an;bara1chi4ta3wa1zu3;mi;ha5n3;omi3;ya;ra;a8i3oncho;meBr4t3;acR;a4os3;a1hi2;kaNtsu0;chi5kodate,mam3;at3;su;nohe,o3;ji;ji8ku3;i6o0s3ya2;hi2;ma;ka; sD;!sa7;i3ofu;ba,g6;geoshimo,k7mag5njo,omori,s3tsugi;ahika3ia;wa;asa1;ki;as4i3;ta;hi\",\"Japan\",\"n\"],\"Tomsk\":[\"true\u00a6asia,oms0tomsk;k,t\",\"Omsk\",\"n\"],\"Ulaanbaatar\":[\"true\u00a6asia3m1ula0;anbaatar,n 3t;n0ongolia;!g;!/ulan_0;bator\",\"Ulaanbaatar\",\"n\"],\"Ust-Nera\":[\"true\u00a6asia,ust-nera,vla0;divostok,t\",\"Vladivostok\",\"n\"],\"Vladivostok\":[\"true\u00a6asia,k1vla0;divostok,t;habarovsk0omsomolsk on amur;! vtoroy\",\"Vladivostok\",\"n\"],\"Yakutsk\":[\"true\u00a6asia,blagoveshchen1yak0;t,ut0;sk\",\"Yakutsk\",\"n\"],\"Yangon\":[\"true\u00a6asia4b3kyain seikgyi township,m0nay pyi taw,pathein,sittwe,yang5;a1eiktila,m0onywa;!r,t;ndalay,wlamyine;ago,urma;!/rango0;on\",\"Myanmar\",\"n\"],\"Yekaterinburg\":[\"true\u00a6asia,chelyabin7eka5k4magnitogor7nizhn3or2perm,s1tyumen,ufa,yek0zlatoust;a4t;terlitamak,urgut;e3sk;evartov3y tagil;amensk ural'skiy,urgan;teri0;nburg;sk\",\"Yekaterinburg\",\"n\"],\"Yerevan\":[\"true\u00a6a0caucasus,yerevan;m2rm0s1;!en0;ia;!t\",\"Armenia\",\"n\"]},\"Atlantic\":{\"Azores\":[\"true\u00a6a0hmt;tlantic,zo0;res,st,t\",\"Azores\",\"n\",\"eu0\"],\"Bermuda\":[\"true\u00a6a2b0;ermuda,m0;!u;st,t0;!lantic\",\"Atlantic\",\"n\",\"usa\"],\"Canary\":[\"true\u00a6atlantic,canary1europe western,las palmas de gran canaria,santa cruz de tenerife,we0;stern european,t;! islands\",\"Western European\",\"n\",\"eu1\"],\"Cape_Verde\":[\"true\u00a6atlantic,c0;a1pv,v0;!t;bo verde0pe verde;! is\",\"Cape Verde\",\"n\"],\"Faroe\":[\"true\u00a6atlantic2f0;aroe0o,ro;! islands;!/faeroe\",\"Western European\",\"n\",\"eu1\"],\"Madeira\":[\"true\u00a6atlantic,europe western,madeira1we0;stern european,t;! islands\",\"Western European\",\"n\",\"eu1\"],\"Reykjavik\":[\"true\u00a6atlantic,coordinated universal3g2i0reykjavik,utc,zulu;celand,s0;!l;mt,reenwich mean0; time\",\"Greenwich Mean\",\"n\"],\"South_Georgia\":[\"true\u00a6atlantic,gs1s0;gs,outh georgia;!t\",\"South Georgia\",\"n\"],\"Stanley\":[\"true\u00a6atlantic,f0stanley;alkland1k0lk;!st,t;! island0;!s\",\"Falkland Islands\",\"s\"]},\"Australia\":{\"Adelaide\":[\"true\u00a6a2cen0south 1; 0tral 0;australia;c2delaide,ustralia0;! 0/south,n 0;central;dt,st,t\",\"Central Australia\",\"s\",\"aus\"],\"Brisbane\":[\"true\u00a6a1brisbane0gold coa5logan,q4townsville;! time;e3ustralia0;!/q1n east0;!ern;ueensland;st\",\"Brisbane\",\"s\"],\"Broken_Hill\":[\"true\u00a6a1broken_hill,cen0y3; australia standard time,tral australia;c2delaide,ustralia0;! central,/y0;ancowinna;st,t\",\"Central Australia\",\"s\",\"aus\"],\"Darwin\":[\"true\u00a6a0darwin,northern territory;cst,ustralia0;!/north,n central\",\"Australian Central\",\"s\"],\"Eucla\":[\"true\u00a6a0cw4eucla;cw4us0; central w1tralia0;!n central western;!e0;st;dt,st,t\",\"Australian Central Western\",\"s\"],\"Hobart\":[\"true\u00a6a0canberra,eastern austral5hobart,king island,melbourne,sydney,t4;e8us0; east5tralia0;! 3/0n 3;currie,t0;asman0;ia;easte1;!e0;rn;dt,st,t\",\"Eastern Australia\",\"s\",\"aus\"],\"Lindeman\":[\"true\u00a6a0brisbane time,lindeman,whitsunday islands;est,ustralia0;!n eastern\",\"Brisbane\",\"s\"],\"Lord_Howe\":[\"true\u00a6australia3l0;h1ord howe0;! island;dt,st,t;!/lhi\",\"Lord Howe\",\"s\",\"lhow\"],\"Melbourne\":[\"true\u00a6a0canberra,eastern austral4geelong,melbourne,sydney,v3;e7us0; east4tralia0;! 2/v0n 2;ictor0;ia;easte1;!e0;rn;dt,st,t\",\"Eastern Australia\",\"s\",\"aus\"],\"Perth\":[\"true\u00a6a4perth,w0; 2est0; 1ern australia0;! time;australia;ustralia1w0;dt,st,t;! weste1/west,n west0;!e0;rn\",\"Western Australia\",\"s\"],\"Sydney\":[\"true\u00a6a0c5eastern australia time,melbourne,new south wales,sydney,wollongong;e8u0;!s0;! east4tralia0;! 2/0n 2;act,c0nsw;anberra;easte1;!e0;rn;dt,st,t\",\"Eastern Australia\",\"s\",\"aus\"]},\"Etc\":{\"GMT\":[\"true\u00a6coordinated universal3etc2g0utc,zulu;mt,reenwich0;! mean1;!/greenwich; time\",\"Greenwich Mean\",\"n\"],\"UTC\":[\"true\u00a6coordinated universal7etc2g1u0z4;ct,n5tc;mt,reenwich mean5;!/0;u1z0;ulu;ct,n0;iversal; time\",\"Greenwich Mean\",\"n\"]},\"Europe\":{\"Amsterdam\":[\"true\u00a6a9brussels,c6e4groning7madrid,n2paris,ro1t0utrecht;he hague,ilburg;mance,t9;etherlands,l0;!d;indhov2urope0;! central;e1openhag0;en;ntral european,st,t;lmere stad,m0;s0t;terdam\",\"Central European\",\"n\",\"eu2\"],\"Andorra\":[\"true\u00a6a3brussels,c1europe0madrid,paris,romance;! central;e0openhagen;ntral european,st,t;d,nd0;!orra\",\"Central European\",\"n\",\"eu2\"],\"Astrakhan\":[\"true\u00a6astrakh1europe,m0russi1st petersburg,volgograd time;oscow,sk;an\",\"Moscow\",\"n\"],\"Athens\":[\"true\u00a6athens,e1gr0thessaloniki;!c,eece;astern european,et,urope0;! eastern\",\"Eastern European\",\"n\",\"eu3\"],\"Belgrade\":[\"true\u00a6b9c7europe3madrid,n2p1romance,s0;i,lovenia,vn;aris,risti4;is,ovi sad;! central,/0;ljublja1podgorica,s0zagreb;arajevo,kopje;na;e0openhagen;ntral european,st,t;elgrade,russels\",\"Central European\",\"n\",\"eu2\"],\"Brussels\":[\"true\u00a6antwerp6b3c1europe0gent,liege,madrid,paris,romance;! central;e0harleroi,openhag4;ntral european,st,t;e0mt,russels;!l0;!gium;en\",\"Central European\",\"n\",\"eu2\"],\"Bucharest\":[\"true\u00a6b5c4e2gala1iasi,oradea,ploies1ro0timisoara;!mania,u;ti;astern european,et,urope0;! eastern;luj napoca,onstanta,raiova;ra0ucharest;ila,sov\",\"Eastern European\",\"n\",\"eu3\"],\"Budapest\":[\"true\u00a6b6c3debrec4europe2hu0madrid,paris,romance;!n0;!gary;! central;e1openhag0;en;ntral european,st,t;russels,udapest\",\"Central European\",\"n\",\"eu2\"],\"Busingen\":[\"true\u00a6b5c3de2europe1germa0madrid,paris,romance,saxo0;ny;! central,/berlin;!u;e0openhag3;ntral european,st,t;avaria,r0using1;em0ussels;en\",\"Central European\",\"n\",\"eu2\"],\"Chisinau\":[\"true\u00a6chisinau,e2m0;d0oldova;!a;astern european,et,urope0;! eastern,/tiraspol\",\"Eastern European\",\"n\",\"eu2\"],\"Copenhagen\":[\"true\u00a6arhus,brussels,c2d1europe0madrid,paris,romance;! central;enmark,k,nk;e0mt,openhagen;ntral european,st,t\",\"Central European\",\"n\",\"eu2\"],\"Dublin\":[\"true\u00a6ace,british8cork,d7e6g5i3l0tse,waterford;i0ond1;merick,sb0;on;e,r0st;eland,l;alway,mt,reenwich mean2;dinburgh,ire,urope;mt,ublin; time\",\"Irish\",\"n\",\"eu1\"],\"Gibraltar\":[\"true\u00a6b5c3europe2gi0madrid,paris,romance;!b0;!raltar;! central;e0openhagen;ntral european,st,t;dst,russels,st\",\"Central European\",\"n\",\"eu2\"],\"Helsinki\":[\"true\u00a6e3fi1helsinki,t0vantaa;ampere,urku;!n0;!land;astern european,et,spoo,urope0;! eastern,/mariehamn\",\"Eastern European\",\"n\",\"eu3\"],\"Istanbul\":[\"true\u00a6aYbScQdOeKgJiHkFmBosmAs4t1u0v07zeytinburnu;eskuedWmr9;arsus,r1ur0;!kZ;!abzon,t;a3i1ultan0;beyJgazi;sIv0;as,erek;msun,n0;cakteBliurfa;aniye;a1er0uratpaH;kezefendi,sin;l0niF;atQte6;a0irikkale,onPutahP;hramanmaras,rabaglGyseS;sJzmi0;r,t;aziantep,ebze;lazig,rzurum,s1uro0;pe;en0kiC;l8yurt;eniz0iyarbakB;li;ankaEor0;lu,um;a1ur0;sa;gcil2hcelievl1likes5sak4t0;ikent,mB;er;ar;d7n4rnavutko3sia/is2ta0;seh0;ir;tanbul;ey;kara,ta0;k0l0;ya;a1iyam0;an;na,paza0;ri\",\"Turkey\",\"n\"],\"Kaliningrad\":[\"true\u00a6e0kaliningrad;astern european,et,urope\",\"Eastern European\",\"n\"],\"Kiev\":[\"true\u00a6bila tserkLcherIdGeDhorlCivano frankivHk8l7m5odessa,poltaLriv4sumy,ternopil,u2vinnyts1z0;aporizhzh0hytomyr;ya;a,kr0;!ai0;ne;a0ykolayE;ki5riu8;ut9vC;amyanske,h1iev,r0yB;emenchuk,opyv1yvyy rih;ark9erson,mel0;nytskyy;ivka;astern european,et,urope0;! eastern,/simfero0;pol;nipro,onet0;sk;kasy,ni0;h0vtsi;iv;va\",\"Eastern European\",\"n\",\"eu3\"],\"Kirov\":[\"true\u00a6europe,kirov,m0russian,st petersburg,volgograd time;oscow,sk\",\"Moscow\",\"n\"],\"Lisbon\":[\"true\u00a6amadora,europe5lisbon,p2we0;st0t;! europe,ern european;ort0rt,t;o,ugal0;! mainland;! western\",\"Western European\",\"n\",\"eu1\"],\"London\":[\"true\u00a6a0Ob0Ac07d03eXgThRiOj00kingston upon hull,lJmHnBoxSp9reading,s1w0yF;arwick0Aig00olverha7;heffield,o3t2u1w0;an4iH;ffolk,nderland,rr0IsYttL;afNoke on tre0C;meZuth0;a1end on 0;sea;mptG;ly0orts0restF;mouth;ew4o0;r0ttinghamT;th0wC; y0amptonR;orkV;castle upon tyne,port;ancheQi0;dlan4lton keynes;ancaRdn,e2i1o0ut5;nd4;ncolnPsb3verW;e0icesterJ;ds;psw1slingt0;on;ich;ampJert0;fordI;b2l1mt0reenwich mean M;! standard L;asgow,oucesterF;!-eF;dinburgh,s4urope0;!/0;belNguernsMisle_of_m1j0;ersL;an;sex;erby2o1u0;blin,dlH;rset;!sh5;a1ity of westmin0oventry,rawlE;ster;mbridge1rdiff;eAir9lack7r2st,uckingham0;sh0;ire;adford,e3i0;st4tish0;! 0;time;nt;po0;ol;kenhead,mingham;l1xl0;ey;fast;berdeen,rchway\",\"British\",\"n\",\"eu1\"],\"Luxembourg\":[\"true\u00a6brussels,c3europe2lu0madrid,paris,romance;!x0;!embourg;! central;e0openhagen;ntral european,st,t\",\"Central European\",\"n\",\"eu2\"],\"Madrid\":[\"true\u00a6aRbOcJeGfuenDgCjerez de la frontera,lBm8ovieFp6romance,s1terrassa,v0wemt,zaragoza;alladol9igo;a1evilla,pain0;! mainland;badell,n0; sebastiHt0; marti,ander,s montjuic;a0uente de vallecas;lma,mpIris;a0ostolLurcK;dr0laga;id;atiJeganI;asteiz/vitorGijon,ran1;carral el par1labr0;ada;do;ixample,lche,s1urope0;! centr2;!p;a3e1iudad line0openhagen;al;ntral europe0st,t;an;rabanchel,stello de la pla7;a0ilbao,russels,urgos;da0rce0sque;lo4; coru3l0;cala de henar1icante,mer0;ia;es;na\",\"Central European\",\"n\",\"eu2\"],\"Malta\":[\"true\u00a6brussels,c3europe2m0paris,romance;a0lt,t;drid,lta;! central;e0openhagen;ntral european,st,t\",\"Central European\",\"n\",\"eu2\"],\"Minsk\":[\"true\u00a6b4europe,h3m1russian,st petersburg,v0;iteb4olgograd time;ahily0in3osc0sk;ow;omyel,rodna;abruy0elarus,lr,rest,y;sk\",\"Moscow\",\"n\"],\"Monaco\":[\"true\u00a6brussels,c3europe2m0paris,romance;adrid,c0onaco;!o;! central;e0openhagen;ntral european,st,t\",\"Central European\",\"n\",\"eu2\"],\"Moscow\":[\"true\u00a6ar0Db0Ac07dzerzh06europe,fet,grozn05ivano04kYlipet0FmRnNorel,pKrFs8t6v2w-su,y0zelenograd;a0oshkar oW;roslavl,sene02;asyl'evsky ostrIelikiMladi2o0ykhino zhulebT;l0ronezh;gograd Pogda;kavkaz,m08;a0uQver;ganrog,mbD;a4ever3hakhty,molen06ochi,t0yktyvkR; 4a0;ryy osk0vrop0;ol;nSodvT;int 0rX;petersburg;ostov na donu,u1y0;azLbP;!s0;!sia0;!n;e1odolUsk0;ov;nza,trozavodS;a2izhn0ovorossiyR;ekamQi0;y novM;berezhnyye chelny,l'chik;a3dst,oscow1s0urmJ;d,k;! 0;time;khachka1r'0;ino;la;a2himki,ostroma,rasno0urG;d0gvargeisky;ar;l1z0;an;ininsk5uga;vo;yy;in8;entraln1he0;boksary,repovets;iy;el1ry0;an3;gorod;khangel'1mav0;ir;sk\",\"Moscow\",\"n\"],\"Oslo\":[\"true\u00a6a6b5c3europe2madrid,oslo,paris,romance,s0;j0valbard and jan 6;!m;! central;e0openhag4;ntral european,st,t;erg2russels;rctic/longyearby1tlantic/jan_0;may0;en\",\"Central European\",\"n\",\"eu2\"],\"Paris\":[\"true\u00a6bIcFeuropeEfrBl9m7n5paris,r3s0toulouH;aint 1t0; 0rasbourg;etienne;e0oman9;ims,nn1;ant0i7ormandy;es;a0et,ontpellier;drid,rsei1;e havre,i0yon;lle;!a0;!n0;ce;! central;e0openhagen;ntral european,rgy pontoi0st,t;se;ordeaux,russels\",\"Central European\",\"n\",\"eu2\"],\"Prague\":[\"true\u00a6br6c4europe2madrid,ostr3p1romance,s0;k,lovakia,vk;aris,mt,rague;! central,/bratisl0;ava;e0openhagen;ntral european,st,t;no,ussels\",\"Central European\",\"n\",\"eu2\"],\"Riga\":[\"true\u00a6e2kalt,l0riga;atvia,st,v0;!a;ast2e1urope0;! eastern;st,t; europe,ern european\",\"Eastern European\",\"n\",\"eu3\"],\"Rome\":[\"true\u00a6bIcEeuropeCfloreBgenoa,mAnaples,p7r5sicily,t3v0;a0eroK;!t0;!ican city;aran4rieste,u0;rin,scany;mt,om0;a4e;a1ra0;to;dova,lermo,ris;adrid,essiAil6;nce;! central,/0;san_marino,vatic3;atan5e1o0;penhagen,rsica;ntral europe0st,t;an;ari,olog2r0;esc0ussels;ia;na\",\"Central European\",\"n\",\"eu2\"],\"Samara\":[\"true\u00a6europe,izhevsk,s0togliatti on the volga;am0yzran;ara,t\",\"Samara\",\"n\"],\"Saratov\":[\"true\u00a6balakovo,europe,izhevsk,sa0;m0ratov;ara,t\",\"Samara\",\"n\"],\"Sofia\":[\"true\u00a6b2e0imt,plovdiv,sof4varna;astern european,et,urope0;! eastern;g2u0;lgar0rgas;ia;!r\",\"Eastern European\",\"n\",\"eu3\"],\"Stockholm\":[\"true\u00a6brussels,c5europe4goeteborg,ma3paris,romance,s0;e1tockholm,we0;!d4;!t;drid,lmoe;! central;e1openhag0;en;ntral european,st,t\",\"Central European\",\"n\",\"eu2\"],\"Tallinn\":[\"true\u00a6e0tallinn;astern european,e2st1urope0;! eastern;!onia;!t\",\"Eastern European\",\"n\",\"eu3\"],\"Tirane\":[\"true\u00a6al4brussels,c2europe1madrid,paris,romance,tiran0;a,e;! central;e0openhagen;ntral european,st,t;!b0;!ania\",\"Central European\",\"n\",\"eu2\"],\"Ulyanovsk\":[\"true\u00a6europe,m0russian,st petersburg,ulyanovsk,volgograd 2;oscow0sk;! 0;time\",\"Moscow\",\"n\"],\"Uzhgorod\":[\"true\u00a6e0ruthenia,uzhgorod;astern european,et,urope0;! eastern\",\"Eastern European\",\"n\",\"eu3\"],\"Vienna\":[\"true\u00a6a4brussels,c1donaustadt,europe0favorit2graz,linz,madrid,paris,romance,vienna;! central;e1openhag0;en;ntral european,st,t;t,u0;stria,t\",\"Central European\",\"n\",\"eu2\"],\"Vilnius\":[\"true\u00a6e3k2l0vilnius;ithuania,t0;!u;aunas,laipeda;astern european,et,urope0;! eastern\",\"Eastern European\",\"n\",\"eu3\"],\"Volgograd\":[\"true\u00a6europe,m2russian,st petersburg,vol0;gograd0t,zhskiy;! time;oscow,sk\",\"Moscow\",\"n\"],\"Warsaw\":[\"true\u00a6bKcHeuropeGgCkAl8m7p4r3s2torun,w0zabrze;ars0rocl0;aw;osnowiec,zczec6;adIomanA;aris,l,o0raga poludnie;l0znD;!and;adrid,okot3;odz,ubl0;in;ato2iel3rak0;ow;d2li0;wi0;ce;ansk,ynia;! central;e0openhagen,zestochowa;ntral europe0st,t;an;i2russels,y0;dgoszcz,t0;om;alystok,elsko biala\",\"Central European\",\"n\",\"eu2\"],\"Zaporozhye\":[\"true\u00a6e3luhansk2sevastopol,zapor0;izhia lugansk,ozh0;'ye,ye;! east;astern european,et,urope0;! eastern\",\"Eastern European\",\"n\",\"eu3\"],\"Zurich\":[\"true\u00a6brussels,c4europe2geneve,li0madrid,paris,romance,swiss time,zurich;!e0;!chtenstein;! central,/0;busin1vaduz;e1openha0;gen;ntral european,st,t\",\"Central European\",\"n\",\"eu2\"]},\"Indian\":{\"Chagos\":[\"true\u00a6british indian ocean territory,c4i0;ndian1o0;!t;! 0;c0ocean;hagos\",\"Indian Ocean\",\"n\"],\"Christmas\":[\"true\u00a6c0indian;hristmas1x0;!r,t;! island\",\"Christmas Island\",\"s\"],\"Cocos\":[\"true\u00a6c0indian;c2ocos0;! island0;!s;!k,t\",\"Cocos Islands\",\"n\"],\"Kerguelen\":[\"true\u00a6a5french southern2indian,kerguelen1tf0;!t;!st paul4;! 0;& antarctic time,and antarctic0;! lands;msterdam0tf; island\",\"French Southern & Antarctic\",\"s\"],\"Mahe\":[\"true\u00a6indian,mahe,s0;c0eychelles,yc;!t\",\"Seychelles\",\"n\"],\"Maldives\":[\"true\u00a6indian,m0;aldives,dv,v0;!t\",\"Maldives\",\"n\"],\"Mauritius\":[\"true\u00a6indian,m0port louis;auritius,u0;!s,t\",\"Mauritius\",\"n\"],\"Reunion\":[\"true\u00a6indian,r0;e0\u00e9u1;t,u0;nion\",\"R\u00e9union\",\"s\"]},\"Pacific\":{\"Apia\":[\"true\u00a6apia,pacific,s2w0;est s1s0;!m,t;amoa\",\"West Samoa\",\"s\"],\"Auckland\":[\"true\u00a6a2christchurch,manukau,n0pacific,wellington;ew zea2orth shore,z0;!dt,l,mt,st,t;ntarctica/1uck0;land;mcmurdo,south_pole\",\"New Zealand\",\"s\",\"nz\"],\"Bougainville\":[\"true\u00a6bougainville,guinea2p0;a0gt;cific,pua new guinea;!n\",\"Papua New Guinea\",\"s\"],\"Chatham\":[\"true\u00a6cha0nz-chat,pacific;dt,st,t0;!ham0;! 0;islands,time\",\"Chatham\",\"s\",\"chat\"],\"Chuuk\":[\"true\u00a6chu2pacific0;!/0;truk,y2;t,uk0;!/truky0;ap\",\"Chuuk\",\"n\"],\"Easter\":[\"true\u00a6chile/easter4e0pacific;as0mt;st,t0;!er0;! 0;island\",\"Easter Island\",\"s\",\"east\"],\"Efate\":[\"true\u00a6efate,pacific,v0;anuatu,u0;!t\",\"Vanuatu\",\"n\"],\"Fakaofo\":[\"true\u00a6fakaofo,pacific,t0;k0okelau;!l,t\",\"Tokelau\",\"n\"],\"Fiji\":[\"true\u00a6f0pacific;iji,j0;!i,st,t\",\"Fiji\",\"s\",\"fiji\"],\"Funafuti\":[\"true\u00a6funafuti,pacific,t0;uv1v0;!t;!alu\",\"Tuvalu\",\"n\"],\"Galapagos\":[\"true\u00a6co1gal0pacific;apagos,t,\u00e1pagos islands;lombia,st,t\",\"Colombia\",\"n\"],\"Gambier\":[\"true\u00a6gam0pacific;bier0t;! islands\",\"Gambier\",\"n\"],\"Guadalcanal\":[\"true\u00a6guadalcanal,pacific,s0;b1lb,olomon0;! islands;!t\",\"Solomon Islands\",\"n\"],\"Guam\":[\"true\u00a6ch5guam,m4northern mariana islands,p2west0; 0ern 0;pacific;acific0ort moresby;!/saipan;np,p;amorro,st\",\"Chamorro\",\"n\"],\"Honolulu\":[\"true\u00a6aleutian4h1pacific0us/hawaii;!/johnston;a0onolulu,st;dt,st,t,waii0;! aleutian;! islands\",\"Hawaii-Aleutian\",\"n\"],\"Kanton\":[\"true\u00a6kanton,p0;acific1ho0;enix islands,t;!/enderbury\",\"Phoenix Islands\",\"n\"],\"Kiritimati\":[\"true\u00a6ki1lin0pacific;e islands,t;!r0;!i0;bati,timati0;! island\",\"Line Islands\",\"n\"],\"Kosrae\":[\"true\u00a6kos0pacific;rae,t\",\"Kosrae\",\"n\"],\"Kwajalein\":[\"true\u00a6kwajalein,m0pacific;arshall islands,ht\",\"Marshall Islands\",\"n\"],\"Majuro\":[\"true\u00a6m0pacific;a1h0;!l,t;juro,rshall islands\",\"Marshall Islands\",\"n\"],\"Marquesas\":[\"true\u00a6mar0pacific;quesas0t;! islands\",\"Marquesas\",\"n\"],\"Nauru\":[\"true\u00a6n0pacific;auru,r0;!t,u\",\"Nauru\",\"n\"],\"Niue\":[\"true\u00a6n0pacific;iu1u0;!t;!e\",\"Niue\",\"n\"],\"Norfolk\":[\"true\u00a6n0pacific;f1orfolk0;! island;!dt,k,t\",\"Norfolk Island\",\"n\",\"aus\"],\"Noumea\":[\"true\u00a6n0pacific;c0ew caledonia,oumea;!l,t\",\"New Caledonia\",\"n\"],\"Pago_Pago\":[\"true\u00a6m5pa1s0us/sa4;a3st;cific0go_pago;!/0;m1sa0;moa;idway\",\"Samoa\",\"n\"],\"Palau\":[\"true\u00a6p0;a1lw,w0;!t;cific,lau\",\"Palau\",\"n\"],\"Pitcairn\":[\"true\u00a6p0;acific,cn,itcairn,n,st\",\"Pitcairn\",\"n\"],\"Pohnpei\":[\"true\u00a6french polynesia,p0;acific1f,o0yf;hnpei0nt;!/ponape\",\"Ponape\",\"n\"],\"Port_Moresby\":[\"true\u00a6antarctica/dumontd6dumont-d'6guinea5p0;a3g2ng,ort0; 0_0;moresby;!t;cific,pua new guinea;!n;urville\",\"Papua New Guinea\",\"s\"],\"Rarotonga\":[\"true\u00a6c0pacific,rarotonga;k2o0;k,ok0;! islands;!t\",\"Cook Islands\",\"n\"],\"Tahiti\":[\"true\u00a6pacific,society islands,tah0;iti,t\",\"Tahiti\",\"n\"],\"Tarawa\":[\"true\u00a6gil0pacific,tarawa;bert islands,t\",\"Gilbert Islands\",\"n\"],\"Tongatapu\":[\"true\u00a6nuku'alofa,pacific,to0;!n0t;!ga0;!tapu\",\"Tonga\",\"s\"],\"Wake\":[\"true\u00a6pacific,u2wak0;e0t;! island;m0s minor outlying islands;!i\",\"Wake Island\",\"n\"],\"Wallis\":[\"true\u00a6pacific,w0;allis1f0lf;!t;! 0;&0and0; futuna\",\"Wallis & Futuna\",\"n\"]}};\n\n  // strings that don't pack properly\n  var misc = {\n    'gmt+0': ['Etc/GMT'],\n    'gmt-0': ['Etc/GMT'],\n    gmt0: ['Etc/GMT'],\n    'etc/gmt+0': ['Etc/GMT'],\n    'etc/gmt-0': ['Etc/GMT'],\n    'etc/gmt0': ['Etc/GMT'],\n    'msk+00': ['Europe/Moscow'],\n    'msk-01 - kaliningrad': ['Europe/Kaliningrad'],\n    'msk+00 - moscow area': ['Europe/Moscow'],\n    'msk+00 - crimea': ['Europe/Kiev'],\n    'msk+00 - volgograd': ['Europe/Volgograd'],\n    'msk+00 - kirov': ['Europe/Kirov'],\n    'msk+01 - astrakhan': ['Europe/Astrakhan'],\n    'msk+01 - saratov': ['Europe/Saratov'],\n    'msk+01 - ulyanovsk': ['Europe/Ulyanovsk'],\n    'msk+01 - samaraudmurtia': ['Europe/Samara'],\n    'msk+02 - urals': ['Asia/Yekaterinburg'],\n    'msk+03': ['Asia/Omsk'],\n    'msk+04 - novosibirsk': ['Asia/Novosibirsk'],\n    'msk+04 - altai': ['Asia/Barnaul'],\n    'msk+04': ['Asia/Tomsk'],\n    'msk+04 - kemerovo': ['Asia/Novokuznetsk'],\n    'msk+04 - krasnoyarsk area': ['Asia/Krasnoyarsk'],\n    'msk+05 - irkutskburyatia': ['Asia/Irkutsk'],\n    'msk+06 - zabaykalsky': ['Asia/Chita'],\n    'msk+06 - lena river': ['Asia/Yakutsk'],\n    'msk+06 - tomponskyust-maysky': ['Asia/Khandyga'],\n    'msk+07 - amur river': ['Asia/Vladivostok'],\n    'msk+07 - oymyakonsky': ['Asia/Ust-Nera'],\n    'msk+08 - magadan': ['Asia/Magadan'],\n    'msk+08 - sakhalin island': ['Asia/Sakhalin'],\n    'msk+08 - sakha (e) north kuril is': ['Asia/Srednekolymsk'],\n    'msk+09': ['Asia/Kamchatka'],\n    'msk+09 - bering sea': ['Asia/Anadyr'],\n    \"russia time zone 11\": [\"Asia/Anadyr\"],\n    \"russia time zone 10\": [\"Asia/Srednekolymsk\"],\n    \"russia time zone 3\": [\"Europe/Samara\"],\n    \"coordinated universal time-09\": [\"Pacific/Gambier\"],\n    \"utc-09\": [\"Pacific/Gambier\"],\n    \"coordinated universal time-08\": [\"Pacific/Pitcairn\"]\n  };\n\n  const addEtc = function (zones) {\n    for (let i = 0; i <= 14; i += 1) {\n      zones[`Etc/GMT-${i}`] = {\n        offset: i,\n        meta: `gmt-${i}`,\n        hem: 'n'//sorry\n      };\n      zones[`Etc/GMT+${i}`] = {\n        offset: i * -1,\n        meta: `gmt+${i}`,\n        hem: 'n'//sorry\n      };\n    }\n  };\n\n  var addUTC = addEtc;\n\n  // unpack our lexicon of words\n  let zones = {};\n  let lexicon = Object.assign({}, misc);\n  Object.keys(pcked).forEach(top => {\n    Object.keys(pcked[top]).forEach(name => {\n      let [words, meta, hem, dst] = pcked[top][name];\n      let id = `${top}/${name}`;\n      zones[id] = { meta, hem };\n      let keys = Object.keys(unpack$1(words));\n      keys.forEach(k => {\n        lexicon[k] = lexicon[k] || [];\n        lexicon[k].push(id);\n        // use iana aliases\n        if (k.match(/\\//)) {\n          let arr = k.split(/\\//);\n          let last = arr[arr.length - 1].toLowerCase();\n          lexicon[last] = lexicon[last] || [];\n          lexicon[last].push(id);\n        }\n      });\n      zones[id].wordCount = keys.length;\n      if (dst) {\n        zones[id].dst = dstPatterns[dst].split(/\\|/);\n      }\n    });\n  });\n\n  addUTC(zones);\n\n  const unique = function (arr) {\n    let obj = {};\n    for (let i = 0; i < arr.length; i += 1) {\n      obj[arr[i]] = true;\n    }\n    return Object.keys(obj)\n  };\n\n  // sort by num of aliases\n  Object.keys(lexicon).forEach(k => {\n    if (lexicon[k].length > 1) {\n      lexicon[k] = unique(lexicon[k]);\n      lexicon[k] = lexicon[k].sort((a, b) => {\n        if (zones[a].wordCount > zones[b].wordCount) {\n          return -1\n        } else if (zones[a].wordCount < zones[b].wordCount) {\n          return 1\n        }\n        return 0\n      });\n    }\n  });\n\n  // console.log(zones['Etc/GMT+4'])\n\n  //try to match these against iana form\n  const one = (str) => {\n    str = str.toLowerCase();\n    str = str.replace(/^in /g, '');\n    str = str.replace(/ time/g, '');\n    str = str.replace(/ (standard|daylight|summer)/g, '');\n    str = str.replace(/ - .*/g, ''); //`Eastern Time - US & Canada`\n    str = str.replace(/, .*/g, ''); //`mumbai, india`\n    str = str.replace(/\\./g, '');//st. petersberg\n    return str.trim()\n  };\n\n  //some more aggressive transformations\n  const two = function (str) {\n    str = str.replace(/\\b(east|west|north|south)ern/g, '$1');\n    str = str.replace(/\\b(africa|america|australia)n/g, '$1');\n    str = str.replace(/\\beuropean/g, 'europe');\n    str = str.replace(/\\islands/g, 'island');\n    str = str.replace(/.*\\//g, '');\n    return str.trim()\n  };\n  // even-more agressive\n  const three = function (str) {\n    str = str.replace(/\\(.*\\)/, '');//anything in brackets\n    str = str.replace(/  +/g, ' ');//extra spaces\n    return str.trim()\n  };\n\n  var normalize = { one, two, three };\n\n  const isOffset = /^([-+]?[0-9]+)h(r?s)?$/i;\n  const isNumber = /^([-+]?[0-9]+)$/;\n  const utcOffset = /utc([\\-+]?[0-9]+)$/i;\n  const gmtOffset = /gmt([\\-+]?[0-9]+)$/i;\n\n  const toIana = function (num) {\n    num = Number(num);\n    if (num > -13 && num < 13) {\n      num = num * -1; //it's opposite!\n      num = (num > 0 ? '+' : '') + num; //add plus sign\n      return 'Etc/GMT' + num\n    }\n    return null\n  };\n\n  const parseOffset = function (tz) {\n    // '+5hrs'\n    let m = tz.match(isOffset);\n    if (m !== null) {\n      return toIana(m[1])\n    }\n    // 'utc+5'\n    m = tz.match(utcOffset);\n    if (m !== null) {\n      return toIana(m[1])\n    }\n    // 'GMT-5' (not opposite)\n    m = tz.match(gmtOffset);\n    if (m !== null) {\n      let num = Number(m[1]) * -1;\n      return toIana(num)\n    }\n    // '+5'\n    m = tz.match(isNumber);\n    if (m !== null) {\n      return toIana(m[1])\n    }\n    return null\n  };\n  var parseOffset$1 = parseOffset;\n\n  // match some text to an iana code\n  const find = function (str) {\n    // perfect id match\n    if (zones.hasOwnProperty(str)) {\n      return str\n    }\n    // lookup known word\n    if (lexicon.hasOwnProperty(str)) {\n      return lexicon[str]\n    }\n    // -8hrs\n    if (/[0-9]/.test(str)) {\n      let etc = parseOffset$1(str);\n      if (etc) {\n        return [etc]\n      }\n    }\n    // try a sequence of normalization steps\n    str = normalize.one(str);\n    if (lexicon.hasOwnProperty(str)) {\n      return lexicon[str]\n    }\n    str = normalize.two(str);\n    if (lexicon.hasOwnProperty(str)) {\n      return lexicon[str]\n    }\n    str = normalize.three(str);\n    if (lexicon.hasOwnProperty(str)) {\n      return lexicon[str]\n    }\n    return null\n  };\n\n  var find$1 = find;\n\n  var metas = {\n    \"India\": {\n      \"std\": [\"IST\", 5.5],\n      \"long\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\"\n    },\n    \"China\": {\n      \"std\": [\"CST\", 8],\n      \"long\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\"\n    },\n    \"Central European\": {\n      \"std\": [\"CET\", 1],\n      \"dst\": [\"CEST\", 2, \"Central European Summer Time\"],\n      \"long\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\"\n    },\n    \"Atlantic\": {\n      \"dupe\": true,\n      \"std\": [\"AST\", -4],\n      \"dst\": [\"ADT\", -3],\n      \"long\": \"(UTC-04:00) Atlantic Time (Canada)\"\n    },\n    \"Greenwich Mean\": {\n      \"std\": [\"GMT\", 0],\n      \"long\": \"(UTC) Coordinated Universal Time\"\n    },\n    \"Eastern European\": {\n      \"std\": [\"EET\", 2],\n      \"dst\": [\"EEST\", 3, \"Eastern European Summer Time\"\n      ]\n    },\n    \"Central\": {\n      \"dupe\": true,\n      \"std\": [\"CST\", -6],\n      \"dst\": [\"CDT\", -5],\n      \"long\": \"(UTC-06:00) Central Time (US & Canada)\"\n    },\n    \"Eastern\": {\n      \"std\": [\"EST\", -5],\n      \"dst\": [\"EDT\", -4],\n      \"long\": \"(UTC-05:00) Eastern Time (US & Canada)\"\n    },\n    \"Argentina\": {\n      \"std\": [\"ART\", -3],\n      \"long\": \"(UTC-03:00) City of Buenos Aires\"\n    },\n    \"East Africa\": {\n      \"std\": [\"EAT\", 3],\n      \"long\": \"(UTC+03:00) Nairobi\"\n    },\n    \"West Africa\": {\n      \"std\": [\"WAT\", 1],\n      \"long\": \"(UTC+01:00) West Central Africa\"\n    },\n    \"Moscow\": {\n      \"std\": [\"MSK\", 3],\n      \"long\": \"(UTC+03:00) Moscow, St. Petersburg\"\n    },\n    \"Brasilia\": {\n      \"std\": [\"BRT\", -3],\n      \"long\": \"(UTC-03:00) Brasilia\"\n    },\n    \"Mountain\": {\n      \"std\": [\"MST\", -7],\n      \"dst\": [\"MDT\", -6],\n      \"long\": \"(UTC-07:00) Mountain Time (US & Canada)\"\n    },\n    \"Central Africa\": {\n      \"std\": [\"CAT\", 2],\n      \"long\": \"(UTC+02:00) Windhoek\"\n    },\n    \"Arabian\": {\n      \"std\": [\"AST\", 3],\n      \"long\": \"(UTC+03:00) Kuwait, Riyadh\"\n    },\n    \"Alaska\": {\n      \"std\": [\"AKST\", -9],\n      \"dst\": [\"AKDT\", -8],\n      \"long\": \"(UTC-09:00) Alaska\"\n    },\n    \"British\": {\n      \"std\": [\"GMT\", 0],\n      \"dst\": [\"BST\", 1, \"British Summer Time\"],\n      \"long\": \"(UTC+00:00) Dublin, Edinburgh, Lisbon, London\"\n    },\n    \"Irish\": {\n      \"std\": [\"GMT\", 0],\n      \"dst\": [\"IST\", 1, \"Irish Standard Time\"]\n    },\n    \"West Kazakhstan\": {\n      \"std\": [\"ALMT\", 5],\n      \"long\": \"(UTC+05:00) Ashgabat, Tashkent\"\n    },\n    \"Eastern Australia\": {\n      \"std\": [\"AEST\", 10],\n      \"dst\": [\"AEDT\", 11, \"Australian Eastern Daylight Time\"],\n      \"long\": \"(UTC+10:00) Canberra, Melbourne, Sydney\"\n    },\n    \"Western European\": {\n      \"std\": [\"WET\", 0],\n      \"dst\": [\"WEST\", 1, \"Western European Summer Time\"]\n    },\n    \"Indochina\": {\n      \"std\": [\"ICT\", 7],\n      \"long\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\"\n    },\n    \"Central Mexico\": {\n      \"long\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"std\": [\"CST\", -6],\n      \"dst\": [\"CDT\", -5, \"Central Daylight Time\"\n      ]\n    },\n    \"South Africa\": {\n      \"std\": [\"SAST\", 2],\n      \"long\": \"(UTC+02:00) Harare, Pretoria\"\n    },\n    \"Krasnoyarsk\": {\n      \"std\": [\"KRAT\", 7],\n      \"long\": \"(UTC+07:00) Krasnoyarsk\"\n    },\n    \"Yakutsk\": {\n      \"std\": [\"YAKT\", 9],\n      \"long\": \"(UTC+09:00) Yakutsk\"\n    },\n    \"Pacific\": {\n      \"std\": [\"PST\", -8],\n      \"dst\": [\"PDT\", -7],\n      \"long\": \"(UTC-08:00) Pacific Time (US & Canada)\"\n    },\n    \"Amazon\": {\n      \"std\": [\"AMT\", -4],\n      \"long\": \"(UTC-04:00) Cuiaba\"\n    },\n    \"Morocco Standard\": {\n      \"offset\": 1,\n      \"long\": \"(UTC+00:00) Casablanca\",\n      \"std\": [\"WET\", 1],\n      \"dst\": [\"WEST\", 0, \"Western European Summer Time\"\n      ]\n    },\n    \"Gulf\": {\n      \"std\": [\"GST\", 4],\n      \"long\": \"(UTC+04:00) Abu Dhabi, Muscat\"\n    },\n    \"Samara\": {\n      \"std\": [\"SAMT\", 4],\n      \"long\": \"(UTC+04:00) Izhevsk, Samara\"\n    },\n    \"Uzbekistan\": {\n      \"std\": [\"UZT\", 5]\n    },\n    \"East Kazakhstan\": {\n      \"std\": [\"ALMT\", 6],\n      \"long\": \"(UTC+06:00) Astana\"\n    },\n    \"Omsk\": {\n      \"std\": [\"OMST\", 6],\n      \"long\": \"(UTC+06:00) Omsk\"\n    },\n    \"Western Indonesia\": {\n      \"std\": [\"WIB\", 7]\n    },\n    \"Ulaanbaatar\": {\n      \"std\": [\"ULAT\", 8],\n      \"long\": \"(UTC+08:00) Ulaanbaatar\"\n    },\n    \"Malaysia\": {\n      \"std\": [\"MYT\", 8]\n    },\n    \"Korean\": {\n      \"std\": [\"KST\", 9],\n      \"long\": \"(UTC+09:00) Seoul\"\n    },\n    \"Central Australia\": {\n      \"std\": [\"ACST\", 9.5],\n      \"dst\": [\"ACDT\", 10.5, \"Australian Central Daylight Time\"],\n      \"long\": \"(UTC+09:30) Adelaide\"\n    },\n    \"Brisbane\": {\n      \"dupe\": true,\n      \"std\": [\"AEST\", 10]\n    },\n    \"Vladivostok\": {\n      \"std\": [\"VLAT\", 10],\n      \"long\": \"(UTC+10:00) Vladivostok\"\n    },\n    \"Chamorro\": {\n      \"std\": [\"ChST\", 10],\n      \"long\": \"(UTC+10:00) Guam, Port Moresby\"\n    },\n    \"Papua New Guinea\": {\n      \"std\": [\"PGT\", 11]\n    },\n    \"New Zealand\": {\n      \"std\": [\"NZST\", 12],\n      \"dst\": [\"NZDT\", 13],\n      \"long\": \"(UTC+12:00) Auckland, Wellington\"\n    },\n    \"Marshall Islands\": {\n      \"std\": [\"MHT\", 12]\n    },\n    \"Samoa\": {\n      \"std\": [\"SST\", -11],\n      \"long\": \"(UTC+13:00) Samoa\"\n    },\n    \"Hawaii-Aleutian\": {\n      \"std\": [\"HAST\", -9],\n      \"dst\": [\"HADT\", -8],\n      \"long\": \"(UTC-09:00) Aleutian Islands\"\n    },\n    \"Mexican Pacific\": {\n      \"std\": [\"HNPMX\", -7],\n      \"dst\": [\"HEPMX\", -6],\n      \"long\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\"\n    },\n    \"Colombia\": {\n      \"std\": [\"COT\", -5]\n    },\n    \"Acre\": {\n      \"std\": [\"ACT\", -5]\n    },\n    \"Chile\": {\n      \"dupe\": true,\n      \"std\": [\"CLT\", -3],\n      \"dst\": [\"CLST\", -4, \"Chile Summer Time\"\n      ]\n    },\n    \"Troll\": {\n      \"dupe\": true,\n      \"std\": [\"GMT\", 0]\n    },\n    \"East Greenland\": {\n      \"std\": [\"HNEG\", 0],\n      \"dst\": [\"HEEG\", 1, \"East Greenland Summer Time\"\n      ]\n    },\n    \"Israel\": {\n      \"std\": [\"IST\", 2],\n      \"dst\": [\"IDT\", 3],\n      \"long\": \"(UTC+02:00) Jerusalem\"\n    },\n    \"Syowa\": {\n      \"std\": [\"SYOT\", 3]\n    },\n    \"Turkey\": {\n      \"std\": [\"TRT\", 3],\n      \"long\": \"(UTC+03:00) Istanbul\"\n    },\n    \"Iran\": {\n      \"std\": [\"IRST\", 3.5],\n      \"dst\": [\"IRDT\", 4.5],\n      \"long\": \"(UTC+03:30) Tehran\"\n    },\n    \"Azerbaijan\": {\n      \"std\": [\"AZT\", 4],\n      \"long\": \"(UTC+04:00) Baku\"\n    },\n    \"Georgia\": {\n      \"std\": [\"GET\", 4],\n      \"long\": \"(UTC+04:00) Tbilisi\"\n    },\n    \"Armenia\": {\n      \"std\": [\"AMT\", 4],\n      \"long\": \"(UTC+04:00) Yerevan\"\n    },\n    \"Seychelles\": {\n      \"std\": [\"SCT\", 4]\n    },\n    \"Mauritius\": {\n      \"std\": [\"MUT\", 4],\n      \"long\": \"(UTC+04:00) Port Louis\"\n    },\n    \"R\u00e9union\": {\n      \"std\": [\"RET\", 4]\n    },\n    \"Afghanistan\": {\n      \"std\": [\"AFT\", 4.5],\n      \"long\": \"(UTC+04:30) Kabul\"\n    },\n    \"Mawson\": {\n      \"std\": [\"MAWT\", 5]\n    },\n    \"Turkmenistan\": {\n      \"std\": [\"TMT\", 5]\n    },\n    \"Tajikistan\": {\n      \"std\": [\"TJT\", 5]\n    },\n    \"Pakistan\": {\n      \"std\": [\"PKT\", 5],\n      \"long\": \"(UTC+05:00) Islamabad, Karachi\"\n    },\n    \"Yekaterinburg\": {\n      \"std\": [\"YEKT\", 5],\n      \"long\": \"(UTC+05:00) Ekaterinburg\"\n    },\n    \"French Southern & Antarctic\": {\n      \"std\": [\"TFT\", 5]\n    },\n    \"Maldives\": {\n      \"std\": [\"MVT\", 5]\n    },\n    \"Nepal\": {\n      \"std\": [\"NPT\", 5.75],\n      \"long\": \"(UTC+05:45) Kathmandu\"\n    },\n    \"Vostok\": {\n      \"std\": [\"MSK+4\", 6]\n    },\n    \"Kyrgyzstan\": {\n      \"std\": [\"KGT\", 6]\n    },\n    \"Bangladesh\": {\n      \"std\": [\"BST\", 6],\n      \"long\": \"(UTC+06:00) Dhaka\"\n    },\n    \"Bhutan\": {\n      \"std\": [\"BT\", 6]\n    },\n    \"Indian Ocean\": {\n      \"std\": [\"IOT\", 6]\n    },\n    \"Myanmar\": {\n      \"std\": [\"MMT\", 6.5],\n      \"long\": \"(UTC+06:30) Yangon (Rangoon)\"\n    },\n    \"Cocos Islands\": {\n      \"std\": [\"CCT\", 6.5]\n    },\n    \"Davis\": {\n      \"std\": [\"DAVT\", 7]\n    },\n    \"Hovd\": {\n      \"std\": [\"HOVT\", 7],\n      \"long\": \"(UTC+07:00) Hovd\"\n    },\n    \"Novosibirsk\": {\n      \"std\": [\"NOVT\", 7],\n      \"long\": \"(UTC+07:00) Novosibirsk\"\n    },\n    \"Christmas Island\": {\n      \"std\": [\"CXT\", 7]\n    },\n    \"Brunei Darussalam\": {\n      \"std\": [\"BNT\", 8]\n    },\n    \"Hong Kong\": {\n      \"std\": [\"HKT\", 8]\n    },\n    \"Irkutsk\": {\n      \"std\": [\"IRKT\", 8],\n      \"long\": \"(UTC+08:00) Irkutsk\"\n    },\n    \"Central Indonesia\": {\n      \"std\": [\"WITA\", 8]\n    },\n    \"Philippine\": {\n      \"std\": [\"PHST\", 8]\n    },\n    \"Singapore\": {\n      \"std\": [\"SGT\", 8],\n      \"long\": \"(UTC+08:00) Kuala Lumpur, Singapore\"\n    },\n    \"Taipei\": {\n      \"std\": [\"CST\", 8],\n      \"long\": \"(UTC+08:00) Taipei\"\n    },\n    \"Western Australia\": {\n      \"std\": [\"AWST\", 8],\n      \"long\": \"(UTC+08:00) Perth\"\n    },\n    \"Australian Central Western\": {\n      \"std\": [\"ACWST\", 8.75],\n      \"long\": \"(UTC+08:45) Eucla\"\n    },\n    \"East Timor\": {\n      \"std\": [\"TLT\", 9]\n    },\n    \"Eastern Indonesia\": {\n      \"std\": [\"WIT\", 9]\n    },\n    \"Japan\": {\n      \"std\": [\"JST\", 9],\n      \"long\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\"\n    },\n    \"Palau\": {\n      \"std\": [\"PWT\", 9]\n    },\n    \"Australian Central\": {\n      \"dupe\": true,\n      \"std\": [\"ACST\", 9.5]\n    },\n    \"Dumont-d\u2019Urville\": {\n      \"std\": [\"CLST\", 10]\n    },\n    \"Chuuk\": {\n      \"std\": [\"CHUT\", 10]\n    },\n    \"Lord Howe\": {\n      \"std\": [\"LHST\", 10.5],\n      \"dst\": [\"LHDT\", 11.5],\n      \"long\": \"(UTC+10:30) Lord Howe Island\"\n    },\n    \"Casey\": {\n      \"std\": [\"CAST\", 11],\n      \"dst\": [\"CAST\", 8, \"Casey Summer Time\"\n      ]\n    },\n    \"Magadan\": {\n      \"std\": [\"MAGT\", 11],\n      \"long\": \"(UTC+11:00) Magadan\"\n    },\n    \"Sakhalin\": {\n      \"std\": [\"SAKT\", 11],\n      \"long\": \"(UTC+11:00) Sakhalin\"\n    },\n    \"Srednekolymsk\": {\n      \"std\": [\"SRET\", 11],\n      \"long\": \"(UTC+11:00) Chokurdakh\"\n    },\n    \"Vanuatu\": {\n      \"std\": [\"VUT\", 11]\n    },\n    \"Solomon Islands\": {\n      \"std\": [\"SBT\", 11]\n    },\n    \"Kosrae\": {\n      \"std\": [\"KOST\", 11]\n    },\n    \"New Caledonia\": {\n      \"std\": [\"NCT\", 11]\n    },\n    \"Ponape\": {\n      \"std\": [\"PONT\", 11]\n    },\n    \"Anadyr\": {\n      \"std\": [\"ANAT\", 12],\n      \"long\": \"(UTC+12:00) Anadyr, Petropavlovsk-Kamchatsky\"\n    },\n    \"Petropavlovsk-Kamchatski\": {\n      \"std\": [\"PETT\", 12],\n      \"long\": \"(UTC+12:00) Anadyr, Petropavlovsk-Kamchatsky\"\n    },\n    \"Fiji\": {\n      \"std\": [\"FJT\", 12],\n      \"dst\": [\"FJT\", 13, \"Fiji Summer Time\"],\n      \"long\": \"(UTC+12:00) Fiji\"\n    },\n    \"Tuvalu\": {\n      \"std\": [\"TVT\", 12]\n    },\n    \"Nauru\": {\n      \"std\": [\"NRT\", 12]\n    },\n    \"Norfolk Island\": {\n      \"std\": [\"NFT\", 12],\n      \"dst\": [\"NFDT\", 11],\n      \"long\": \"(UTC+11:00) Norfolk Island\"\n    },\n    \"Gilbert Islands\": {\n      \"std\": [\"GILT\", 12]\n    },\n    \"Wake Island\": {\n      \"std\": [\"WAKT\", 12]\n    },\n    \"Wallis & Futuna\": {\n      \"std\": [\"WFT\", 12]\n    },\n    \"Chatham\": {\n      \"std\": [\"CHAST\", 12.75],\n      \"dst\": [\"CHADT\", 13.75],\n      \"long\": \"(UTC+12:45) Chatham Islands\"\n    },\n    \"West Samoa\": {\n      \"std\": [\"WST\", 13],\n      \"dst\": [\"WST\", 14, \"West Samoa Summer Time\"\n      ]\n    },\n    \"Phoenix Islands\": {\n      \"std\": [\"PHOT\", 13]\n    },\n    \"Tokelau\": {\n      \"std\": [\"TKT\", 13]\n    },\n    \"Tonga\": {\n      \"std\": [\"TOT\", 13],\n      \"long\": \"(UTC+13:00) Nuku'alofa\"\n    },\n    \"Line Islands\": {\n      \"std\": [\"LINT\", 14],\n      \"long\": \"(UTC+14:00) Kiritimati Island\"\n    },\n    \"Niue\": {\n      \"std\": [\"NUT\", -11]\n    },\n    \"Cook Islands\": {\n      \"std\": [\"CKT\", -10]\n    },\n    \"Tahiti\": {\n      \"std\": [\"TAHT\", -10]\n    },\n    \"Marquesas\": {\n      \"std\": [\"MART\", -9.5],\n      \"long\": \"(UTC-09:30) Marquesas Islands\"\n    },\n    \"Aleutian Standard\": {\n      \"iso\": \"(UTC-10:00) Aleutian Islands\",\n      \"std\": [\"HST\", -10],\n      \"dst\": [\"HDT\", -9, \"Hawaii Daylight Time\"\n      ]\n    },\n    \"Gambier\": {\n      \"std\": [\"GAMT\", -9],\n      \"long\": \"(UTC-09:00) Coordinated Universal Time-09\"\n    },\n    \"Pitcairn\": {\n      \"std\": [\"PST\", -8],\n      \"long\": \"(UTC-08:00) Coordinated Universal Time-08\"\n    },\n    \"Northwest Mexico\": {\n      \"std\": [\"HNNOMX\", -6],\n      \"dst\": [\"HENOMX\", -5],\n      \"long\": \"(UTC-08:00) Baja California\"\n    },\n    \"Easter Island\": {\n      \"std\": [\"EAST\", -6],\n      \"dst\": [\"EASST\", -5, \"Easter Island Summer Time\"],\n      \"long\": \"(UTC-06:00) Easter Island\"\n    },\n    \"Ecuador\": {\n      \"std\": [\"ECT\", -5]\n    },\n    \"Cuba\": {\n      \"std\": [\"HNCU\", -5],\n      \"dst\": [\"HECU\", -4],\n      \"long\": \"(UTC-05:00) Havana\"\n    },\n    \"Peru\": {\n      \"std\": [\"PET\", -5]\n    },\n    \"Paraguay\": {\n      \"std\": [\"PYT\", -4],\n      \"dst\": [\"PYST\", -3, \"Paraguay Summer Time\"],\n      \"long\": \"(UTC-04:00) Asuncion\"\n    },\n    \"Venezuela\": {\n      \"std\": [\"VET\", -4],\n      \"long\": \"(UTC-04:00) Caracas\"\n    },\n    \"Guyana\": {\n      \"std\": [\"GYT\", -4]\n    },\n    \"Bolivia\": {\n      \"std\": [\"BOT\", -4]\n    },\n    \"Newfoundland\": {\n      \"std\": [\"HNTN\", -3.5],\n      \"dst\": [\"HETN\", -2.5],\n      \"long\": \"(UTC-03:30) Newfoundland\"\n    },\n    \"French Guiana\": {\n      \"std\": [\"GFT\", -3]\n    },\n    \"West Greenland\": {\n      \"std\": [\"WGT\", -3],\n      \"dst\": [\"WGST\", -2, \"West Greenland Summer Time\"],\n      \"long\": \"(UTC-03:00) Greenland\"\n    },\n    \"St. Pierre & Miquelon\": {\n      \"std\": [\"HNPM\", -3],\n      \"dst\": [\"HEPM\", -2],\n      \"long\": \"(UTC-03:00) Saint Pierre and Miquelon\"\n    },\n    \"Uruguay\": {\n      \"std\": [\"UYT\", -3],\n      \"long\": \"(UTC-03:00) Montevideo\"\n    },\n    \"Suriname\": {\n      \"std\": [\"SRT\", -3]\n    },\n    \"Falkland Islands\": {\n      \"std\": [\"FKST\", -3]\n    },\n    \"Fernando de Noronha\": {\n      \"std\": [\"FNT\", -2]\n    },\n    \"South Georgia\": {\n      \"std\": [\"GST\", -2]\n    },\n    \"Azores\": {\n      \"std\": [\"AZOT\", -1],\n      \"dst\": [\"AZOST\", 0, \"Azores Summer Time\"],\n      \"long\": \"(UTC-01:00) Azores\"\n    },\n    \"Cape Verde\": {\n      \"std\": [\"CVT\", -1],\n      \"long\": \"(UTC-01:00) Cabo Verde Is.\"\n    }\n  };\n\n  // const metas = require('../../data/05-metazones')\n  // import offsets from './offsets.js'\n\n  for (let i = 0; i <= 14; i += 1) {\n    metas[`gmt-${i}`] = {\n      name: `Etc/GMT-${i}`,\n      std: [`GMT-${i}`, i],\n      long: `(UTC-${i}:00) Coordinated Universal Time`\n    };\n    metas[`gmt+${i}`] = {\n      name: `Etc/GMT+${i}`,\n      std: [`GMT+${i}`, -i],\n      long: `(UTC+${i}:00) Coordinated Universal Time`\n    };\n  }\n\n  const display = function (id) {\n    if (!id) {\n      return null\n    }\n    if (!zones[id]) {\n      console.error(`missing id ${id}`);\n      return null\n    }\n    let metaName = zones[id].meta;\n    if (!metas[metaName]) {\n      console.error(`missing tz-meta ${metaName}`);\n    }\n    let meta = metas[metaName] || {};\n    let dst = null;\n    if (zones[id].dst && meta.dst) {\n      let [abbr, offset, name] = meta.dst;\n      name = name || `${metaName} Daylight Time`;\n      let [start, end] = zones[id].dst || [];\n      dst = { abbr, offset, name, start, end };\n    }\n\n    let [abbr, offset] = meta.std;\n    let name = meta.name || `${metaName} Time`;\n    let long = meta.long || `(UTC+${offset}:00) ${name}`;\n    return {\n      name: name,\n      iana: id,\n      standard: { abbr, offset, name: meta.name || `${metaName} Standard Time`, },\n      daylight: dst || null,\n      long: long,\n    }\n  };\n  var display$1 = display;\n\n  var version = '1.5.2';\n\n  const soft = function (str) {\n    let ids = find$1(str) || [];\n    if (typeof ids === 'string') {\n      ids = [ids];\n    }\n    ids = ids.map((id) => display$1(id));\n    return ids\n  };\n  soft.prototype.version = version;\n  // export { find, display, version }\n\n  return soft;\n\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","timezoneSoft","cache","reduce","h","c","i","encoding","toAlphaCode","n","undefined","seq","places","range","BASE","s","d","String","fromCharCode","fromAlphaCode","pow","length","charCodeAt","toArray","trie","all","crawl","index","pref","node","nodes","push","slice","matches","split","str","ref","have","dnode","symCount","syms","newIndex","unpack$1","unpack","obj","arr","Object","keys","forEach","cat","match","reSymbol","RegExp","m","exec","k","hasOwnProperty","Array","isArray","dstPatterns","patterns","usa","mex","eu0","eu1","eu2","eu3","green","aus","lhow","chat","nz","ant","troll","jord","leb","syr","isr","pal","saha","par","cuba","chile","east","fiji","pcked","zones","lexicon","assign","misc","gmt0","top","name","words","meta","hem","dst","id","last","toLowerCase","wordCount","addEtc","offset","unique","sort","a","b","normalize","one","replace","trim","two","three","isOffset","isNumber","utcOffset","gmtOffset","toIana","num","Number","parseOffset$1","parseOffset","tz","find$1","find","test","etc","metas","std","long","soft","ids","map","metaName","console","error","abbr","start","end","iana","standard","daylight","prototype","version"]
}
