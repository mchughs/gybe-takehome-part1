shadow$provide.module$node_modules$react_select$dist$useStateManager_7748b351_cjs_dev = function(global, require, module, exports) {
  var _objectSpread = require("module$node_modules$$babel$runtime$helpers$objectSpread2"), _slicedToArray = require("module$node_modules$$babel$runtime$helpers$slicedToArray"), _objectWithoutProperties = require("module$node_modules$$babel$runtime$helpers$objectWithoutProperties"), React = require("module$node_modules$react$index"), _excluded = "defaultInputValue defaultMenuIsOpen defaultValue inputValue menuIsOpen onChange onInputChange onMenuClose onMenuOpen value".split(" ");
  exports.useStateManager = function(_ref) {
    var _ref$defaultInputValu = _ref.defaultInputValue, defaultInputValue = void 0 === _ref$defaultInputValu ? "" : _ref$defaultInputValu;
    _ref$defaultInputValu = _ref.defaultMenuIsOpen;
    var defaultMenuIsOpen = void 0 === _ref$defaultInputValu ? !1 : _ref$defaultInputValu;
    _ref$defaultInputValu = _ref.defaultValue;
    var defaultValue = void 0 === _ref$defaultInputValu ? null : _ref$defaultInputValu, propsInputValue = _ref.inputValue, propsMenuIsOpen = _ref.menuIsOpen, propsOnChange = _ref.onChange, propsOnInputChange = _ref.onInputChange, propsOnMenuClose = _ref.onMenuClose, propsOnMenuOpen = _ref.onMenuOpen;
    _ref$defaultInputValu = _ref.value;
    _ref = _objectWithoutProperties(_ref, _excluded);
    defaultInputValue = React.useState(void 0 !== propsInputValue ? propsInputValue : defaultInputValue);
    var _useState2 = _slicedToArray(defaultInputValue, 2);
    defaultInputValue = _useState2[0];
    var setStateInputValue = _useState2[1];
    defaultMenuIsOpen = React.useState(void 0 !== propsMenuIsOpen ? propsMenuIsOpen : defaultMenuIsOpen);
    _useState2 = _slicedToArray(defaultMenuIsOpen, 2);
    defaultMenuIsOpen = _useState2[0];
    var setStateMenuIsOpen = _useState2[1];
    defaultValue = React.useState(void 0 !== _ref$defaultInputValu ? _ref$defaultInputValu : defaultValue);
    _useState2 = _slicedToArray(defaultValue, 2);
    defaultValue = _useState2[0];
    var setStateValue = _useState2[1];
    _useState2 = React.useCallback(function(value, actionMeta) {
      "function" === typeof propsOnChange && propsOnChange(value, actionMeta);
      setStateValue(value);
    }, [propsOnChange]);
    var onInputChange = React.useCallback(function(value, actionMeta) {
      var newValue;
      "function" === typeof propsOnInputChange && (newValue = propsOnInputChange(value, actionMeta));
      setStateInputValue(void 0 !== newValue ? newValue : value);
    }, [propsOnInputChange]), onMenuOpen = React.useCallback(function() {
      "function" === typeof propsOnMenuOpen && propsOnMenuOpen();
      setStateMenuIsOpen(!0);
    }, [propsOnMenuOpen]), onMenuClose = React.useCallback(function() {
      "function" === typeof propsOnMenuClose && propsOnMenuClose();
      setStateMenuIsOpen(!1);
    }, [propsOnMenuClose]);
    propsInputValue = void 0 !== propsInputValue ? propsInputValue : defaultInputValue;
    propsMenuIsOpen = void 0 !== propsMenuIsOpen ? propsMenuIsOpen : defaultMenuIsOpen;
    _ref$defaultInputValu = void 0 !== _ref$defaultInputValu ? _ref$defaultInputValu : defaultValue;
    return _objectSpread(_objectSpread({}, _ref), {}, {inputValue:propsInputValue, menuIsOpen:propsMenuIsOpen, onChange:_useState2, onInputChange, onMenuClose, onMenuOpen, value:_ref$defaultInputValu});
  };
};

//# sourceMappingURL=module$node_modules$react_select$dist$useStateManager_7748b351_cjs_dev.js.map
