shadow$provide.module$node_modules$$mui$base$node$useTab$useTab = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  function tabValueGenerator(otherTabValues) {
    return otherTabValues.size;
  }
  "use client";
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.useTab = function(parameters) {
    const {value:valueParam, rootRef:externalRef, disabled = !1, id:idParam} = parameters, tabRef = React.useRef(null), id = (0,_utils.unstable_useId)(idParam), {value:selectedValue, selectionFollowsFocus, getTabPanelId} = (0,_Tabs.useTabsContext)();
    parameters = React.useMemo(() => ({disabled, ref:tabRef, id}), [disabled, tabRef, id]);
    const {id:value, index, totalItemCount:totalTabsCount} = (0,_useCompound.useCompoundItem)(null != valueParam ? valueParam : tabValueGenerator, parameters), {getRootProps:getTabProps, highlighted, selected} = (0,_useList.useListItem)({item:value}), {getRootProps:getButtonProps, rootRef:buttonRefHandler, active, focusVisible, setFocusVisible} = (0,_useButton.useButton)({disabled, focusableWhenDisabled:!selectionFollowsFocus, type:"button"}), handleRef = (0,_utils.unstable_useForkRef)(tabRef, externalRef, 
    buttonRefHandler), tabPanelId = void 0 !== value ? getTabPanelId(value) : void 0;
    return {getRootProps:(externalProps = {}) => {
      const externalEventHandlers = (0,_extractEventHandlers.extractEventHandlers)(externalProps), getCombinedRootProps = (0,_combineHooksSlotProps.combineHooksSlotProps)(getTabProps, getButtonProps);
      return (0,_extends2.default)({}, externalProps, getCombinedRootProps(externalEventHandlers), {role:"tab", "aria-controls":tabPanelId, "aria-selected":selected, id, ref:handleRef});
    }, active, focusVisible, highlighted, index, rootRef:handleRef, selected:selected || value === selectedValue, setFocusVisible, totalTabsCount};
  };
  var _extends2 = global(require("module$node_modules$$babel$runtime$helpers$extends")), React = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index")), _utils = require("module$node_modules$$mui$utils$node$index"), _Tabs = require("module$node_modules$$mui$base$node$Tabs$index"), _extractEventHandlers = require("module$node_modules$$mui$base$node$utils$extractEventHandlers"), _useCompound = require("module$node_modules$$mui$base$node$useCompound$index"), _useList = require("module$node_modules$$mui$base$node$useList$index"), _useButton = require("module$node_modules$$mui$base$node$useButton$index"), 
  _combineHooksSlotProps = require("module$node_modules$$mui$base$node$utils$combineHooksSlotProps");
};

//# sourceMappingURL=module$node_modules$$mui$base$node$useTab$useTab.js.map
