shadow$provide.module$node_modules$$mui$material$node$Menu$Menu = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }
  "use client";
  var _interopRequireDefault = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = exports.MenuPaper = void 0;
  var _extends2 = _interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$extends")), _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")), React = _interopRequireWildcard(require("module$node_modules$react$index")), _reactIs = require("module$node_modules$react_is$index");
  global = _interopRequireDefault(require("module$node_modules$prop_types$index"));
  var _clsx = _interopRequireDefault(require("module$node_modules$clsx$dist$clsx")), _composeClasses = _interopRequireDefault(require("module$node_modules$$mui$utils$node$composeClasses$index")), _utils = require("module$node_modules$$mui$base$node$utils$index");
  module = _interopRequireDefault(require("module$node_modules$$mui$utils$node$HTMLElementType$index"));
  var _RtlProvider = require("module$node_modules$$mui$system$RtlProvider$index"), _MenuList = _interopRequireDefault(require("module$node_modules$$mui$material$node$MenuList$index")), _Popover = _interopRequireWildcard(require("module$node_modules$$mui$material$node$Popover$index")), _styled = _interopRequireWildcard(require("module$node_modules$$mui$material$node$styles$styled")), _useThemeProps = _interopRequireDefault(require("module$node_modules$$mui$material$node$styles$useThemeProps")), _menuClasses = 
  require("module$node_modules$$mui$material$node$Menu$menuClasses"), _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  const _excluded = ["onEntering"], _excluded2 = "autoFocus children className disableAutoFocusItem MenuListProps onClose open PaperProps PopoverClasses transitionDuration TransitionProps variant slots slotProps".split(" "), RTL_ORIGIN = {vertical:"top", horizontal:"right"}, LTR_ORIGIN = {vertical:"top", horizontal:"left"}, useUtilityClasses = ownerState => {
    ({classes:ownerState} = ownerState);
    return (0,_composeClasses.default)({root:["root"], paper:["paper"], list:["list"]}, _menuClasses.getMenuUtilityClass, ownerState);
  }, MenuRoot = (0,_styled.default)(_Popover.default, {shouldForwardProp:prop => (0,_styled.rootShouldForwardProp)(prop) || "classes" === prop, name:"MuiMenu", slot:"Root", overridesResolver:(props, styles) => styles.root})({}), MenuPaper = exports.MenuPaper = (0,_styled.default)(_Popover.PopoverPaper, {name:"MuiMenu", slot:"Paper", overridesResolver:(props, styles) => styles.paper})({maxHeight:"calc(100% - 96px)", WebkitOverflowScrolling:"touch"}), MenuMenuList = (0,_styled.default)(_MenuList.default, 
  {name:"MuiMenu", slot:"List", overridesResolver:(props, styles) => styles.list})({outline:0});
  require = React.forwardRef(function(inProps, ref) {
    var _slots$paper, _slotProps$paper, props = (0,_useThemeProps.default)({props:inProps, name:"MuiMenu"});
    const {autoFocus = !0, children, className, disableAutoFocusItem = !1, MenuListProps = {}, onClose, open, PaperProps = {}, PopoverClasses, transitionDuration = "auto", TransitionProps:{onEntering} = {}, variant = "selectedMenu", slots = {}, slotProps = {}} = props;
    inProps = (0,_objectWithoutPropertiesLoose2.default)(props.TransitionProps, _excluded);
    const other = (0,_objectWithoutPropertiesLoose2.default)(props, _excluded2), isRtl = (0,_RtlProvider.useRtl)();
    props = (0,_extends2.default)({}, props, {autoFocus, disableAutoFocusItem, MenuListProps, onEntering, PaperProps, transitionDuration, TransitionProps:inProps, variant});
    const classes = useUtilityClasses(props), autoFocusItem = autoFocus && !disableAutoFocusItem && open, menuListActionsRef = React.useRef(null);
    let activeItemIndex = -1;
    React.Children.map(children, (child, index) => {
      React.isValidElement(child) && ((0,_reactIs.isFragment)(child) && console.error("MUI: The Menu component doesn't accept a Fragment as a child.\nConsider providing an array instead."), child.props.disabled || ("selectedMenu" === variant && child.props.selected ? activeItemIndex = index : -1 === activeItemIndex && (activeItemIndex = index)));
    });
    const PaperSlot = null != (_slots$paper = slots.paper) ? _slots$paper : MenuPaper;
    _slots$paper = null != (_slotProps$paper = slotProps.paper) ? _slotProps$paper : PaperProps;
    _slotProps$paper = (0,_utils.useSlotProps)({elementType:slots.root, externalSlotProps:slotProps.root, ownerState:props, className:[classes.root, className]});
    _slots$paper = (0,_utils.useSlotProps)({elementType:PaperSlot, externalSlotProps:_slots$paper, ownerState:props, className:classes.paper});
    return (0,_jsxRuntime.jsx)(MenuRoot, (0,_extends2.default)({onClose, anchorOrigin:{vertical:"bottom", horizontal:isRtl ? "right" : "left"}, transformOrigin:isRtl ? RTL_ORIGIN : LTR_ORIGIN, slots:{paper:PaperSlot, root:slots.root}, slotProps:{root:_slotProps$paper, paper:_slots$paper}, open, ref, transitionDuration, TransitionProps:(0,_extends2.default)({onEntering:(element, isAppearing) => {
      menuListActionsRef.current && menuListActionsRef.current.adjustStyleForScrollbar(element, {direction:isRtl ? "rtl" : "ltr"});
      onEntering && onEntering(element, isAppearing);
    }}, inProps), ownerState:props}, other, {classes:PopoverClasses, children:(0,_jsxRuntime.jsx)(MenuMenuList, (0,_extends2.default)({onKeyDown:event => {
      "Tab" === event.key && (event.preventDefault(), onClose && onClose(event, "tabKeyDown"));
    }, actions:menuListActionsRef, autoFocus:autoFocus && (-1 === activeItemIndex || disableAutoFocusItem), autoFocusItem, variant}, MenuListProps, {className:(0,_clsx.default)(classes.list, MenuListProps.className), children}))}));
  });
  require.propTypes = {anchorEl:global.default.oneOfType([module.default, global.default.func]), autoFocus:global.default.bool, children:global.default.node, classes:global.default.object, className:global.default.string, disableAutoFocusItem:global.default.bool, MenuListProps:global.default.object, onClose:global.default.func, open:global.default.bool.isRequired, PaperProps:global.default.object, PopoverClasses:global.default.object, slotProps:global.default.shape({paper:global.default.oneOfType([global.default.func, 
  global.default.object]), root:global.default.oneOfType([global.default.func, global.default.object])}), slots:global.default.shape({paper:global.default.elementType, root:global.default.elementType}), sx:global.default.oneOfType([global.default.arrayOf(global.default.oneOfType([global.default.func, global.default.object, global.default.bool])), global.default.func, global.default.object]), transitionDuration:global.default.oneOfType([global.default.oneOf(["auto"]), global.default.number, global.default.shape({appear:global.default.number, 
  enter:global.default.number, exit:global.default.number})]), TransitionProps:global.default.object, variant:global.default.oneOf(["menu", "selectedMenu"])};
  exports.default = require;
};

//# sourceMappingURL=module$node_modules$$mui$material$node$Menu$Menu.js.map
