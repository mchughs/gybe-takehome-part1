shadow$provide.module$node_modules$$mui$x_date_pickers$node$PickersTextField$PickersInputBase$PickersInputBase = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  var _interopRequireDefault = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.PickersInputBaseSectionsContainer = exports.PickersInputBaseRoot = exports.PickersInputBase = void 0;
  var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")), _extends2 = _interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$extends")), React = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index"));
  global = _interopRequireDefault(require("module$node_modules$prop_types$index"));
  var _FormControl = require("module$node_modules$$mui$material$node$FormControl$index"), _styles = require("module$node_modules$$mui$material$node$styles$index"), _useForkRef = _interopRequireDefault(require("module$node_modules$$mui$utils$node$useForkRef$index"));
  module = require("module$node_modules$$mui$utils$node$index");
  var _composeClasses = _interopRequireDefault(require("module$node_modules$$mui$utils$node$composeClasses$index")), _capitalize = _interopRequireDefault(require("module$node_modules$$mui$utils$node$capitalize$index"));
  _interopRequireDefault = _interopRequireDefault(require("module$node_modules$$mui$utils$node$visuallyHidden$index"));
  var _pickersInputBaseClasses = require("module$node_modules$$mui$x_date_pickers$node$PickersTextField$PickersInputBase$pickersInputBaseClasses"), _PickersSectionList = require("module$node_modules$$mui$x_date_pickers$node$PickersSectionList$index"), _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  const _excluded = "elements areAllSectionsEmpty defaultValue label value onChange id autoFocus endAdornment startAdornment renderSuffix slots contentEditable tabIndex onInput onPaste onKeyDown fullWidth name readOnly inputProps inputRef sectionListRef".split(" "), PickersInputBaseRoot = exports.PickersInputBaseRoot = (0,_styles.styled)("div", {name:"MuiPickersInputBase", slot:"Root", overridesResolver:(props, styles) => styles.root})(({theme, ownerState}) => (0,_extends2.default)({}, theme.typography.body1, 
  {color:(theme.vars || theme).palette.text.primary, cursor:"text", padding:0, display:"flex", justifyContent:"flex-start", alignItems:"center", position:"relative", boxSizing:"border-box", letterSpacing:"0.00938em"}, ownerState.fullWidth && {width:"100%"})), PickersInputBaseSectionsContainer = exports.PickersInputBaseSectionsContainer = (0,_styles.styled)(_PickersSectionList.Unstable_PickersSectionListRoot, {name:"MuiPickersInputBase", slot:"SectionsContainer", overridesResolver:(props, styles) => 
  styles.sectionsContainer})(({theme, ownerState}) => (0,_extends2.default)({padding:"4px 0 5px", fontFamily:theme.typography.fontFamily, fontSize:"inherit", lineHeight:"1.4375em", flexGrow:1, outline:"none", display:"flex", flexWrap:"nowrap", overflow:"hidden", letterSpacing:"inherit", width:"182px"}, "small" === ownerState.size && {paddingTop:1}, "rtl" === theme.direction && {textAlign:"right /*! @noflip */"}, !(ownerState.adornedStart || ownerState.focused || ownerState.filled) && (0,_extends2.default)({color:"currentColor"}, 
  null == ownerState.label && (theme.vars ? {opacity:theme.vars.opacity.inputPlaceholder} : {opacity:"light" === theme.palette.mode ? 0.42 : 0.5}), null != ownerState.label && {opacity:0}))), PickersInputBaseSection = (0,_styles.styled)(_PickersSectionList.Unstable_PickersSectionListSection, {name:"MuiPickersInputBase", slot:"Section", overridesResolver:(props, styles) => styles.section})(({theme}) => ({fontFamily:theme.typography.fontFamily, fontSize:"inherit", letterSpacing:"inherit", lineHeight:"1.4375em", 
  display:"flex"})), PickersInputBaseSectionContent = (0,_styles.styled)(_PickersSectionList.Unstable_PickersSectionListSectionContent, {name:"MuiPickersInputBase", slot:"SectionContent", overridesResolver:(props, styles) => styles.content})(({theme}) => ({fontFamily:theme.typography.fontFamily, lineHeight:"1.4375em", letterSpacing:"inherit", width:"fit-content", outline:"none"})), PickersInputBaseSectionSeparator = (0,_styles.styled)(_PickersSectionList.Unstable_PickersSectionListSectionSeparator, 
  {name:"MuiPickersInputBase", slot:"Separator", overridesResolver:(props, styles) => styles.separator})(() => ({whiteSpace:"pre", letterSpacing:"inherit"})), PickersInputBaseInput = (0,_styles.styled)("input", {name:"MuiPickersInputBase", slot:"Input", overridesResolver:(props, styles) => styles.hiddenInput})((0,_extends2.default)({}, _interopRequireDefault.default)), useUtilityClasses = ownerState => {
    const {focused, disabled, error, classes, fullWidth, readOnly, color, size, endAdornment, startAdornment} = ownerState;
    ownerState = {root:["root", focused && !disabled && "focused", disabled && "disabled", readOnly && "readOnly", error && "error", fullWidth && "fullWidth", `color${(0,_capitalize.default)(color)}`, "small" === size && "inputSizeSmall", !!startAdornment && "adornedStart", !!endAdornment && "adornedEnd"], notchedOutline:["notchedOutline"], input:["input"], sectionsContainer:["sectionsContainer"], sectionContent:["sectionContent"], sectionBefore:["sectionBefore"], sectionAfter:["sectionAfter"]};
    return (0,_composeClasses.default)(ownerState, _pickersInputBaseClasses.getPickersInputBaseUtilityClass, classes);
  };
  (exports.PickersInputBase = React.forwardRef(function(inProps, ref) {
    var props = (0,_styles.useThemeProps)({props:inProps, name:"MuiPickersInputBase"});
    const {elements, areAllSectionsEmpty, value, onChange, id, endAdornment, startAdornment, renderSuffix, slots, contentEditable, tabIndex, onInput, onPaste, onKeyDown, name, readOnly, inputProps, inputRef, sectionListRef} = props;
    inProps = (0,_objectWithoutPropertiesLoose2.default)(props, _excluded);
    var rootRef = React.useRef(null);
    ref = (0,_useForkRef.default)(ref, rootRef);
    rootRef = (0,_useForkRef.default)(inputProps?.ref, inputRef);
    const muiFormControl = (0,_FormControl.useFormControl)();
    if (!muiFormControl) {
      throw Error("MUI X: PickersInputBase should always be used inside a PickersTextField component");
    }
    React.useEffect(() => {
      muiFormControl && muiFormControl.setAdornedStart(!!startAdornment);
    }, [muiFormControl, startAdornment]);
    React.useEffect(() => {
      if (muiFormControl) {
        if (areAllSectionsEmpty) {
          muiFormControl.onEmpty();
        } else {
          muiFormControl.onFilled();
        }
      }
    }, [muiFormControl, areAllSectionsEmpty]);
    props = (0,_extends2.default)({}, props, muiFormControl);
    const classes = useUtilityClasses(props);
    return (0,_jsxRuntime.jsxs)(slots?.root || PickersInputBaseRoot, (0,_extends2.default)({}, inProps, {className:classes.root, ownerState:props, "aria-invalid":muiFormControl.error, ref, children:[startAdornment, (0,_jsxRuntime.jsx)(_PickersSectionList.Unstable_PickersSectionList, {sectionListRef, elements, contentEditable, tabIndex, className:classes.sectionsContainer, onFocus:event => {
      if (muiFormControl.disabled) {
        event.stopPropagation();
      } else {
        muiFormControl.onFocus?.(event);
      }
    }, onBlur:muiFormControl.onBlur, onInput, onPaste, onKeyDown, slots:{root:slots?.input || PickersInputBaseSectionsContainer, section:PickersInputBaseSection, sectionContent:PickersInputBaseSectionContent, sectionSeparator:PickersInputBaseSectionSeparator}, slotProps:{root:{ownerState:props}, sectionContent:{className:_pickersInputBaseClasses.pickersInputBaseClasses.sectionContent}, sectionSeparator:({position}) => ({className:"before" === position ? _pickersInputBaseClasses.pickersInputBaseClasses.sectionBefore : 
    _pickersInputBaseClasses.pickersInputBaseClasses.sectionAfter})}}), endAdornment, renderSuffix ? renderSuffix((0,_extends2.default)({}, muiFormControl)) : null, (0,_jsxRuntime.jsx)(PickersInputBaseInput, (0,_extends2.default)({name, className:classes.input, value, onChange, id, "aria-hidden":"true", tabIndex:-1, readOnly, required:muiFormControl.required, disabled:muiFormControl.disabled}, inputProps, {ref:rootRef}))]}));
  })).propTypes = {areAllSectionsEmpty:global.default.bool.isRequired, className:global.default.string, component:global.default.elementType, contentEditable:global.default.bool.isRequired, elements:global.default.arrayOf(global.default.shape({after:global.default.object.isRequired, before:global.default.object.isRequired, container:global.default.object.isRequired, content:global.default.object.isRequired})).isRequired, endAdornment:global.default.node, fullWidth:global.default.bool, id:global.default.string, 
  inputProps:global.default.object, inputRef:module.refType, label:global.default.node, margin:global.default.oneOf(["dense", "none", "normal"]), name:global.default.string, onChange:global.default.func.isRequired, onClick:global.default.func.isRequired, onInput:global.default.func.isRequired, onKeyDown:global.default.func.isRequired, onPaste:global.default.func.isRequired, ownerState:global.default.any, readOnly:global.default.bool, renderSuffix:global.default.func, sectionListRef:global.default.oneOfType([global.default.func, 
  global.default.shape({current:global.default.shape({getRoot:global.default.func.isRequired, getSectionContainer:global.default.func.isRequired, getSectionContent:global.default.func.isRequired, getSectionIndexFromDOMElement:global.default.func.isRequired})})]), slots:global.default.object, startAdornment:global.default.node, style:global.default.object, sx:global.default.oneOfType([global.default.arrayOf(global.default.oneOfType([global.default.func, global.default.object, global.default.bool])), 
  global.default.func, global.default.object]), value:global.default.string.isRequired};
};

//# sourceMappingURL=module$node_modules$$mui$x_date_pickers$node$PickersTextField$PickersInputBase$PickersInputBase.js.map
