shadow$provide.module$node_modules$$mui$system$createStyled = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  function shouldForwardProp(prop) {
    return "ownerState" !== prop && "theme" !== prop && "sx" !== prop && "as" !== prop;
  }
  function resolveTheme({defaultTheme, theme, themeId}) {
    return 0 === Object.keys(theme).length ? defaultTheme : theme[themeId] || theme;
  }
  function defaultOverridesResolver(slot) {
    return slot ? (props, styles) => styles[slot] : null;
  }
  function processStyleArg(callableStyle, _ref) {
    let {ownerState} = _ref, props = (0,_objectWithoutPropertiesLoose2.default)(_ref, _excluded);
    callableStyle = "function" === typeof callableStyle ? callableStyle((0,_extends2.default)({ownerState}, props)) : callableStyle;
    if (Array.isArray(callableStyle)) {
      return callableStyle.flatMap(resolvedStyle => processStyleArg(resolvedStyle, (0,_extends2.default)({ownerState}, props)));
    }
    if (callableStyle && "object" === typeof callableStyle && Array.isArray(callableStyle.variants)) {
      ({variants:_ref = []} = callableStyle);
      let result = (0,_objectWithoutPropertiesLoose2.default)(callableStyle, _excluded2);
      _ref.forEach(variant => {
        let isMatch = !0;
        "function" === typeof variant.props ? isMatch = variant.props((0,_extends2.default)({ownerState}, props, ownerState)) : Object.keys(variant.props).forEach(key => {
          (null == ownerState ? void 0 : ownerState[key]) !== variant.props[key] && props[key] !== variant.props[key] && (isMatch = !1);
        });
        isMatch && (Array.isArray(result) || (result = [result]), result.push("function" === typeof variant.style ? variant.style((0,_extends2.default)({ownerState}, props, ownerState)) : variant.style));
      });
      return result;
    }
    return callableStyle;
  }
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = function(input = {}) {
    const {themeId, defaultTheme = systemDefaultTheme, rootShouldForwardProp = shouldForwardProp, slotShouldForwardProp = shouldForwardProp} = input, systemSx = props => (0,_styleFunctionSx.default)((0,_extends2.default)({}, props, {theme:resolveTheme((0,_extends2.default)({}, props, {defaultTheme, themeId}))}));
    systemSx.__mui_systemSx = !0;
    return (tag, inputOptions = {}) => {
      (0,_styledEngine.internal_processStyles)(tag, styles => styles.filter(style => !(null != style && style.__mui_systemSx)));
      const {name:componentName, slot:componentSlot, skipVariantsResolver:inputSkipVariantsResolver, skipSx:inputSkipSx, overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))} = inputOptions;
      inputOptions = (0,_objectWithoutPropertiesLoose2.default)(inputOptions, _excluded3);
      const skipVariantsResolver = void 0 !== inputSkipVariantsResolver ? inputSkipVariantsResolver : componentSlot && "Root" !== componentSlot && "root" !== componentSlot || !1, skipSx = inputSkipSx || !1;
      var label;
      componentName && (label = `${componentName}-${lowercaseFirstLetter(componentSlot || "Root")}`);
      let shouldForwardPropOption = shouldForwardProp;
      "Root" === componentSlot || "root" === componentSlot ? shouldForwardPropOption = rootShouldForwardProp : componentSlot ? shouldForwardPropOption = slotShouldForwardProp : "string" === typeof tag && 96 < tag.charCodeAt(0) && (shouldForwardPropOption = void 0);
      const defaultStyledResolver = (0,_styledEngine.default)(tag, (0,_extends2.default)({shouldForwardProp:shouldForwardPropOption, label}, inputOptions)), transformStyleArg = stylesArg => "function" === typeof stylesArg && stylesArg.__emotion_real !== stylesArg || (0,_deepmerge.isPlainObject)(stylesArg) ? props => processStyleArg(stylesArg, (0,_extends2.default)({}, props, {theme:resolveTheme({theme:props.theme, defaultTheme, themeId})})) : stylesArg;
      label = (styleArg, ...expressions) => {
        let transformedStyleArg = transformStyleArg(styleArg);
        const expressionsWithDefaultTheme = expressions ? expressions.map(transformStyleArg) : [];
        componentName && overridesResolver && expressionsWithDefaultTheme.push(props => {
          const theme = resolveTheme((0,_extends2.default)({}, props, {defaultTheme, themeId}));
          if (!theme.components || !theme.components[componentName] || !theme.components[componentName].styleOverrides) {
            return null;
          }
          const resolvedStyleOverrides = {};
          Object.entries(theme.components[componentName].styleOverrides).forEach(([slotKey, slotStyle]) => {
            resolvedStyleOverrides[slotKey] = processStyleArg(slotStyle, (0,_extends2.default)({}, props, {theme}));
          });
          return overridesResolver(props, resolvedStyleOverrides);
        });
        componentName && !skipVariantsResolver && expressionsWithDefaultTheme.push(props => {
          var _theme$components;
          const theme = resolveTheme((0,_extends2.default)({}, props, {defaultTheme, themeId})), themeVariants = null == theme || null == (_theme$components = theme.components) || null == (_theme$components = _theme$components[componentName]) ? void 0 : _theme$components.variants;
          return processStyleArg({variants:themeVariants}, (0,_extends2.default)({}, props, {theme}));
        });
        skipSx || expressionsWithDefaultTheme.push(systemSx);
        expressions = expressionsWithDefaultTheme.length - expressions.length;
        Array.isArray(styleArg) && 0 < expressions && (expressions = Array(expressions).fill(""), transformedStyleArg = [...styleArg, ...expressions], transformedStyleArg.raw = [...styleArg.raw, ...expressions]);
        styleArg = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);
        let displayName;
        componentName && (displayName = `${componentName}${(0,_capitalize.default)(componentSlot || "")}`);
        void 0 === displayName && (displayName = `Styled(${(0,_getDisplayName.default)(tag)})`);
        styleArg.displayName = displayName;
        tag.muiName && (styleArg.muiName = tag.muiName);
        return styleArg;
      };
      defaultStyledResolver.withConfig && (label.withConfig = defaultStyledResolver.withConfig);
      return label;
    };
  };
  exports.shouldForwardProp = shouldForwardProp;
  exports.systemDefaultTheme = void 0;
  var _extends2 = global(require("module$node_modules$$babel$runtime$helpers$extends")), _objectWithoutPropertiesLoose2 = global(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")), _styledEngine = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$$mui$styled_engine$node$index")), _deepmerge = require("module$node_modules$$mui$utils$node$deepmerge$index"), _capitalize = global(require("module$node_modules$$mui$utils$node$capitalize$index")), _getDisplayName = global(require("module$node_modules$$mui$utils$node$getDisplayName$index"));
  module = global(require("module$node_modules$$mui$system$createTheme$index"));
  var _styleFunctionSx = global(require("module$node_modules$$mui$system$styleFunctionSx$index"));
  const _excluded = ["ownerState"], _excluded2 = ["variants"], _excluded3 = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"], systemDefaultTheme = exports.systemDefaultTheme = (0,module.default)(), lowercaseFirstLetter = string => string ? string.charAt(0).toLowerCase() + string.slice(1) : string;
};

//# sourceMappingURL=module$node_modules$$mui$system$createStyled.js.map
