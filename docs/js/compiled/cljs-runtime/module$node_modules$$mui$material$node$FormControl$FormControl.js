shadow$provide.module$node_modules$$mui$material$node$FormControl$FormControl = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  "use client";
  module = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = void 0;
  var _objectWithoutPropertiesLoose2 = module(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")), _extends2 = module(require("module$node_modules$$babel$runtime$helpers$extends")), React = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$react$index"));
  global = module(require("module$node_modules$prop_types$index"));
  var _clsx = module(require("module$node_modules$clsx$dist$clsx")), _composeClasses = module(require("module$node_modules$$mui$utils$node$composeClasses$index")), _useThemeProps = module(require("module$node_modules$$mui$material$node$styles$useThemeProps")), _styled = module(require("module$node_modules$$mui$material$node$styles$styled")), _utils = require("module$node_modules$$mui$material$node$InputBase$utils"), _capitalize = module(require("module$node_modules$$mui$material$node$utils$capitalize")), 
  _isMuiElement = module(require("module$node_modules$$mui$material$node$utils$isMuiElement")), _FormControlContext = module(require("module$node_modules$$mui$material$node$FormControl$FormControlContext")), _formControlClasses = require("module$node_modules$$mui$material$node$FormControl$formControlClasses"), _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  const _excluded = "children className color component disabled error focused fullWidth hiddenLabel margin required size variant".split(" "), useUtilityClasses = ownerState => {
    const {classes, margin, fullWidth} = ownerState;
    ownerState = {root:["root", "none" !== margin && `margin${(0,_capitalize.default)(margin)}`, fullWidth && "fullWidth"]};
    return (0,_composeClasses.default)(ownerState, _formControlClasses.getFormControlUtilityClasses, classes);
  }, FormControlRoot = (0,_styled.default)("div", {name:"MuiFormControl", slot:"Root", overridesResolver:({ownerState}, styles) => (0,_extends2.default)({}, styles.root, styles[`margin${(0,_capitalize.default)(ownerState.margin)}`], ownerState.fullWidth && styles.fullWidth)})(({ownerState}) => (0,_extends2.default)({display:"inline-flex", flexDirection:"column", position:"relative", minWidth:0, padding:0, margin:0, border:0, verticalAlign:"top"}, "normal" === ownerState.margin && {marginTop:16, marginBottom:8}, 
  "dense" === ownerState.margin && {marginTop:8, marginBottom:4}, ownerState.fullWidth && {width:"100%"}));
  require = React.forwardRef(function(inProps, ref) {
    var props = (0,_useThemeProps.default)({props:inProps, name:"MuiFormControl"});
    const {children, className, color = "primary", component = "div", disabled = !1, error = !1, focused:visuallyFocused, fullWidth = !1, hiddenLabel = !1, margin = "none", required = !1, size = "medium", variant = "outlined"} = props;
    inProps = (0,_objectWithoutPropertiesLoose2.default)(props, _excluded);
    props = (0,_extends2.default)({}, props, {color, component, disabled, error, fullWidth, hiddenLabel, margin, required, size, variant});
    const classes = useUtilityClasses(props), [adornedStart, setAdornedStart] = React.useState(() => {
      let initialAdornedStart = !1;
      children && React.Children.forEach(children, child => {
        (0,_isMuiElement.default)(child, ["Input", "Select"]) && (child = (0,_isMuiElement.default)(child, ["Select"]) ? child.props.input : child) && (0,_utils.isAdornedStart)(child.props) && (initialAdornedStart = !0);
      });
      return initialAdornedStart;
    }), [filled, setFilled] = React.useState(() => {
      let initialFilled = !1;
      children && React.Children.forEach(children, child => {
        (0,_isMuiElement.default)(child, ["Input", "Select"]) && ((0,_utils.isFilled)(child.props, !0) || (0,_utils.isFilled)(child.props.inputProps, !0)) && (initialFilled = !0);
      });
      return initialFilled;
    }), [focusedState, setFocused] = React.useState(!1);
    disabled && focusedState && setFocused(!1);
    const focused = void 0 === visuallyFocused || disabled ? focusedState : visuallyFocused;
    let registerEffect;
    const registeredInput = React.useRef(!1);
    registerEffect = () => {
      registeredInput.current && console.error("MUI: There are multiple `InputBase` components inside a FormControl.\nThis creates visual inconsistencies, only use one `InputBase`.");
      registeredInput.current = !0;
      return () => {
        registeredInput.current = !1;
      };
    };
    const childContext = React.useMemo(() => ({adornedStart, setAdornedStart, color, disabled, error, filled, focused, fullWidth, hiddenLabel, size, onBlur:() => {
      setFocused(!1);
    }, onEmpty:() => {
      setFilled(!1);
    }, onFilled:() => {
      setFilled(!0);
    }, onFocus:() => {
      setFocused(!0);
    }, registerEffect, required, variant}), [adornedStart, color, disabled, error, filled, focused, fullWidth, hiddenLabel, registerEffect, required, size, variant]);
    return (0,_jsxRuntime.jsx)(_FormControlContext.default.Provider, {value:childContext, children:(0,_jsxRuntime.jsx)(FormControlRoot, (0,_extends2.default)({as:component, ownerState:props, className:(0,_clsx.default)(classes.root, className), ref}, inProps, {children}))});
  });
  require.propTypes = {children:global.default.node, classes:global.default.object, className:global.default.string, color:global.default.oneOfType([global.default.oneOf("primary secondary error info success warning".split(" ")), global.default.string]), component:global.default.elementType, disabled:global.default.bool, error:global.default.bool, focused:global.default.bool, fullWidth:global.default.bool, hiddenLabel:global.default.bool, margin:global.default.oneOf(["dense", "none", "normal"]), 
  required:global.default.bool, size:global.default.oneOfType([global.default.oneOf(["medium", "small"]), global.default.string]), sx:global.default.oneOfType([global.default.arrayOf(global.default.oneOfType([global.default.func, global.default.object, global.default.bool])), global.default.func, global.default.object]), variant:global.default.oneOf(["filled", "outlined", "standard"])};
  exports.default = require;
};

//# sourceMappingURL=module$node_modules$$mui$material$node$FormControl$FormControl.js.map
